{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport NomencladorList from './NomencladorList';\nimport { get } from '../api-call/service';\nimport Loading from '../common/Loading';\nimport { ERRORS, LOADING, NOMENCLADOR } from '../../labels';\nimport Alert from '../common/Alert';\nimport { objToQueryString } from '../common/helpers';\nimport TableFilters from '../common/TableFilters';\nimport filterConfig from './FiltersConfig';\nexport default function Nomenclador() {\n  const INITIAL_FILTER = {\n    page: 1,\n    size: 20,\n    capitulo: '',\n    modalidadPrestacion: ''\n  };\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(_objectSpread({}, INITIAL_FILTER));\n  const {\n    0: filterQueryStr,\n    1: setFilterQueryStr\n  } = useState(objToQueryString(filters));\n  const {\n    data,\n    error: errorOnGet,\n    mutate\n  } = useSWR(`${NOMENCLADOR.route}?` + filterQueryStr);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: info,\n    1: setInfo\n  } = useState(null);\n  const {\n    0: showFilters,\n    1: setShowFilters\n  } = useState(false);\n\n  const handleSync = async () => {\n    get(`${NOMENCLADOR.route}/sync`).then(response => {\n      mutate();\n    });\n  };\n\n  const handleChangePagination = pagination => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      page: pagination.page,\n      size: pagination.pageSize\n    }));\n  };\n\n  const handleFilter = newFilters => {\n    setFilters(_objectSpread(_objectSpread({}, INITIAL_FILTER), newFilters));\n    setShowFilters(false);\n  };\n\n  const handleCancelFilter = () => {\n    setFilters(_objectSpread({}, INITIAL_FILTER));\n    setShowFilters(false);\n  };\n\n  useEffect(() => {\n    setFilterQueryStr(objToQueryString(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsx(NomencladorList, {\n        data: data,\n        onSync: handleSync,\n        onPaginationChange: handleChangePagination,\n        onFilter: () => {\n          setShowFilters(!showFilters);\n        }\n      }), /*#__PURE__*/_jsx(TableFilters, {\n        config: filterConfig,\n        data: filters,\n        onSubmit: handleFilter,\n        onCancel: handleCancelFilter,\n        show: showFilters\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(NOMENCLADOR.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errorOnGet || error || info,\n      severity: info ? 'success' : 'error',\n      message: info ? info : error ? ERRORS[error](NOMENCLADOR.name) : ERRORS.onGet(NOMENCLADOR.name),\n      autoHideAfter: 5500,\n      onClose: () => {\n        setError(null);\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}