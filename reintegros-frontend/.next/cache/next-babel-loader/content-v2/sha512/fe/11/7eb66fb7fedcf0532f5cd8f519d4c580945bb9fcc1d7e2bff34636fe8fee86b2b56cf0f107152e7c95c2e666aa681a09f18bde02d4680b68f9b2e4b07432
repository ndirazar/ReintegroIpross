{"ast":null,"code":"import _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { NOMENCLADOR } from '../../labels';\nimport { get } from '../api-call/service';\nimport { FieldType } from '../builder/FormField';\nvar configNomenclador = [{\n  name: 'areaCubrir',\n  type: FieldType[\"int\"],\n  label: NOMENCLADOR.fields['areaCubrir'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'capitulo',\n  type: FieldType.options,\n  label: NOMENCLADOR.fields['capitulo'],\n  options: function () {\n    var _options = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get('/api/capitulos/');\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent.data.results.map(function (c) {\n                return {\n                  value: c.capitulo,\n                  label: \"\".concat(c.capitulo, \"-\").concat(c.descripcion)\n                };\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function options() {\n      return _options.apply(this, arguments);\n    }\n\n    return options;\n  }(),\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'codigo',\n  type: FieldType[\"int\"],\n  label: NOMENCLADOR.fields['codigo'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'complejidadPractica',\n  type: FieldType[\"int\"],\n  label: NOMENCLADOR.fields['complejidadPractica'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'descripcion',\n  type: FieldType.string,\n  label: NOMENCLADOR.fields['descripcion'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'fechaNorma',\n  type: FieldType.date,\n  label: NOMENCLADOR.fields['fechaNorma'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'modalidadPresentacion',\n  type: FieldType.options,\n  label: NOMENCLADOR.fields['modalidadPresentacion'],\n  options: NOMENCLADOR.optionsModalidadPresentacion,\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'numeroNormaRespaldatoria',\n  type: FieldType.string,\n  label: NOMENCLADOR.fields['numeroNormaRespaldatoria'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'periodoTope',\n  type: FieldType.options,\n  options: NOMENCLADOR.optionsPeriodoTope,\n  label: NOMENCLADOR.fields['periodoTope'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'programaSanitario',\n  type: FieldType.string,\n  label: NOMENCLADOR.fields['programaSanitario'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'topesCoberturaPeriodo',\n  type: FieldType[\"int\"],\n  label: NOMENCLADOR.fields['topesCoberturaPeriodo'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'valorIpross',\n  type: FieldType[\"float\"],\n  label: NOMENCLADOR.fields['valorIpross'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}];\nexport default configNomenclador;","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/nomenclador/FormConfig.ts"],"names":["NOMENCLADOR","get","FieldType","configNomenclador","name","type","label","fields","styling","columns","rules","required","options","data","results","map","c","value","capitulo","descripcion","string","date","optionsModalidadPresentacion","optionsPeriodoTope"],"mappings":"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","sourcesContent":["import { NOMENCLADOR } from '../../labels';\nimport { get } from '../api-call/service';\nimport { FormConfig } from '../builder/FormConfig';\nimport { FieldType } from '../builder/FormField';\nimport { FormDataNomenclador } from './types';\n\nconst configNomenclador: FormConfig<FormDataNomenclador> = [\n  {\n    name: 'areaCubrir',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['areaCubrir'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n\n  {\n    name: 'capitulo',\n    type: FieldType.options,\n    label: NOMENCLADOR.fields['capitulo'],\n    options: async () => {\n      return (await get('/api/capitulos/')).data.results.map((c) => ({\n        value: c.capitulo,\n        label: `${c.capitulo}-${c.descripcion}`,\n      }));\n    },\n    styling: {\n      columns: 4,\n    },\n  },\n  {\n    name: 'codigo',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['codigo'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'complejidadPractica',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['complejidadPractica'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'descripcion',\n    type: FieldType.string,\n    label: NOMENCLADOR.fields['descripcion'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'fechaNorma',\n    type: FieldType.date,\n    label: NOMENCLADOR.fields['fechaNorma'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'modalidadPresentacion',\n    type: FieldType.options,\n    label: NOMENCLADOR.fields['modalidadPresentacion'],\n    options: NOMENCLADOR.optionsModalidadPresentacion,\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n\n  {\n    name: 'numeroNormaRespaldatoria',\n    type: FieldType.string,\n    label: NOMENCLADOR.fields['numeroNormaRespaldatoria'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'periodoTope',\n    type: FieldType.options,\n    options: NOMENCLADOR.optionsPeriodoTope,\n    label: NOMENCLADOR.fields['periodoTope'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'programaSanitario',\n    type: FieldType.string,\n    label: NOMENCLADOR.fields['programaSanitario'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'topesCoberturaPeriodo',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['topesCoberturaPeriodo'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'valorIpross',\n    type: FieldType.float,\n    label: NOMENCLADOR.fields['valorIpross'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n];\n\nexport default configNomenclador;\n"]},"metadata":{},"sourceType":"module"}