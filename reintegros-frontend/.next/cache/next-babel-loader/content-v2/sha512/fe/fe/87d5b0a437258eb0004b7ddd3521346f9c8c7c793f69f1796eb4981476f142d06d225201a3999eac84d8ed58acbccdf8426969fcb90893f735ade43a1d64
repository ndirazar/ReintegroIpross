{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport { Box } from '@material-ui/core'; //App imports\n\nimport SolicitudesList from './SolicitudesList';\nimport { remove, put, get } from '../api-call/service';\nimport useLoading from '../common/hooks/Loading';\nimport useAlert from '../common/hooks/Alert';\nimport { FormStepper } from './Stepper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { ERRORS, PRESTACIONES, SOLICITUDES } from '../../labels';\nimport { objToQueryString, formatDate, getUser, strToDate, isUserCasaCentral, exportTableData } from '../common/helpers';\nimport { addDays, format, parseISO } from 'date-fns';\nimport TableFilters from '../common/TableFilters';\nimport filterConfig from './FiltersConfig'; // import Form from '../builder/Form';\n// import configPrestaciones from './prestaciones/FormConfig';\n\nimport Modal from '../common/Modal';\nimport { FormEditPrestaciones } from './prestaciones/FormEditPrestaciones';\nimport Alert from '../common/Alert';\nexport default function Solicitudes() {\n  var _user$delegacionPrinc;\n\n  const user = getUser();\n  const INITIAL_FILTER = {\n    page: 1,\n    size: 20,\n    delegacion: [isUserCasaCentral() ? '' : (user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id) || ''],\n    fecha_alta__gt: '',\n    fecha_alta__lt: ''\n  };\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(_objectSpread({}, INITIAL_FILTER));\n  const {\n    0: filterQueryStr,\n    1: setFilterQueryStr\n  } = useState(objToQueryString(filters));\n  const {\n    data,\n    error: errorGet,\n    mutate\n  } = useSWR(`${SOLICITUDES.route}/?` + filterQueryStr);\n  const {\n    0: error,\n    1: setError\n  } = useState(errorGet);\n  const {\n    0: info,\n    1: setInfo\n  } = useState(null);\n  const [showStepper, setShowStepper] = React.useState(false);\n  const methods = useForm({\n    mode: 'onBlur'\n  });\n  const {\n    isLoading,\n    unsetLoading\n  } = useLoading();\n  const {\n    addAlert,\n    removeAlert\n  } = useAlert();\n  const {\n    0: showFilters,\n    1: setShowFilters\n  } = useState(false);\n  const {\n    0: editPrestacion,\n    1: setEditPrestacion\n  } = useState(null);\n  const {\n    0: showEditPrestacion,\n    1: setShowEditPrestacion\n  } = useState(false);\n  useEffect(() => {\n    if (!data) {\n      if (errorGet) {\n        unsetLoading();\n        addAlert(ERRORS.onGet(SOLICITUDES.name), 'error');\n      } else {\n        isLoading();\n      }\n    } else {\n      unsetLoading();\n\n      if (!error) {\n        removeAlert();\n      } else {\n        addAlert(error, 'error');\n      }\n    }\n  }, [data, errorGet, error]);\n\n  const handleDelete = async id => {\n    try {\n      await remove(`${SOLICITUDES.route}`, id);\n    } catch (error) {\n      setError(ERRORS.onDeactivate(SOLICITUDES.name));\n    }\n\n    mutate(`${SOLICITUDES.route}?` + filterQueryStr);\n  };\n\n  const handleShowStepper = () => {\n    window.scrollTo(0, 0);\n    setShowStepper(true);\n  };\n\n  const handleFinished = () => {\n    mutate(`${SOLICITUDES.route}?${filterQueryStr}`);\n  };\n\n  const handleChangePagination = pagination => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      page: pagination.page,\n      size: pagination.pageSize\n    }));\n  };\n\n  const handleFilter = filters => {\n    if (filters.fecha_alta__gt) {\n      filters.fecha_alta__gt = formatDate(filters.fecha_alta__gt);\n    } else {\n      delete filters.fecha_alta__gt;\n    }\n\n    if (filters.fecha_alta__lt) {\n      filters.fecha_alta__lt = formatDate(addDays(filters.fecha_alta__lt, 1));\n    } else {\n      delete filters.fecha_alta__lt;\n    }\n\n    setFilters(_objectSpread(_objectSpread({}, INITIAL_FILTER), filters));\n    setShowFilters(false);\n  };\n\n  const handleCancelFilter = () => {\n    setFilters(_objectSpread({}, INITIAL_FILTER));\n  };\n\n  const handleCloseFilter = () => {\n    setShowFilters(false);\n  };\n\n  const handleEditPrestacion = async data => {\n    var _data$nomenclador, _data$nomenclador2, _data$nomenclador2$ca, _data$nomenclador3, _data$nomenclador3$ca, _data$nomenclador4, _data$nomenclador5, _data$nomenclador6, _data$nomenclador6$ca, _data$nomenclador7, _data$nomenclador7$ca, _data$nomenclador8, _data$prestador, _data$prestador2, _data$prestador3, _data$prestador4, _data$nomenclador9, _data$nomenclador10;\n\n    //TODO\n    if (data.auditoria) {\n      addAlert(ERRORS.onAlreadyAudited(), 'error');\n      return false;\n    }\n\n    const valorIpross = (_data$nomenclador = data.nomenclador) === null || _data$nomenclador === void 0 ? void 0 : _data$nomenclador.valorIpross;\n    const montoTotal = valorIpross * data.cantidad;\n    const cobertura = data.cobertura;\n    const montoReintegrar = (montoTotal * parseFloat(cobertura) / 100).toFixed(2);\n\n    const prestacion = _objectSpread(_objectSpread({}, data), {}, {\n      capitulo: {\n        label: (_data$nomenclador2 = data.nomenclador) === null || _data$nomenclador2 === void 0 ? void 0 : (_data$nomenclador2$ca = _data$nomenclador2.capitulo) === null || _data$nomenclador2$ca === void 0 ? void 0 : _data$nomenclador2$ca.descripcion,\n        value: (_data$nomenclador3 = data.nomenclador) === null || _data$nomenclador3 === void 0 ? void 0 : (_data$nomenclador3$ca = _data$nomenclador3.capitulo) === null || _data$nomenclador3$ca === void 0 ? void 0 : _data$nomenclador3$ca.capitulo\n      },\n      nomenclador: {\n        label: `${(_data$nomenclador4 = data.nomenclador) === null || _data$nomenclador4 === void 0 ? void 0 : _data$nomenclador4.codigo}-${(_data$nomenclador5 = data.nomenclador) === null || _data$nomenclador5 === void 0 ? void 0 : _data$nomenclador5.descripcion} (${(_data$nomenclador6 = data.nomenclador) === null || _data$nomenclador6 === void 0 ? void 0 : (_data$nomenclador6$ca = _data$nomenclador6.capitulo) === null || _data$nomenclador6$ca === void 0 ? void 0 : _data$nomenclador6$ca.capitulo}-${(_data$nomenclador7 = data.nomenclador) === null || _data$nomenclador7 === void 0 ? void 0 : (_data$nomenclador7$ca = _data$nomenclador7.capitulo) === null || _data$nomenclador7$ca === void 0 ? void 0 : _data$nomenclador7$ca.descripcion})`,\n        value: (_data$nomenclador8 = data.nomenclador) === null || _data$nomenclador8 === void 0 ? void 0 : _data$nomenclador8.id\n      },\n      prestador: {\n        label: `${(_data$prestador = data.prestador) === null || _data$prestador === void 0 ? void 0 : _data$prestador.matricula} - ${(_data$prestador2 = data.prestador) === null || _data$prestador2 === void 0 ? void 0 : _data$prestador2.nombre} ${(_data$prestador3 = data.prestador) === null || _data$prestador3 === void 0 ? void 0 : _data$prestador3.apellido}`,\n        value: (_data$prestador4 = data.prestador) === null || _data$prestador4 === void 0 ? void 0 : _data$prestador4.id\n      },\n      modalidad: (_data$nomenclador9 = data.nomenclador) === null || _data$nomenclador9 === void 0 ? void 0 : _data$nomenclador9.modalidadPrestacion,\n      valorIprossNomenclador: (_data$nomenclador10 = data.nomenclador) === null || _data$nomenclador10 === void 0 ? void 0 : _data$nomenclador10.valorIpross,\n      montoReintegrar: montoReintegrar,\n      montoTotal: montoTotal.toFixed(2),\n      fechaPractica: strToDate(data.fechaPractica).toISOString(),\n      estadoActual: data.estadoActual || 'enCurso',\n      // unidad: data.nomenclador?.unidad,\n      periodo: data.periodo\n    });\n\n    if (data.fechaPractica && data.fechaPracticaHasta) {\n      prestacion.isDateRange = 'range';\n    } else {\n      prestacion.isDateRange = 'date';\n    }\n\n    setEditPrestacion(prestacion);\n    setShowEditPrestacion(true);\n  };\n\n  const handleSubmitPrestacion = async data => {\n    var _data$nomenclador11, _data$nomenclador12, _data$prestador5, _data$prestador6, _data$solicitud;\n\n    const prestacion = _objectSpread(_objectSpread({}, data), {}, {\n      nomenclador: (_data$nomenclador11 = data.nomenclador) !== null && _data$nomenclador11 !== void 0 && _data$nomenclador11.value ? (_data$nomenclador12 = data.nomenclador) === null || _data$nomenclador12 === void 0 ? void 0 : _data$nomenclador12.value : data.nomenclador,\n      prestador: (_data$prestador5 = data.prestador) !== null && _data$prestador5 !== void 0 && _data$prestador5.value ? (_data$prestador6 = data.prestador) === null || _data$prestador6 === void 0 ? void 0 : _data$prestador6.value : data.prestador,\n      solicitud: (_data$solicitud = data.solicitud) === null || _data$solicitud === void 0 ? void 0 : _data$solicitud.id\n    });\n\n    if (data !== null && data !== void 0 && data.fechaPractica && typeof (data === null || data === void 0 ? void 0 : data.fechaPractica) === 'string') {\n      data.fechaPractica = parseISO(data.fechaPractica);\n    }\n\n    prestacion.fechaPractica = format(data === null || data === void 0 ? void 0 : data.fechaPractica, 'yyyy-MM-dd');\n\n    if (data !== null && data !== void 0 && data.fechaPracticaHasta) {\n      if (typeof (data === null || data === void 0 ? void 0 : data.fechaPracticaHasta) === 'string') {\n        data.fechaPracticaHasta = parseISO(data.fechaPracticaHasta);\n      }\n\n      prestacion.fechaPracticaHasta = format(data === null || data === void 0 ? void 0 : data.fechaPracticaHasta, 'yyyy-MM-dd');\n    }\n\n    try {\n      if (data !== null && data !== void 0 && data.id) {\n        await put(PRESTACIONES.route, _objectSpread({}, prestacion), data.id);\n      }\n\n      setError(null);\n      setEditPrestacion(null);\n      setInfo(SOLICITUDES.messages.successEditPrestacion);\n      mutate();\n    } catch (error) {\n      if (data !== null && data !== void 0 && data.id) {\n        setError('onEdit');\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilterQueryStr(objToQueryString(filters));\n  }, [filters]);\n\n  const handleExport = async (allColumns, allData) => {\n    var _await$get, _await$get$data;\n\n    const exportedData = (_await$get = await get(`${SOLICITUDES.route}/?` + objToQueryString(_objectSpread(_objectSpread({}, filters), {}, {\n      size: data.count || 10000\n    })))) === null || _await$get === void 0 ? void 0 : (_await$get$data = _await$get.data) === null || _await$get$data === void 0 ? void 0 : _await$get$data.results;\n    exportTableData('Solicitudes', allColumns, exportedData);\n  };\n\n  const closeEditModal = () => {\n    setEditPrestacion(null);\n    setShowEditPrestacion(false);\n  };\n\n  return /*#__PURE__*/_jsxs(Box, {\n    style: {\n      position: 'relative'\n    },\n    children: [showStepper && /*#__PURE__*/_jsx(FormProvider, _objectSpread(_objectSpread({}, methods), {}, {\n      children: /*#__PURE__*/_jsx(FormStepper, {\n        setShowStepper: setShowStepper,\n        onFinished: handleFinished\n      })\n    })), editPrestacion && /*#__PURE__*/_jsx(Modal, {\n      customClasses: {},\n      open: showEditPrestacion,\n      onClose: closeEditModal,\n      title: SOLICITUDES.modalEditPrestacion.mainTitle,\n      breadcrumbs: '',\n      maxWidth: 'md',\n      children: /*#__PURE__*/_jsx(FormEditPrestaciones, {\n        prestacion: editPrestacion,\n        submit: handleSubmitPrestacion,\n        onCancel: closeEditModal\n      })\n    }), /*#__PURE__*/_jsx(SolicitudesList, {\n      data: data,\n      handleDelete: handleDelete,\n      onEdit: () => {},\n      onShowStepper: handleShowStepper,\n      onPaginationChange: handleChangePagination,\n      onFilter: () => {\n        setShowFilters(true);\n      },\n      onEditPrestacion: p => {\n        handleEditPrestacion(p);\n      },\n      onExport: handleExport\n    }), /*#__PURE__*/_jsx(TableFilters, {\n      config: filterConfig,\n      data: filters,\n      onSubmit: handleFilter,\n      onCancel: handleCancelFilter,\n      onClose: handleCloseFilter,\n      show: showFilters\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: error || info,\n      severity: info ? 'success' : 'error',\n      message: info ? info : error ? ERRORS[error](SOLICITUDES.name) : ERRORS.onGet(SOLICITUDES.name),\n      autoHideAfter: 5500,\n      onClose: () => {\n        setError(null);\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}