{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Divider, List, ListItem, ListItemText, Typography, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { CUPONES } from '../../labels';\nimport Table from '../common/Table';\nimport Loading from '../common/Loading';\nimport Alert from '../common/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport { send } from '../api-call/service';\nimport Modal from '../common/Modal';\nimport SubTitleModalCreateLote from './SubTitleModalCreateLote';\nimport ChangeState from './ChangeState';\nimport { isUserAdmin, isUserContaduria } from '../common/helpers';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    typeCupon: {\n      marginLeft: '8px'\n    }\n  };\n});\nexport default function CuponesList(_ref) {\n  var _data, _data2, _dataPreview$cupones, _dataPreview$lotes;\n\n  var data = _ref.data,\n      handleDelete = _ref.handleDelete,\n      onEdit = _ref.onEdit,\n      onPaginationChange = _ref.onPaginationChange,\n      onHandleSetState = _ref.onHandleSetState;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      openModal = _useState[0],\n      setOpenModal = _useState[1];\n\n  var _useState2 = useState({}),\n      dataPreview = _useState2[0],\n      setDataPreview = _useState2[1];\n\n  var _useState3 = useState(false),\n      processing = _useState3[0],\n      setProcessing = _useState3[1];\n\n  var _useState4 = useState(null),\n      info = _useState4[0],\n      setInfo = _useState4[1];\n\n  var _useState5 = useState(false),\n      openModalSetState = _useState5[0],\n      setOpenModalSetState = _useState5[1];\n\n  var dynamicRenders = {\n    estado: function estado(rowData) {\n      if (rowData.estado === 'pagoRechazado') {\n        return /*#__PURE__*/_jsx(ChangeState, {\n          onSetState: onSetState,\n          rowData: rowData\n        });\n      } else {\n        return /*#__PURE__*/_jsx(Typography, {\n          children: rowData.estado\n        });\n      }\n    }\n  };\n\n  var onSetState = function onSetState(stateSelected, cuponId) {\n    if (stateSelected.includes('abierto')) {\n      onHandleSetState(stateSelected, cuponId);\n    }\n  };\n\n  var columns = Object.keys(CUPONES.fields).map(function (key) {\n    var _ref2, _dynamicRenders$key;\n\n    return {\n      title: CUPONES.fields[key],\n      field: key,\n      render: (_ref2 = (_dynamicRenders$key = dynamicRenders[key]) !== null && _dynamicRenders$key !== void 0 ? _dynamicRenders$key : CUPONES.renders[key]) !== null && _ref2 !== void 0 ? _ref2 : null\n    };\n  });\n\n  var _useState6 = useState({\n    page: 1,\n    pageSize: 20\n  }),\n      pagination = _useState6[0],\n      setPagination = _useState6[1];\n\n  var preCreateLote = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rowData) {\n      var preview;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = rowData.map(function (item) {\n                return item.id;\n              });\n              setOpenModal(true);\n              setProcessing(true);\n              _context.next = 5;\n              return send({\n                url: \"api/lote/preview\",\n                data: {\n                  cupones: data\n                },\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              preview = _context.sent;\n              setDataPreview(preview.data);\n              setProcessing(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function preCreateLote(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleConfirmModal = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var ids, preview;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ids = [];\n              setProcessing(true);\n              dataPreview.cupones.forEach(function (value) {\n                if (value.isValid) {\n                  ids.push(value.cupon.id);\n                }\n              });\n              _context2.next = 5;\n              return send({\n                url: \"api/lote/\",\n                data: {\n                  cupones: ids\n                },\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              preview = _context2.sent;\n              setProcessing(false);\n              setInfo(CUPONES.messages.successCreateCupones);\n              setOpenModal(false);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleConfirmModal() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleCancelModal = function handleCancelModal() {\n    setOpenModal(false);\n  };\n\n  var reloadPagination = function reloadPagination(pagData) {\n    setPagination(pagData);\n    onPaginationChange(_objectSpread(_objectSpread({}, pagination), pagData));\n  };\n\n  var getActions = function getActions() {\n    var actions = [];\n\n    if (isUserAdmin() || isUserContaduria()) {\n      actions = [{\n        icon: function icon() {\n          return /*#__PURE__*/_jsx(AddIcon, {});\n        },\n        tooltip: 'Crear lotes',\n        onClick: function () {\n          var _onClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event, rowData) {\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    preCreateLote(rowData);\n\n                  case 1:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          function onClick(_x2, _x3) {\n            return _onClick.apply(this, arguments);\n          }\n\n          return onClick;\n        }()\n      }];\n    }\n\n    return actions;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Table, {\n      columns: columns,\n      totalCount: (_data = data) === null || _data === void 0 ? void 0 : _data.count,\n      data: (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.results,\n      title: CUPONES.name,\n      options: {\n        search: true,\n        selection: isUserAdmin() || isUserContaduria()\n      },\n      pagination: {\n        page: pagination.page - 1,\n        pageSize: pagination.pageSize\n      },\n      onPageChange: function onPageChange(page, pageSize) {\n        reloadPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n          page: page + 1,\n          pageSize: pageSize\n        }));\n      },\n      onChangeRowsPerPage: function onChangeRowsPerPage(pageSize) {\n        reloadPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n          pageSize: pageSize\n        }));\n      },\n      actions: getActions(),\n      onSelectionChange: function onSelectionChange() {}\n    }), openModal && /*#__PURE__*/_jsxs(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: function onClose() {\n        return setOpenModal(!openModal);\n      },\n      title: CUPONES.modalCreateLote.mainTitle,\n      breadcrumbs: '',\n      subTitle: /*#__PURE__*/_jsx(SubTitleModalCreateLote, {\n        data: dataPreview\n      }),\n      actions: true,\n      onAcept: handleConfirmModal,\n      onCancel: handleCancelModal,\n      maxWidth: 'md',\n      children: [/*#__PURE__*/_jsx(List, {\n        children: (_dataPreview$cupones = dataPreview.cupones) === null || _dataPreview$cupones === void 0 ? void 0 : _dataPreview$cupones.map(function (item, i) {\n          if (!item.isValid) {\n            return /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Box, {\n                  children: [/*#__PURE__*/_jsx(Box, {\n                    fontWeight: \"fontWeightBold\",\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: /*#__PURE__*/_jsx(Box, {\n                        children: /*#__PURE__*/_jsxs(Typography, {\n                          children: [\"Cupon: \".concat(item.cupon.id), /*#__PURE__*/_jsx(\"span\", {\n                            className: classes.typeCupon,\n                            children: \"\".concat(item.cupon.judicial ? 'Judicial' : '')\n                          })]\n                        })\n                      })\n                    })\n                  }), /*#__PURE__*/_jsxs(Box, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    ml: 5,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(ListItemText, {\n                        primary: \"No es v\\xE1lido\",\n                        secondary: /*#__PURE__*/_jsx(Typography, {\n                          color: \"error\",\n                          children: \"Errores:\"\n                        })\n                      })\n                    }), /*#__PURE__*/_jsx(Box, {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      children: item.errors.map(function (item) {\n                        return /*#__PURE__*/_jsx(ListItemText, {\n                          children: \"- \".concat(item)\n                        });\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Divider, {})]\n            }, i);\n          }\n        })\n      }), ((_dataPreview$lotes = dataPreview.lotes) === null || _dataPreview$lotes === void 0 ? void 0 : _dataPreview$lotes.length) >= 1 && /*#__PURE__*/_jsx(List, {\n        subheader: /*#__PURE__*/_jsx(Typography, {\n          children: \"Se crearan los siguientes lotes:\"\n        }),\n        children: dataPreview.lotes.map(function (item, i) {\n          return /*#__PURE__*/_jsxs(Box, {\n            children: [/*#__PURE__*/_jsx(ListItem, {\n              children: /*#__PURE__*/_jsx(ListItemText, {\n                primary: \"Lote \".concat(item.tipo),\n                secondary: \"Monto de reintegro: $\".concat(item.montoTotal)\n              })\n            }), /*#__PURE__*/_jsx(Divider, {})]\n          });\n        })\n      }), /*#__PURE__*/_jsx(Loading, {\n        loading: processing,\n        message: CUPONES.messages.loading\n      })]\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: info,\n      severity: 'success',\n      message: info,\n      autoHideAfter: 5500,\n      onClose: function onClose() {\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}