{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/users/UsersList.tsx\";\nimport { Switch } from '@material-ui/core';\nimport React from 'react';\nimport { USERS } from '../../labels';\nimport Table from '../common/Table';\nimport SelectGroups from './SelectGroups';\nimport SelectDelegacion from './SelectDelegacion';\nexport default function UsersList(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      _delegaciones = _ref.delegaciones,\n      grupos = _ref.grupos,\n      onUserDeactivate = _ref.onUserDeactivate,\n      onhandleSetGroups = _ref.onhandleSetGroups,\n      onhandleSetDelegaciones = _ref.onhandleSetDelegaciones;\n\n  var onSetUserGroups = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(groupsSelected, userId) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              result = [];\n\n              if (grupos !== undefined) {\n                groupsSelected.forEach(function (groupSelected) {\n                  var grupo = grupos.results.find(function (grupo) {\n                    return grupo.name === groupSelected;\n                  });\n                  result.push(grupo.id);\n                });\n                onhandleSetGroups(result, userId);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSetUserGroups(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSetDelegaciones = function onSetDelegaciones(delegacionesSelected, userId) {\n    var result = [];\n\n    if (_delegaciones !== undefined) {\n      delegacionesSelected.forEach(function (delegacionSelected) {\n        var delegacion = _delegaciones.results.find(function (delegacion) {\n          return delegacion.nombre === delegacionSelected;\n        });\n\n        result.push(delegacion.id);\n      });\n      onhandleSetDelegaciones(result, userId);\n    }\n  };\n\n  var dynamicRenders = {\n    is_active: function is_active(rowData) {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        checked: rowData.is_active === true,\n        onChange: function onChange() {\n          return onUserDeactivate(rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData.is_active);\n        },\n        name: rowData.id,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this);\n    },\n    groups: function groups(rowData) {\n      return /*#__PURE__*/_jsxDEV(SelectGroups, {\n        grupos: grupos,\n        rowData: rowData,\n        onSetUserGroups: onSetUserGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, _this);\n    },\n    delegaciones: function delegaciones(rowData) {\n      return /*#__PURE__*/_jsxDEV(SelectDelegacion, {\n        delegaciones: _delegaciones,\n        rowData: rowData,\n        onSetDelegaciones: onSetDelegaciones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this);\n    }\n  };\n  var columns = Object.keys(USERS.fields).map(function (key) {\n    var _ref3, _dynamicRenders$key;\n\n    return {\n      title: USERS.fields[key],\n      field: key,\n      render: (_ref3 = (_dynamicRenders$key = dynamicRenders[key]) !== null && _dynamicRenders$key !== void 0 ? _dynamicRenders$key : USERS.renders[key]) !== null && _ref3 !== void 0 ? _ref3 : null\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    totalCount: data.count,\n    data: data.results,\n    title: USERS.name,\n    options: {\n      actionsColumnIndex: -1,\n      search: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/users/UsersList.tsx"],"names":["Switch","React","USERS","Table","SelectGroups","SelectDelegacion","UsersList","data","delegaciones","grupos","onUserDeactivate","onhandleSetGroups","onhandleSetDelegaciones","onSetUserGroups","groupsSelected","userId","result","undefined","forEach","groupSelected","grupo","results","find","name","push","id","onSetDelegaciones","delegacionesSelected","delegacionSelected","delegacion","nombre","dynamicRenders","is_active","rowData","groups","columns","Object","keys","fields","map","key","title","field","render","renders","count","actionsColumnIndex","search"],"mappings":"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","sourcesContent":["import { Switch } from '@material-ui/core';\nimport React from 'react';\nimport { USERS } from '../../labels';\nimport Table from '../common/Table';\nimport SelectGroups from './SelectGroups';\nimport SelectDelegacion from './SelectDelegacion';\nimport { apiRequest } from '../common/types/Request';\n\ntype Props = {\n  //TODO type this according Django response\n  data: apiRequest;\n  onUserDeactivate: (id: number, state: boolean) => void;\n  grupos: apiRequest;\n  delegaciones: apiRequest;\n  onhandleSetGroups: (groupsSelected: string[], userId: number) => void;\n  onhandleSetDelegaciones: (delegacionesSelected: string[], userId: number) => void;\n};\nexport default function UsersList({\n  data,\n  delegaciones,\n  grupos,\n  onUserDeactivate,\n  onhandleSetGroups,\n  onhandleSetDelegaciones,\n}: Props) {\n  const onSetUserGroups = async (groupsSelected: string[], userId: number) => {\n    let result: string[] = [];\n    if (grupos !== undefined) {\n      groupsSelected.forEach((groupSelected) => {\n        let grupo = grupos.results.find((grupo) => grupo.name === groupSelected);\n        result.push(grupo.id);\n      });\n      onhandleSetGroups(result, userId);\n    }\n  };\n\n  const onSetDelegaciones = (delegacionesSelected: string[], userId: number) => {\n    let result: string[] = [];\n    if (delegaciones !== undefined) {\n      delegacionesSelected.forEach((delegacionSelected) => {\n        let delegacion = delegaciones.results.find(\n          (delegacion) => delegacion.nombre === delegacionSelected,\n        );\n        result.push(delegacion.id);\n      });\n      onhandleSetDelegaciones(result, userId);\n    }\n  };\n\n  const dynamicRenders = {\n    is_active: (rowData) => {\n      return (\n        <Switch\n          checked={rowData.is_active === true}\n          onChange={() => onUserDeactivate(rowData?.id, rowData.is_active)}\n          name={rowData.id}\n          color=\"primary\"\n        />\n      );\n    },\n    groups: (rowData) => {\n      return <SelectGroups grupos={grupos} rowData={rowData} onSetUserGroups={onSetUserGroups} />;\n    },\n    delegaciones: (rowData) => {\n      return (\n        <SelectDelegacion\n          delegaciones={delegaciones}\n          rowData={rowData}\n          onSetDelegaciones={onSetDelegaciones}\n        />\n      );\n    },\n  };\n\n  const columns = Object.keys(USERS.fields).map((key) => ({\n    title: USERS.fields[key],\n    field: key,\n    render: dynamicRenders[key] ?? USERS.renders[key] ?? null,\n  }));\n\n  return (\n    <Table\n      columns={columns}\n      totalCount={data.count}\n      data={data.results}\n      title={USERS.name}\n      options={{\n        actionsColumnIndex: -1,\n        search: false,\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}