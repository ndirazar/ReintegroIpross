{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback } from 'react';\nexport const LoadingContext = /*#__PURE__*/React.createContext({\n  loading: false,\n  isLoading: () => {},\n  unsetLoading: () => {}\n});\nexport default function LoadingProvider({\n  children\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const unsetLoading = () => setLoading(false);\n\n  const isLoading = () => setLoading(true);\n\n  const contextValue = {\n    loading,\n    isLoading: useCallback(() => isLoading(), []),\n    unsetLoading: useCallback(() => unsetLoading(), [])\n  };\n  return /*#__PURE__*/_jsx(LoadingContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}