{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState } from 'react';\nimport { LOTES } from '../../labels';\nimport Table from '../common/Table';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport { send } from '../api-call/service';\nimport AddIcon from '@material-ui/icons/Add';\nexport default function LotesList(_ref) {\n  var data = _ref.data,\n      handleDelete = _ref.handleDelete,\n      onEdit = _ref.onEdit;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var columns = Object.keys(LOTES.fields).map(function (key) {\n    var _LOTES$renders$key;\n\n    return {\n      title: LOTES.fields[key],\n      field: key,\n      render: (_LOTES$renders$key = LOTES.renders[key]) !== null && _LOTES$renders$key !== void 0 ? _LOTES$renders$key : null\n    };\n  });\n\n  var crearArchivoPo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rowData) {\n      var archivoPo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return send({\n                url: \"api/lote/\".concat(rowData.id, \"/crear-archivo-po\"),\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 3:\n              archivoPo = _context.sent;\n              setLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function crearArchivoPo(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var descargarArchivoPo = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rowData) {\n      var archivo_po, path_file, file_name, element, file;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return send({\n                url: \"api/archivo-po/\".concat(rowData.archivos_po[0].id, \"/descargar-archivo\"),\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'text/plain'\n                }\n              });\n\n            case 2:\n              archivo_po = _context2.sent;\n              path_file = rowData.archivos_po[0].archivo.split('/');\n              file_name = path_file[path_file.length - 1];\n              element = document.createElement('a');\n              file = new Blob([archivo_po.data], {\n                type: 'text/plain'\n              });\n              element.href = URL.createObjectURL(file);\n              element.download = file_name;\n              document.body.appendChild(element);\n              element.click();\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function descargarArchivoPo(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Table, {\n    columns: columns,\n    totalCount: data.count,\n    data: data.results,\n    title: LOTES.name,\n    options: {\n      search: false\n    },\n    actions: [function (rowData) {\n      return {\n        icon: function icon() {\n          return /*#__PURE__*/_jsx(AddIcon, {});\n        },\n        tooltip: 'Crear archivo PO',\n        onClick: function onClick(event, rowData) {\n          return crearArchivoPo(rowData);\n        },\n        disabled: rowData.archivos_po.length > 0 || loading ? true : false\n      };\n    }, function (rowData) {\n      return {\n        icon: function icon() {\n          return /*#__PURE__*/_jsx(CloudDownloadIcon, {});\n        },\n        tooltip: 'Descargar archivo PO',\n        onClick: function onClick(event, rowData) {\n          return descargarArchivoPo(rowData);\n        },\n        disabled: rowData.archivos_po.length == 0 ? true : false\n      };\n    }]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}