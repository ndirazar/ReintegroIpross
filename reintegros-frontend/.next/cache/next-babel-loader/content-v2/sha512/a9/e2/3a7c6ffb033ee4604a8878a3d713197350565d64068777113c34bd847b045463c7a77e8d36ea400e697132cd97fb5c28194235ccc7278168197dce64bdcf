{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Typography, Grid, IconButton } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport FieldRender from '../builder/FieldRender';\nimport configSolicitudes from './FormConfig';\nimport AfiliadosSearch from '../afiliados/AfiliadosSearch';\nimport { SOLICITUDES } from '../../labels';\nimport { FieldType } from '../builder/FormField';\nimport { send } from '../api-call/service';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Help } from '@material-ui/icons';\nimport { getUser } from '../common/helpers';\nimport useStyles from './Stepper.styles';\nexport const FormSolicitud = ({\n  formContent,\n  step\n}) => {\n  var _formContent$solicitu, _formContent$solicitu4, _formContent$solicitu5;\n\n  const methods = useFormContext();\n  const {\n    0: afiliado,\n    1: setAfiliado\n  } = useState(formContent === null || formContent === void 0 ? void 0 : (_formContent$solicitu = formContent.solicitud) === null || _formContent$solicitu === void 0 ? void 0 : _formContent$solicitu.afiliado);\n  const user = getUser();\n  const {\n    0: dataCuenta,\n    1: setDataCuenta\n  } = useState(null);\n  const {\n    0: errorCuenta,\n    1: setErrorcuenta\n  } = useState(false);\n  const {\n    0: cuentaOpts,\n    1: setCuentaOpts\n  } = useState([]);\n  const {\n    0: factura,\n    1: setFactura\n  } = useState(null);\n  const classes = useStyles();\n\n  const handleSelectAfiliado = af => {\n    methods.setValue('solicitud.afiliado', af);\n    setAfiliado(af);\n  };\n\n  const tipoConfig = {\n    name: 'tipo',\n    type: FieldType.radio,\n    label: 'Judicializada?',\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    options: [{\n      value: 'judicial',\n      label: 'Si'\n    }, {\n      value: 'noJudicial',\n      label: 'No'\n    }]\n  };\n\n  const getDataCuenta = async tipoCuenta => {\n    if (tipoCuenta === 'cuentaAfiliado') {\n      setErrorcuenta(false);\n      setDataCuenta({\n        nombre: afiliado === null || afiliado === void 0 ? void 0 : afiliado.nombre,\n        apellido: afiliado === null || afiliado === void 0 ? void 0 : afiliado.apelido,\n        cbu: afiliado === null || afiliado === void 0 ? void 0 : afiliado.cbu,\n        cuitCuil: afiliado === null || afiliado === void 0 ? void 0 : afiliado.cuitCuil\n      });\n    }\n\n    if (tipoCuenta === 'cuentaJudicial' && afiliado !== null && afiliado !== void 0 && afiliado.cuentajudicial) {\n      setErrorcuenta(false);\n\n      try {\n        const cuentaJudicial = await send({\n          url: `api/cuenta-judicial/${afiliado === null || afiliado === void 0 ? void 0 : afiliado.cuentajudicial}`,\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setDataCuenta({\n          nombre: cuentaJudicial === null || cuentaJudicial === void 0 ? void 0 : cuentaJudicial.data.nombre,\n          apellido: cuentaJudicial === null || cuentaJudicial === void 0 ? void 0 : cuentaJudicial.data.apellido,\n          cbu: cuentaJudicial === null || cuentaJudicial === void 0 ? void 0 : cuentaJudicial.data.cbu,\n          cuitCuil: cuentaJudicial === null || cuentaJudicial === void 0 ? void 0 : cuentaJudicial.data.cuitCuil\n        });\n      } catch (error) {\n        setErrorcuenta(true);\n      }\n    }\n\n    if (tipoCuenta === 'cuentaDeTerceros' && afiliado !== null && afiliado !== void 0 && afiliado.cuentadeterceros) {\n      setErrorcuenta(false);\n\n      try {\n        const cuentaDeTerceros = await send({\n          url: `api/cuenta-de-terceros/${afiliado === null || afiliado === void 0 ? void 0 : afiliado.cuentadeterceros}`,\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setDataCuenta({\n          nombre: cuentaDeTerceros === null || cuentaDeTerceros === void 0 ? void 0 : cuentaDeTerceros.data.nombre,\n          apellido: cuentaDeTerceros === null || cuentaDeTerceros === void 0 ? void 0 : cuentaDeTerceros.data.apellido,\n          cbu: cuentaDeTerceros === null || cuentaDeTerceros === void 0 ? void 0 : cuentaDeTerceros.data.cbu,\n          cuitCuil: cuentaDeTerceros === null || cuentaDeTerceros === void 0 ? void 0 : cuentaDeTerceros.data.cuitCuil\n        });\n      } catch (error) {\n        setErrorcuenta(true);\n      }\n    }\n  };\n\n  const cuentaConfig = {\n    name: 'cuenta',\n    type: FieldType.options,\n    label: SOLICITUDES.messages.tipoForm,\n    options: cuentaOpts,\n    onChange: getDataCuenta,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    }\n  };\n  const configFactura = {\n    name: 'factura',\n    type: FieldType.file,\n    label: SOLICITUDES.fields.factura,\n    accept: 'text/plain, application/pdf, image/png, image/gif, image/jpeg',\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    } // onChange: async (file, form) => {\n    //   try {\n    //     const formData = new FormData();\n    //     formData.append('archivo', file);\n    //     formData.append('etiqueta', '1');\n    //     const resFactura = await send({\n    //       url: 'api/facturas/',\n    //       data: formData,\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-Type': 'multipart/form-data',\n    //       },\n    //     });\n    //     if (resFactura.status === 201) {\n    //       setFactura(resFactura.data);\n    //       form.setValue('solicitud.factura', resFactura.data.id);\n    //       console.log({ Factura: resFactura.data.id });\n    //     }\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // },\n\n  };\n\n  const removeFactura = () => {\n    setFactura(null);\n  };\n\n  useEffect(() => {\n    var options = [];\n\n    if (afiliado !== null && afiliado !== void 0 && afiliado.cbu) {\n      options.push({\n        label: 'Cuenta propia del afiliado',\n        value: 'cuentaAfiliado'\n      });\n    }\n\n    if (afiliado !== null && afiliado !== void 0 && afiliado.cuentajudicial && (afiliado === null || afiliado === void 0 ? void 0 : afiliado.estadoCuentaJudicial) == 'activa') {\n      options.push({\n        label: 'Cuenta judicial',\n        value: 'cuentaJudicial'\n      });\n    }\n\n    if (afiliado !== null && afiliado !== void 0 && afiliado.cuentadeterceros && (afiliado === null || afiliado === void 0 ? void 0 : afiliado.estadoCuentaDeTerceros) == 'aprobada') {\n      options.push({\n        label: 'Cuenta de tercercos',\n        value: 'cuentaDeTerceros'\n      });\n    }\n\n    if (options.length <= 0) {\n      options.push({\n        label: 'Afiliado sin cuentas asociadas, debe tener al menos una cuenta para crear una solicitud',\n        value: ''\n      });\n    }\n\n    setCuentaOpts(options);\n\n    if (!afiliado) {\n      setDataCuenta(null);\n    }\n  }, [afiliado, setCuentaOpts, setDataCuenta]);\n  useEffect(() => {\n    var _formContent$solicitu2;\n\n    if (formContent !== null && formContent !== void 0 && (_formContent$solicitu2 = formContent.solicitud) !== null && _formContent$solicitu2 !== void 0 && _formContent$solicitu2.cuenta && !dataCuenta) {\n      var _formContent$solicitu3;\n\n      getDataCuenta(formContent === null || formContent === void 0 ? void 0 : (_formContent$solicitu3 = formContent.solicitud) === null || _formContent$solicitu3 === void 0 ? void 0 : _formContent$solicitu3.cuenta);\n    }\n  }, [formContent, getDataCuenta]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      children: [/*#__PURE__*/_jsx(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: step.title\n      }), /*#__PURE__*/_jsx(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: step.description\n      })]\n    }), /*#__PURE__*/_jsx(\"form\", {\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsx(AfiliadosSearch, {\n          form: methods,\n          formContent: formContent,\n          onSelect: handleSelectAfiliado\n        }), /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          item: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            md: 2,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: classes.tipoCuenta,\n              children: [/*#__PURE__*/_jsx(Tooltip, {\n                title: /*#__PURE__*/_jsx(Typography, {\n                  children: SOLICITUDES.messages.toolTipJudicializada\n                }),\n                placement: \"top-start\",\n                arrow: true,\n                children: /*#__PURE__*/_jsx(IconButton, {\n                  \"aria-label\": \"Help\",\n                  className: classes.tipoHelp,\n                  children: /*#__PURE__*/_jsx(Help, {})\n                })\n              }), /*#__PURE__*/_jsx(FieldRender, {\n                field: tipoConfig,\n                form: methods,\n                data: {\n                  tipo: formContent === null || formContent === void 0 ? void 0 : (_formContent$solicitu4 = formContent.solicitud) === null || _formContent$solicitu4 === void 0 ? void 0 : _formContent$solicitu4.tipo\n                }\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            md: 3,\n            children: /*#__PURE__*/_jsx(FieldRender, {\n              field: cuentaConfig,\n              form: methods,\n              data: {\n                cuenta: formContent === null || formContent === void 0 ? void 0 : (_formContent$solicitu5 = formContent.solicitud) === null || _formContent$solicitu5 === void 0 ? void 0 : _formContent$solicitu5.cuenta\n              }\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            md: 3,\n            children: errorCuenta ? /*#__PURE__*/_jsx(\"div\", {\n              className: classes.afiliadoDetail,\n              children: /*#__PURE__*/_jsx(Typography, {\n                component: \"h6\",\n                color: \"error\",\n                children: SOLICITUDES.messages.errorAlObtenerCuenta\n              })\n            }) : dataCuenta && /*#__PURE__*/_jsx(\"div\", {\n              className: classes.afiliadoDetail,\n              children: /*#__PURE__*/_jsx(FieldRender, {\n                form: methods,\n                field: {\n                  name: 'cuentaCBU',\n                  type: FieldType.string,\n                  label: 'CBU',\n                  disabled: true\n                },\n                data: {\n                  cuentaCBU: dataCuenta.cbu\n                }\n              })\n            })\n          })]\n        }), [...configSolicitudes, configFactura].map((field, index) => {\n          var _field$styling, _formContent$solicitu6, _user$delegacionPrinc, _formContent$solicitu7;\n\n          return /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            md: ((_field$styling = field.styling) === null || _field$styling === void 0 ? void 0 : _field$styling.columns) || 12,\n            children: /*#__PURE__*/_jsx(FieldRender, {\n              field: field,\n              form: methods,\n              data: {\n                afiliado: afiliado,\n                discapacitado: false,\n                estadoActual: 'sinPagos',\n                delegacion: (formContent === null || formContent === void 0 ? void 0 : (_formContent$solicitu6 = formContent.solicitud) === null || _formContent$solicitu6 === void 0 ? void 0 : _formContent$solicitu6.delegacion) || (user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id),\n                tipo: 'noJudicial',\n                fechaAlta: new Date().toISOString(),\n                factura: formContent === null || formContent === void 0 ? void 0 : (_formContent$solicitu7 = formContent.solicitud) === null || _formContent$solicitu7 === void 0 ? void 0 : _formContent$solicitu7.factura\n              }\n            })\n          }, index);\n        })]\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}