{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/builder/Form.tsx\";\nimport { Box, Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport FieldRender from './FieldRender';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    background: '#FFFFFF',\n    borderRadius: '6px',\n    boxShadow: '0px 0px 4px rgba(0, 0, 0, 0.25)',\n    padding: '25px 35px',\n    margin: '0 0 30px'\n  },\n  formTitle: {\n    fontSize: '20px',\n    marginTop: '15px'\n  },\n  buttonsWrapper: {\n    marginLeft: 'auto'\n  },\n  submitBtn: {\n    marginLeft: '15px'\n  },\n  cancelBtn: {\n    marginLeft: '15px'\n  },\n  br: {\n    height: 10,\n    padding: 0\n  }\n}));\nexport default function Form(props) {\n  var _props$buttonsWidth, _props$cancelButton, _props$submitButton;\n\n  const defaultValues = props.data || {};\n  const form = useForm({\n    defaultValues\n  });\n  const {\n    handleSubmit,\n    control,\n    errors,\n    setValue\n  } = form;\n  const classes = useStyles();\n\n  const transformAndSubmit = data => {\n    // Removes empty keys\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] === null) {\n        delete data[key];\n      }\n    });\n    props.onSubmit(data, form);\n    props.afterSubmit && props.afterSubmit();\n  };\n\n  const handleCancel = () => {\n    form.reset();\n    props.onCancel && props.onCancel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(transformAndSubmit),\n    autoComplete: \"off\",\n    className: classes.form,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [props.title && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h6\",\n          className: classes.formTitle,\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), props.config.map((field, index) => {\n        var _field$styling;\n\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: ((_field$styling = field.styling) === null || _field$styling === void 0 ? void 0 : _field$styling.columns) || 12,\n          className: field.type === 'br' ? classes.br : '',\n          style: {\n            paddingTop: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(FieldRender, {\n            field: field,\n            form: form,\n            data: defaultValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: Number((_props$buttonsWidth = props.buttonsWidth) !== null && _props$buttonsWidth !== void 0 ? _props$buttonsWidth : 4),\n          className: classes.buttonsWrapper,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            children: [(_props$cancelButton = props.cancelButton) !== null && _props$cancelButton !== void 0 ? _props$cancelButton : /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.cancelBtn,\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: handleCancel,\n              children: props.cancelText || 'Cancelar'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), (_props$submitButton = props.submitButton) !== null && _props$submitButton !== void 0 ? _props$submitButton : /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.submitBtn,\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"Aceptar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/builder/Form.tsx"],"names":["Box","Button","Grid","makeStyles","Typography","React","useForm","FieldRender","useStyles","theme","form","background","borderRadius","boxShadow","padding","margin","formTitle","fontSize","marginTop","buttonsWrapper","marginLeft","submitBtn","cancelBtn","br","height","Form","props","defaultValues","data","handleSubmit","control","errors","setValue","classes","transformAndSubmit","Object","keys","forEach","key","onSubmit","afterSubmit","handleCancel","reset","onCancel","title","config","map","field","index","styling","columns","type","paddingTop","Number","buttonsWidth","cancelButton","cancelText","submitButton"],"mappings":"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","sourcesContent":["import { Box, Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { GridSize } from '@material-ui/core/Grid';\nimport React, { ReactNode } from 'react';\nimport { useEffect } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport FieldRender from './FieldRender';\nimport { FormConfig } from './FormConfig';\n\ntype Props<T> = {\n  title?: string;\n  config: FormConfig<T>;\n  data: T;\n  onSubmit: (data: SubmitHandler<T>, form: any) => void;\n  onCancel?: () => void;\n  cancelText?: string;\n  submitButton?: ReactNode;\n  cancelButton?: ReactNode;\n  afterSubmit?: () => void;\n  buttonsWidth?: number;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    background: '#FFFFFF',\n    borderRadius: '6px',\n    boxShadow: '0px 0px 4px rgba(0, 0, 0, 0.25)',\n    padding: '25px 35px',\n    margin: '0 0 30px',\n  },\n  formTitle: {\n    fontSize: '20px',\n    marginTop: '15px',\n  },\n  buttonsWrapper: {\n    marginLeft: 'auto',\n  },\n  submitBtn: {\n    marginLeft: '15px',\n  },\n  cancelBtn: {\n    marginLeft: '15px',\n  },\n  br: {\n    height: 10,\n    padding: 0,\n  },\n}));\nexport default function Form<T>(props: Props<T>) {\n  const defaultValues = props.data || {};\n  const form = useForm({ defaultValues });\n  const { handleSubmit, control, errors, setValue } = form;\n  const classes = useStyles();\n\n  const transformAndSubmit = (data: any) => {\n    // Removes empty keys\n    Object.keys(data).forEach((key) => {\n      if (data[key] === '' || data[key] === null) {\n        delete data[key];\n      }\n    });\n    props.onSubmit(data, form);\n    props.afterSubmit && props.afterSubmit();\n  };\n\n  const handleCancel = () => {\n    form.reset();\n    props.onCancel && props.onCancel();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(transformAndSubmit)} autoComplete=\"off\" className={classes.form}>\n      <Grid container spacing={2}>\n        {props.title && (\n          <Grid item md={12}>\n            <Typography component=\"h6\" className={classes.formTitle}>\n              {props.title}\n            </Typography>\n          </Grid>\n        )}\n        {props.config.map((field, index) => (\n          <Grid\n            key={index}\n            item\n            md={(field.styling?.columns as any) || 12}\n            className={field.type === 'br' ? classes.br : ''}\n            style={{ paddingTop: 0 }}\n          >\n            <FieldRender field={field} form={form} data={defaultValues} />\n          </Grid>\n        ))}\n        <Grid item xs={12 as GridSize} style={{ marginTop: 20 }}>\n          <Grid\n            item\n            xs={Number(props.buttonsWidth ?? 4) as GridSize}\n            className={classes.buttonsWrapper}\n          >\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              {props.cancelButton ?? (\n                <Button\n                  className={classes.cancelBtn}\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={handleCancel}\n                >\n                  {props.cancelText || 'Cancelar'}\n                </Button>\n              )}\n              {props.submitButton ?? (\n                <Button\n                  className={classes.submitBtn}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  Aceptar\n                </Button>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}