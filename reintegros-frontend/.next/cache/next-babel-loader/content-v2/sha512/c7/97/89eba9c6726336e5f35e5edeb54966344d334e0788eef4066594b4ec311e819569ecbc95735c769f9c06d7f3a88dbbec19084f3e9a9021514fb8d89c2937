{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/users/SelectGroups.tsx\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nexport default function SelectGroups({\n  grupos,\n  rowData,\n  onSetUserGroups\n}) {\n  const [groupsSelected, setGroupsSelected] = React.useState(rowData.groups.map(grupo => grupo.name));\n\n  const handleChange = event => {\n    setGroupsSelected(event.target.value);\n  };\n\n  const handleClose = () => {\n    onSetUserGroups(groupsSelected, rowData.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"select-grupos\",\n      id: `select-grupos-${rowData.id}`,\n      multiple: true,\n      value: groupsSelected,\n      onChange: handleChange,\n      input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this),\n      onClose: () => handleClose(),\n      children: grupos !== undefined && grupos.results.map(grupo => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: grupo.name,\n        children: grupo.name\n      }, grupo.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/users/SelectGroups.tsx"],"names":["React","Select","Input","MenuItem","FormControl","SelectGroups","grupos","rowData","onSetUserGroups","groupsSelected","setGroupsSelected","useState","groups","map","grupo","name","handleChange","event","target","value","handleClose","id","undefined","results"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AASA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAtB,EAAmE;AAChF,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,KAAK,CAACW,QAAN,CAC1CJ,OAAO,CAACK,MAAR,CAAeC,GAAf,CAAoBC,KAAD,IAAWA,KAAK,CAACC,IAApC,CAD0C,CAA5C;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAkD;AACrEP,IAAAA,iBAAiB,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBZ,IAAAA,eAAe,CAACC,cAAD,EAAiBF,OAAO,CAACc,EAAzB,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,eADV;AAEE,MAAA,EAAE,EAAG,iBAAgBd,OAAO,CAACc,EAAG,EAFlC;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,KAAK,EAAEZ,cAJT;AAKE,MAAA,QAAQ,EAAEO,YALZ;AAME,MAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cANT;AAOE,MAAA,OAAO,EAAE,MAAMI,WAAW,EAP5B;AAAA,gBASGd,MAAM,KAAKgB,SAAX,IACChB,MAAM,CAACiB,OAAP,CAAeV,GAAf,CAAoBC,KAAD,iBACjB,QAAC,QAAD;AAA2B,QAAA,KAAK,EAAEA,KAAK,CAACC,IAAxC;AAAA,kBACGD,KAAK,CAACC;AADT,SAAeD,KAAK,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD","sourcesContent":["import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { apiRequest } from '../common/types/Request';\n\ntype Props = {\n  grupos: apiRequest;\n  rowData: any;\n  onSetUserGroups: (groupsSelected: string[], userId: number) => void;\n};\n\nexport default function SelectGroups({ grupos, rowData, onSetUserGroups }: Props) {\n  const [groupsSelected, setGroupsSelected] = React.useState<string[]>(\n    rowData.groups.map((grupo) => grupo.name),\n  );\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGroupsSelected(event.target.value as string[]);\n  };\n\n  const handleClose = () => {\n    onSetUserGroups(groupsSelected, rowData.id);\n  };\n\n  return (\n    <FormControl>\n      <Select\n        labelId=\"select-grupos\"\n        id={`select-grupos-${rowData.id}`}\n        multiple={true}\n        value={groupsSelected}\n        onChange={handleChange}\n        input={<Input />}\n        onClose={() => handleClose()}\n      >\n        {grupos !== undefined &&\n          grupos.results.map((grupo) => (\n            <MenuItem key={grupo.name} value={grupo.name}>\n              {grupo.name}\n            </MenuItem>\n          ))}\n      </Select>\n    </FormControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}