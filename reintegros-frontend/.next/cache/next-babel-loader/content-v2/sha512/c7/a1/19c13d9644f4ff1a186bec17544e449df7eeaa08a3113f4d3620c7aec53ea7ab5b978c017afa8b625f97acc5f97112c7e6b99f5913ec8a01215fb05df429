{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Divider, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport NomencladorForm from './NomencladorForm';\nimport NomencladorImportForm from './NomencladorImportForm';\nimport NomencladorList from './NomencladorList';\nimport { post, put, remove, send } from '../api-call/service';\nimport Loading from '../common/Loading';\nimport { ERRORS, LOADING, NOMENCLADOR } from '../../labels';\nimport Alert from '../common/Alert';\nimport Modal from '../common/Modal';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport SubTitleImportModal from './SubTitleImportModal';\nimport TableFilters from '../common/TableFilters';\nimport filterConfig from './FiltersConfig';\nimport { objToQueryString, formatDate } from '../common/helpers';\nexport default function Nomenclador() {\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    page: 1,\n    size: 20\n  });\n  const {\n    0: filterQueryStr,\n    1: setFilterQueryStr\n  } = useState(objToQueryString(filters));\n  const {\n    data,\n    error: errorOnGet,\n    mutate\n  } = useSWR(`${NOMENCLADOR.route}?` + filterQueryStr);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const nomencladorInitialData = {\n    id: null,\n    areaCubrir: '',\n    capitulo: '',\n    catPresPracticaLugar: '',\n    codigo: '',\n    complejidadPractica: '',\n    descripcion: '',\n    fechaNorma: '',\n    modalidadPresentacion: '',\n    montoFijoMensual: '',\n    numeroNormaRespaldatoria: '',\n    periodoTope: '',\n    programaSanitario: '',\n    topesCoberturaPeriodo: '',\n    unidadGalenoAyudante: '',\n    unidadGalenoEspecialista: '',\n    unidadGasto: '',\n    unidadMateriales: '',\n    valorAyudante: '',\n    valorEspecialista: '',\n    valorGasto: '',\n    valorIpross: '',\n    valorMontoFijo: '',\n    requiereAuditoriaMedica: '',\n    categoria: null\n  };\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(nomencladorInitialData);\n  const {\n    0: openFormImport,\n    1: setOpenFormImport\n  } = useState(false);\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(false);\n  const {\n    0: dataPreview,\n    1: setDataPreview\n  } = useState([]);\n  const {\n    0: attachedFile,\n    1: setAttachedFile\n  } = useState(null);\n  const {\n    0: info,\n    1: setInfo\n  } = useState(null);\n  const {\n    0: processing,\n    1: setProcessing\n  } = useState(false);\n\n  const handleSubmit = async data => {\n    try {\n      var _data$capitulo, _data$categoria;\n\n      let payload = _objectSpread(_objectSpread({}, data), {}, {\n        capitulo: ((_data$capitulo = data.capitulo) === null || _data$capitulo === void 0 ? void 0 : _data$capitulo.value) || data.capitulo,\n        categoria: ((_data$categoria = data.categoria) === null || _data$categoria === void 0 ? void 0 : _data$categoria.value) || data.categoria,\n        fechaNorma: formatDate(data.fechaNorma)\n      });\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        await put(`${NOMENCLADOR.route}`, payload, currentData === null || currentData === void 0 ? void 0 : currentData.id);\n      } else {\n        await post(`${NOMENCLADOR.route}`, payload);\n      }\n\n      setError(null);\n    } catch (error) {\n      console.log(error);\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        setError('onUpdate');\n      } else {\n        setError('onCreate');\n      }\n    }\n\n    handleCancel();\n    mutate();\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await remove(`${NOMENCLADOR.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onEdit = async data => {\n    var _data$capitulo2, _data$capitulo3, _data$categoria2, _data$categoria3;\n\n    const payload = _objectSpread(_objectSpread({}, data), {}, {\n      capitulo: {\n        label: (_data$capitulo2 = data.capitulo) === null || _data$capitulo2 === void 0 ? void 0 : _data$capitulo2.descripcion,\n        value: (_data$capitulo3 = data.capitulo) === null || _data$capitulo3 === void 0 ? void 0 : _data$capitulo3.capitulo\n      },\n      categoria: {\n        label: (_data$categoria2 = data.categoria) === null || _data$categoria2 === void 0 ? void 0 : _data$categoria2.nombre,\n        value: (_data$categoria3 = data.categoria) === null || _data$categoria3 === void 0 ? void 0 : _data$categoria3.id\n      }\n    });\n\n    setCurrentData(payload);\n    setOpenForm(true);\n    window.scrollTo(0, 0);\n  };\n\n  const handleCancelImport = async () => {\n    setOpenFormImport(false);\n    setOpenModal(false);\n  };\n\n  const handleSubmitImport = async data => {\n    const formData = new FormData();\n    formData.append('nomenclador', data.archivoAdjunto);\n    setAttachedFile(data.archivoAdjunto);\n    setOpenModal(!openModal);\n    const preview = await send({\n      url: `api/verificador-nomenclador/`,\n      data: formData,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    console.log(preview.data);\n    setDataPreview(preview.data);\n  };\n\n  const handleConfirmImportModal = async () => {\n    const formData = new FormData();\n    formData.append('nomenclador', attachedFile);\n    setProcessing(true);\n    await send({\n      url: `api/importar-nomenclador`,\n      data: formData,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setProcessing(false);\n    setInfo(NOMENCLADOR.messages.successfulImportNomenclador);\n    setOpenModal(false);\n    setOpenFormImport(false);\n  };\n\n  const openCreateModal = () => {\n    setCurrentData(_objectSpread(_objectSpread({}, nomencladorInitialData), {}, {\n      capitulo: ''\n    }));\n    setOpenForm(!openForm);\n    setOpenFormImport(false);\n    window.scrollTo(0, 0);\n  };\n\n  const openImportModal = () => {\n    setOpenFormImport(!openFormImport);\n    setOpenForm(false);\n    window.scrollTo(0, 0);\n  };\n\n  const handleChangePagination = pagination => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      page: pagination.page,\n      size: pagination.pageSize\n    }));\n  };\n\n  const handleFilter = newFilters => {\n    setFilters(newFilters);\n  };\n\n  useEffect(() => {\n    setFilterQueryStr(objToQueryString(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsx(NomencladorForm, {\n        data: currentData,\n        handleSubmit: handleSubmit,\n        handleCancel: handleCancel\n      }), openFormImport && /*#__PURE__*/_jsx(NomencladorImportForm, {\n        data: {},\n        handleSubmit: handleSubmitImport,\n        handleCancel: handleCancelImport\n      }), /*#__PURE__*/_jsx(TableFilters, {\n        title: \"Nomenclador\",\n        config: filterConfig,\n        onSubmit: handleFilter,\n        data: filters\n      }), /*#__PURE__*/_jsx(NomencladorList, {\n        data: data,\n        handleDelete: handleDelete,\n        onEdit: onEdit,\n        onCreate: openCreateModal,\n        onImportNomenclador: openImportModal,\n        onPaginationChange: handleChangePagination\n      })]\n    }), openModal && /*#__PURE__*/_jsxs(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: () => setOpenModal(!openModal),\n      title: NOMENCLADOR.modalImportNomenclador,\n      breadcrumbs: '',\n      subTitle: /*#__PURE__*/_jsx(SubTitleImportModal, {\n        data: dataPreview\n      }),\n      actions: true,\n      onAcept: handleConfirmImportModal,\n      onCancel: handleCancelImport,\n      maxWidth: 'md',\n      children: [/*#__PURE__*/_jsx(List, {\n        children: dataPreview.map((item, index) => {\n          if (!item.is_valid) {\n            return /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Box, {\n                  children: [/*#__PURE__*/_jsx(Box, {\n                    fontWeight: \"fontWeightBold\",\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: /*#__PURE__*/_jsx(Box, {\n                        fontWeight: \"fontWeightBold\",\n                        children: `Fila: ${index + 1}`\n                      })\n                    })\n                  }), /*#__PURE__*/_jsxs(Box, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    ml: 5,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(ListItemText, {\n                        primary: \"No es v\\xE1lido\",\n                        secondary: /*#__PURE__*/_jsx(Typography, {\n                          color: \"error\",\n                          children: \"Errores:\"\n                        })\n                      })\n                    }), /*#__PURE__*/_jsx(Box, {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      children: item.errors.map(item => {\n                        return /*#__PURE__*/_jsx(ListItemText, {\n                          children: `- ${item}`\n                        });\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Divider, {})]\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsx(Loading, {\n        loading: dataPreview.length == 0 || processing,\n        message: NOMENCLADOR.messages.processingFileMessage\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(NOMENCLADOR.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errorOnGet || error || info,\n      severity: info ? 'success' : 'error',\n      message: info ? info : error ? ERRORS[error](NOMENCLADOR.name) : ERRORS.onGet(NOMENCLADOR.name),\n      autoHideAfter: 5500,\n      onClose: () => {\n        setError(null);\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}