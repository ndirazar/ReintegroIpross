{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback } from 'react';\nexport var LoadingContext = /*#__PURE__*/React.createContext({\n  loading: false,\n  isLoading: function isLoading() {},\n  unsetLoading: function unsetLoading() {}\n});\nexport default function LoadingProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var unsetLoading = function unsetLoading() {\n    return setLoading(false);\n  };\n\n  var isLoading = function isLoading() {\n    return setLoading(true);\n  };\n\n  var contextValue = {\n    loading: loading,\n    isLoading: useCallback(function () {\n      return isLoading();\n    }, []),\n    unsetLoading: useCallback(function () {\n      return unsetLoading();\n    }, [])\n  };\n  return /*#__PURE__*/_jsx(LoadingContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}