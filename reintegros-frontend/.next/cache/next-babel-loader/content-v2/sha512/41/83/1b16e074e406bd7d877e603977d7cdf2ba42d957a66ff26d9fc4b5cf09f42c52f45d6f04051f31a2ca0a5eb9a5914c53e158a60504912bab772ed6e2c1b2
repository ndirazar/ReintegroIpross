{"ast":null,"code":"import _defineProperty from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport React, { useState } from 'react';\nimport { ACTIONS, AUDITORIAS } from '../../labels';\nimport Table from '../common/Table';\nimport { isUserAdmin, isUserAuditoriaAdministrativa, isUserAuditoriaCentral, isUserAuditoriaMedica } from '../common/helpers';\nexport default function AuditoriasList(_ref) {\n  var data = _ref.data,\n      handleDelete = _ref.handleDelete,\n      onAudit = _ref.onAudit,\n      onPaginationChange = _ref.onPaginationChange,\n      onFilter = _ref.onFilter,\n      onExport = _ref.onExport;\n  var dynamicRenders = {\n    practica: function practica(rowData) {\n      var prac = \"\".concat(rowData.nomenclador.codigo, \" - \").concat(rowData.nomenclador.descripcion, \" - \").concat(rowData.nomenclador.capitulo.descripcion);\n\n      if (prac.length > 50) {\n        prac = prac.substring(0, 50) + '...';\n      }\n\n      return /*#__PURE__*/_jsx(\"span\", {\n        title: \"\".concat(rowData.nomenclador.codigo, \" - \").concat(rowData.nomenclador.descripcion, \" - \").concat(rowData.nomenclador.capitulo.descripcion),\n        children: prac\n      });\n    }\n  };\n  var columns = Object.keys(AUDITORIAS.fields).map(function (key) {\n    var _ref2, _dynamicRenders$key;\n\n    return {\n      title: AUDITORIAS.fields[key],\n      field: key,\n      render: (_ref2 = (_dynamicRenders$key = dynamicRenders[key]) !== null && _dynamicRenders$key !== void 0 ? _dynamicRenders$key : AUDITORIAS.renders[key]) !== null && _ref2 !== void 0 ? _ref2 : null\n    };\n  });\n\n  var _useState = useState({\n    page: 1,\n    pageSize: 20\n  }),\n      pagination = _useState[0],\n      setPagination = _useState[1];\n\n  var getActions = function getActions() {\n    var actions = [];\n\n    if (isUserAdmin() || isUserAuditoriaAdministrativa() || isUserAuditoriaCentral() || isUserAuditoriaMedica()) {\n      actions = [{\n        icon: function icon() {\n          return /*#__PURE__*/_jsx(FindInPageIcon, {});\n        },\n        tooltip: ACTIONS.update(AUDITORIAS.name),\n        onClick: function onClick(event, rowData) {\n          onAudit(rowData);\n        }\n      }];\n    }\n\n    return actions;\n  };\n\n  var reloadPagination = function reloadPagination(pagData) {\n    setPagination(pagData);\n    onPaginationChange(_objectSpread(_objectSpread({}, pagination), pagData));\n  };\n\n  return /*#__PURE__*/_jsx(Table, {\n    columns: columns,\n    totalCount: data === null || data === void 0 ? void 0 : data.count,\n    data: data === null || data === void 0 ? void 0 : data.results,\n    title: AUDITORIAS.name,\n    options: {\n      search: false,\n      exportFileName: 'Auditorias',\n      exportButton: {\n        csv: true,\n        pdf: false\n      },\n      exportAllData: true,\n      exportCsv: onExport\n    },\n    pagination: {\n      page: pagination.page - 1,\n      pageSize: pagination.pageSize\n    },\n    onPageChange: function onPageChange(page, pageSize) {\n      reloadPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n        page: page + 1,\n        pageSize: pageSize\n      }));\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(pageSize) {\n      reloadPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n        pageSize: pageSize\n      }));\n    },\n    onFilterClick: onFilter,\n    actions: getActions()\n  });\n}","map":null,"metadata":{},"sourceType":"module"}