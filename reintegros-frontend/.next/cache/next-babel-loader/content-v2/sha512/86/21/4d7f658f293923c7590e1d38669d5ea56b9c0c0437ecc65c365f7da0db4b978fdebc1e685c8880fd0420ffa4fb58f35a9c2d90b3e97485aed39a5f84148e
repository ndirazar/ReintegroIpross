{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { Delete, Edit } from '@material-ui/icons';\nimport AddIcon from '@material-ui/icons/Add'; //App imports\n\nimport { ACTIONS, SOLICITUDES, STEPPER_SOLICITUDES } from '../../labels';\nimport Table from '../common/Table';\nimport SolicitudesSummary from './SolicitudesSummary';\nimport { send } from '../api-call/service';\nimport Modal from '../common/Modal';\nimport { Box, Divider, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport Loading from '../common/Loading';\nimport SubTitleModalCreateCupones from './SubTitleModalCreateCupones';\nimport Alert from '../common/Alert';\nexport default function SolicitudesList({\n  data,\n  handleDelete,\n  onEdit,\n  onShowStepper\n}) {\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(false);\n  const {\n    0: dataPreview,\n    1: setDataPreview\n  } = useState([]);\n  const {\n    0: processing,\n    1: setProcessing\n  } = useState(false);\n  const {\n    0: info,\n    1: setInfo\n  } = useState(null);\n  const columns = Object.keys(SOLICITUDES.fields).map(key => {\n    var _SOLICITUDES$renders$;\n\n    return {\n      title: SOLICITUDES.fields[key],\n      field: key,\n      render: (_SOLICITUDES$renders$ = SOLICITUDES.renders[key]) !== null && _SOLICITUDES$renders$ !== void 0 ? _SOLICITUDES$renders$ : null\n    };\n  });\n  const headerActions = [{\n    label: STEPPER_SOLICITUDES.add,\n    onClick: onShowStepper\n  }];\n\n  const preCreateCupones = async rowData => {\n    data = rowData.map(item => item.id);\n    setOpenModal(true);\n    const preview = await send({\n      url: `api/cupon/verificar`,\n      data: {\n        solicitudes: data\n      },\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setDataPreview(preview.data.results);\n  };\n\n  const handleConfirmModal = async () => {\n    var ids = [];\n    dataPreview.forEach(value => {\n      if (value.isValid) {\n        ids.push(value.solicitud.id);\n      }\n    });\n    setProcessing(true);\n    const preview = await send({\n      url: `api/cupon/`,\n      data: {\n        solicitudes: ids\n      },\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setProcessing(false);\n    setInfo(SOLICITUDES.messages.successCreateCupones(ids.length));\n    setOpenModal(false);\n  };\n\n  const handleCancelModal = () => {\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Table, {\n      columns: columns,\n      totalCount: data.count,\n      data: data.results,\n      title: SOLICITUDES.name,\n      headerActions: headerActions,\n      options: {\n        search: true,\n        selection: true\n      },\n      actions: [{\n        icon: () => /*#__PURE__*/_jsx(Edit, {}),\n        tooltip: ACTIONS.update(SOLICITUDES.name),\n        onClick: (event, rowData) => {\n          onEdit(rowData);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsx(Delete, {}),\n        tooltip: ACTIONS.delete(SOLICITUDES.name),\n        onClick: async (event, rowData) => {\n          handleDelete(rowData === null || rowData === void 0 ? void 0 : rowData.id);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsx(AddIcon, {}),\n        tooltip: 'Crear cupones',\n        onClick: async (event, rowData) => {\n          preCreateCupones(rowData);\n        }\n      }],\n      detailPanel: rowData => /*#__PURE__*/_jsx(SolicitudesSummary, {\n        solicitud: rowData,\n        header: false\n      }),\n      onSelectionChange: () => {}\n    }), openModal && /*#__PURE__*/_jsxs(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: () => setOpenModal(!openModal),\n      title: SOLICITUDES.modalCreateCupones.mainTitle,\n      breadcrumbs: '',\n      subTitle: /*#__PURE__*/_jsx(SubTitleModalCreateCupones, {\n        data: dataPreview\n      }),\n      actions: true,\n      onAcept: handleConfirmModal,\n      onCancel: handleCancelModal,\n      maxWidth: 'md',\n      children: [/*#__PURE__*/_jsx(List, {\n        children: dataPreview.map((item, index) => {\n          if (!item.isValid) {\n            return /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Box, {\n                  children: [/*#__PURE__*/_jsx(Box, {\n                    fontWeight: \"fontWeightBold\",\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: /*#__PURE__*/_jsx(Box, {\n                        fontWeight: \"fontWeightBold\",\n                        children: `Solicitud: ${item.solicitud.id}`\n                      })\n                    })\n                  }), /*#__PURE__*/_jsxs(Box, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    ml: 5,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(ListItemText, {\n                        primary: \"No es v\\xE1lida\",\n                        secondary: /*#__PURE__*/_jsx(Typography, {\n                          color: \"error\",\n                          children: \"Errores:\"\n                        })\n                      })\n                    }), /*#__PURE__*/_jsx(Box, {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      children: item.errors.map(item => {\n                        return /*#__PURE__*/_jsx(ListItemText, {\n                          children: `- ${item}`\n                        });\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Divider, {})]\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsx(Loading, {\n        loading: dataPreview.length == 0 || processing,\n        message: SOLICITUDES.messages.loading\n      })]\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: info,\n      severity: 'success',\n      message: info,\n      autoHideAfter: 5500,\n      onClose: () => {\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}