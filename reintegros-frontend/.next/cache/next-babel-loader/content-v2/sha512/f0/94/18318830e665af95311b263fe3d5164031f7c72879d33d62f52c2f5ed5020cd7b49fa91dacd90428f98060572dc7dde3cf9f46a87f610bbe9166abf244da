{"ast":null,"code":"import { NOMENCLADOR } from '../../labels';\nimport { get } from '../api-call/service';\nimport { FieldType } from '../builder/FormField';\nconst configNomenclador = [{\n  name: 'areaCubrir',\n  type: FieldType.int,\n  label: NOMENCLADOR.fields['areaCubrir'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'capitulo',\n  type: FieldType.options,\n  label: NOMENCLADOR.fields['capitulo'],\n  options: async () => {\n    return (await get('/api/capitulos/')).data.results.map(c => ({\n      value: c.capitulo,\n      label: `${c.capitulo}-${c.descripcion}`\n    }));\n  },\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'codigo',\n  type: FieldType.int,\n  label: NOMENCLADOR.fields['codigo'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'complejidadPractica',\n  type: FieldType.int,\n  label: NOMENCLADOR.fields['complejidadPractica'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'descripcion',\n  type: FieldType.string,\n  label: NOMENCLADOR.fields['descripcion'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'fechaNorma',\n  type: FieldType.date,\n  label: NOMENCLADOR.fields['fechaNorma'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'modalidadPresentacion',\n  type: FieldType.options,\n  label: NOMENCLADOR.fields['modalidadPresentacion'],\n  options: NOMENCLADOR.optionsModalidadPresentacion,\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'numeroNormaRespaldatoria',\n  type: FieldType.string,\n  label: NOMENCLADOR.fields['numeroNormaRespaldatoria'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'periodoTope',\n  type: FieldType.options,\n  options: NOMENCLADOR.optionsPeriodoTope,\n  label: NOMENCLADOR.fields['periodoTope'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'programaSanitario',\n  type: FieldType.string,\n  label: NOMENCLADOR.fields['programaSanitario'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'topesCoberturaPeriodo',\n  type: FieldType.int,\n  label: NOMENCLADOR.fields['topesCoberturaPeriodo'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'valorIpross',\n  type: FieldType.float,\n  label: NOMENCLADOR.fields['valorIpross'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}];\nexport default configNomenclador;","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/nomenclador/FormConfig.ts"],"names":["NOMENCLADOR","get","FieldType","configNomenclador","name","type","int","label","fields","styling","columns","rules","required","options","data","results","map","c","value","capitulo","descripcion","string","date","optionsModalidadPresentacion","optionsPeriodoTope","float"],"mappings":"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","sourcesContent":["import { NOMENCLADOR } from '../../labels';\nimport { get } from '../api-call/service';\nimport { FormConfig } from '../builder/FormConfig';\nimport { FieldType } from '../builder/FormField';\nimport { FormDataNomenclador } from './types';\n\nconst configNomenclador: FormConfig<FormDataNomenclador> = [\n  {\n    name: 'areaCubrir',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['areaCubrir'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n\n  {\n    name: 'capitulo',\n    type: FieldType.options,\n    label: NOMENCLADOR.fields['capitulo'],\n    options: async () => {\n      return (await get('/api/capitulos/')).data.results.map((c) => ({\n        value: c.capitulo,\n        label: `${c.capitulo}-${c.descripcion}`,\n      }));\n    },\n    styling: {\n      columns: 4,\n    },\n  },\n  {\n    name: 'codigo',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['codigo'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'complejidadPractica',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['complejidadPractica'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'descripcion',\n    type: FieldType.string,\n    label: NOMENCLADOR.fields['descripcion'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'fechaNorma',\n    type: FieldType.date,\n    label: NOMENCLADOR.fields['fechaNorma'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'modalidadPresentacion',\n    type: FieldType.options,\n    label: NOMENCLADOR.fields['modalidadPresentacion'],\n    options: NOMENCLADOR.optionsModalidadPresentacion,\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n\n  {\n    name: 'numeroNormaRespaldatoria',\n    type: FieldType.string,\n    label: NOMENCLADOR.fields['numeroNormaRespaldatoria'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'periodoTope',\n    type: FieldType.options,\n    options: NOMENCLADOR.optionsPeriodoTope,\n    label: NOMENCLADOR.fields['periodoTope'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'programaSanitario',\n    type: FieldType.string,\n    label: NOMENCLADOR.fields['programaSanitario'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'topesCoberturaPeriodo',\n    type: FieldType.int,\n    label: NOMENCLADOR.fields['topesCoberturaPeriodo'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'valorIpross',\n    type: FieldType.float,\n    label: NOMENCLADOR.fields['valorIpross'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n];\n\nexport default configNomenclador;\n"]},"metadata":{},"sourceType":"module"}