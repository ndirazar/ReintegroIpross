{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/reintegros/reintegros-frontend/pages/login.tsx\",\n    _s = $RefreshSig$();\n\nimport Login from '../components/login/login';\nimport { post } from '../components/api-call/service';\nimport Cookies from 'universal-cookie';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nexport default function LoginPage() {\n  _s();\n\n  var _useState = useState(null),\n      error = _useState[0],\n      seterror = _useState[1];\n\n  var router = useRouter();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n      var res, _res$data, access, refresh, user, notifications, cookies, _res$data2, _error$response, _error$response$data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return post('api/usuarios/login', {\n                username: username,\n                password: password\n              });\n\n            case 3:\n              res = _context.sent;\n              _res$data = res.data, access = _res$data.access, refresh = _res$data.refresh, user = _res$data.user, notifications = _res$data.notifications;\n\n              if (access) {\n                cookies = new Cookies();\n                cookies.set('access', access, {\n                  path: '/'\n                });\n                cookies.set('refresh', refresh, {\n                  path: '/'\n                });\n                cookies.set('username', username, {\n                  path: '/'\n                }); // cookies.set('user', JSON.stringify(user), { path: '/' });\n\n                localStorage.setItem('user', JSON.stringify(user)); // cookies.set('notifications', JSON.stringify(notifications), { path: '/' });\n\n                localStorage.setItem('notifications', JSON.stringify(notifications));\n                router.push('solicitudes');\n              } else {\n                seterror((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.code);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              seterror((_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.code);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Login, {\n    onSubmit: handleSubmit,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LoginPage, \"vs2g4dfpYLdkp69dUwSIcfpFnEo=\", false, function () {\n  return [useRouter];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/pages/login.tsx"],"names":["Login","post","Cookies","useState","useRouter","LoginPage","error","seterror","router","handleSubmit","username","password","res","data","access","refresh","user","notifications","cookies","set","path","localStorage","setItem","JSON","stringify","push","code","response"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,2BAAlB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACRF,QAAQ,CAAC,IAAD,CADA;AAAA,MAC3BG,KAD2B;AAAA,MACpBC,QADoB;;AAElC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AACA,MAAMK,YAAY;AAAA,wEAAG,iBAAOC,QAAP,EAAyBC,QAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGLV,IAAI,CAAC,oBAAD,EAAuB;AAAES,gBAAAA,QAAQ,EAARA,QAAF;AAAYC,gBAAAA,QAAQ,EAARA;AAAZ,eAAvB,CAHC;;AAAA;AAGjBC,cAAAA,GAHiB;AAAA,0BAIgCA,GAAG,CAACC,IAJpC,EAITC,MAJS,aAITA,MAJS,EAIDC,OAJC,aAIDA,OAJC,EAIQC,IAJR,aAIQA,IAJR,EAIcC,aAJd,aAIcA,aAJd;;AAKjB,kBAAIH,MAAJ,EAAY;AACJI,gBAAAA,OADI,GACM,IAAIhB,OAAJ,EADN;AAEVgB,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,MAAtB,EAA8B;AAAEM,kBAAAA,IAAI,EAAE;AAAR,iBAA9B;AACAF,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB,EAAgC;AAAEK,kBAAAA,IAAI,EAAE;AAAR,iBAAhC;AACAF,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,QAAxB,EAAkC;AAAEU,kBAAAA,IAAI,EAAE;AAAR,iBAAlC,EAJU,CAMV;;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAA7B,EAPU,CASV;;AACAK,gBAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeP,aAAf,CAAtC;AAEAT,gBAAAA,MAAM,CAACiB,IAAP,CAAY,aAAZ;AACD,eAbD,MAaO;AACLlB,gBAAAA,QAAQ,eAACK,GAAG,CAACC,IAAL,+CAAC,WAAUa,IAAX,CAAR;AACD;;AApBgB;AAAA;;AAAA;AAAA;AAAA;AAsBjBnB,cAAAA,QAAQ,oBAAC,YAAMoB,QAAP,4EAAC,gBAAgBd,IAAjB,yDAAC,qBAAsBa,IAAvB,CAAR;;AAtBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZjB,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAyBA,sBAAO,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAEA,YAAjB;AAA+B,IAAA,KAAK,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7BuBD,S;UAEPD,S;;;KAFOC,S","sourcesContent":["import Login from '../components/login/login';\nimport { post } from '../components/api-call/service';\nimport Cookies from 'universal-cookie';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\n\nexport default function LoginPage() {\n  const [error, seterror] = useState(null);\n  const router = useRouter();\n  const handleSubmit = async (username: String, password: string) => {\n    let res;\n    try {\n      res = await post('api/usuarios/login', { username, password });\n      const { access, refresh, user, notifications } = res.data;\n      if (access) {\n        const cookies = new Cookies();\n        cookies.set('access', access, { path: '/' });\n        cookies.set('refresh', refresh, { path: '/' });\n        cookies.set('username', username, { path: '/' });\n\n        // cookies.set('user', JSON.stringify(user), { path: '/' });\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // cookies.set('notifications', JSON.stringify(notifications), { path: '/' });\n        localStorage.setItem('notifications', JSON.stringify(notifications));\n\n        router.push('solicitudes');\n      } else {\n        seterror(res.data?.code);\n      }\n    } catch (error) {\n      seterror(error.response?.data?.code);\n    }\n  };\n  return <Login onSubmit={handleSubmit} error={error} />;\n}\n"]},"metadata":{},"sourceType":"module"}