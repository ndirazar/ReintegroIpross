{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Box, Button, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { ListaPrestacion } from '../prestaciones/ListaPrestaciones';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { send } from '../../api-call/service';\nimport Form from '../../builder';\nimport configAdjuntos from './FormConfig';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport useStyles from '../Stepper.styles';\nimport useLoading from '../../common/hooks/Loading';\nexport var FormAdjuntos = function FormAdjuntos(_ref) {\n  var prestaciones = _ref.prestaciones,\n      step = _ref.step;\n\n  var _useState = useState(null),\n      prestacion = _useState[0],\n      setPrestacion = _useState[1];\n\n  var classes = useStyles();\n\n  var _useLoading = useLoading(),\n      isLoading = _useLoading.isLoading,\n      unsetLoading = _useLoading.unsetLoading;\n\n  var submitAdjuntos = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var formData, _iterator, _step, ad, resAdjuntos;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              formData = new FormData();\n              _iterator = _createForOfIteratorHelper(data.adjuntos);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  ad = _step.value;\n                  formData.append('archivo', ad);\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              formData.append('etiqueta', '1');\n              formData.append('prestacion', prestacion);\n              _context.next = 8;\n              return send({\n                url: 'api/archivos-adjuntos/',\n                data: formData,\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  isLoading();\n                }\n              });\n\n            case 8:\n              resAdjuntos = _context.sent;\n\n              if (resAdjuntos.status === 201) {\n                console.log(resAdjuntos);\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n              _context.prev = 15;\n              unsetLoading();\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12, 15, 18]]);\n    }));\n\n    return function submitAdjuntos(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handlePrestacion = function handlePrestacion(index) {\n    var _prestaciones$index;\n\n    setPrestacion((_prestaciones$index = prestaciones[index]) === null || _prestaciones$index === void 0 ? void 0 : _prestaciones$index.id);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      children: [/*#__PURE__*/_jsx(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: step.title\n      }), /*#__PURE__*/_jsx(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: step.description\n      })]\n    }), /*#__PURE__*/_jsx(ListaPrestacion, {\n      prestaciones: prestaciones,\n      buttons: [{\n        action: handlePrestacion,\n        icon: /*#__PURE__*/_jsx(AttachFileIcon, {})\n      }]\n    }), prestacion && /*#__PURE__*/_jsx(Form, {\n      config: configAdjuntos,\n      data: {\n        adjuntos: []\n      },\n      onSubmit: submitAdjuntos,\n      submitButton: /*#__PURE__*/_jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        endIcon: /*#__PURE__*/_jsx(PublishIcon, {}),\n        className: classes.button,\n        children: \"Subir\"\n      }),\n      buttonsWidth: 5\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}