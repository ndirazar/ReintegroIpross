{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { List, ListItem, ListItemText, Box, Divider, Typography, Badge, ListSubheader, Chip } from '@material-ui/core';\nimport useStyles from './NotificacionesStyle';\nimport { formatDateNotification, getUser } from '../common/helpers';\nimport { send } from '../api-call/service';\nexport default function Notificaciones({\n  notificaciones,\n  onUpdateNotificaciones\n}) {\n  var _getItemsList;\n\n  const classes = useStyles();\n  const {\n    0: tabSolicitudes,\n    1: setTabSolicitudes\n  } = useState(true);\n\n  const markNotificationAsRead = async notificacion => {\n    const user = getUser();\n    const preview = await send({\n      url: `api/usuarios/${user.id}/marcar-notificacion-como-leida/${notificacion.id}`,\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    localStorage.setItem('notifications', JSON.stringify(preview.data.notifications));\n    onUpdateNotificaciones(preview.data.notifications);\n  };\n  /**\n   * Funcion que se encarga de retornar el listado de notificaciones segun el\n   * tab que este seleccionado (solicitudes, solicitudes autorizadas)\n   */\n\n\n  const getItemsList = () => {\n    if (tabSolicitudes) {\n      const notificacionesSelected = notificaciones === null || notificaciones === void 0 ? void 0 : notificaciones.filter(notificacion => {\n        return notificacion.tipo === 'solicitud';\n      });\n      return notificacionesSelected;\n    } else {\n      const notificacionesSelected = notificaciones === null || notificaciones === void 0 ? void 0 : notificaciones.filter(notificacion => {\n        return notificacion.tipo === 'autorizacion';\n      });\n      return notificacionesSelected;\n    }\n  };\n\n  const switchToSolicitudesAutorizadas = () => {\n    setTabSolicitudes(false);\n  };\n\n  const switchToSolicitudes = () => {\n    setTabSolicitudes(true);\n  };\n  /**\n   * Funcion que se encarga de retornar las cantidad de notificaciones\n   * no leidas del tipo de solicitud\n   */\n\n\n  const cantidadDeNotificacionesDeSolicitudes = () => {\n    return notificaciones === null || notificaciones === void 0 ? void 0 : notificaciones.filter(notificacion => {\n      return notificacion.tipo === 'solicitud' && notificacion.visto == false;\n    }).length;\n  };\n  /**\n   * Funcion que se encarga de retornar las cantidad de notificaciones\n   * no leidas del tipo de solicitudes autorizadas\n   */\n\n\n  const cantidadDeNotificacionesDeAutorizaciones = () => {\n    return notificaciones === null || notificaciones === void 0 ? void 0 : notificaciones.filter(notificacion => {\n      return notificacion.tipo === 'autorizacion' && notificacion.visto == false;\n    }).length;\n  };\n\n  return /*#__PURE__*/_jsx(Box, {\n    boxShadow: 4,\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(List, {\n      className: classes.list,\n      subheader: /*#__PURE__*/_jsxs(ListSubheader, {\n        className: classes.subHeader,\n        children: [/*#__PURE__*/_jsxs(Box, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            className: classes.titleSubHeader,\n            children: \"Notificaciones\"\n          }), /*#__PURE__*/_jsxs(Box, {\n            display: \"flex\",\n            className: classes.chips,\n            children: [/*#__PURE__*/_jsx(Badge, {\n              color: \"secondary\",\n              badgeContent: cantidadDeNotificacionesDeSolicitudes(),\n              className: classes.chipSolicitudes,\n              children: /*#__PURE__*/_jsx(Chip, {\n                label: \"Solicitudes\",\n                color: \"primary\",\n                clickable: true,\n                onClick: switchToSolicitudes,\n                className: `${classes.chip} ${tabSolicitudes ? 'active' : ''}`\n              })\n            }), /*#__PURE__*/_jsx(Badge, {\n              color: \"secondary\",\n              badgeContent: cantidadDeNotificacionesDeAutorizaciones(),\n              children: /*#__PURE__*/_jsx(Chip, {\n                label: \"Solicitudes Autorizadas\",\n                color: \"primary\",\n                onClick: switchToSolicitudesAutorizadas,\n                clickable: true,\n                className: `${classes.chip} ${tabSolicitudes ? '' : 'active'}`\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Divider, {})]\n      }),\n      children: (_getItemsList = getItemsList()) === null || _getItemsList === void 0 ? void 0 : _getItemsList.map(notificacion => {\n        return /*#__PURE__*/_jsx(Box, {\n          children: /*#__PURE__*/_jsx(ListItem, {\n            button: true,\n            selected: !notificacion.visto,\n            onClick: () => markNotificationAsRead(notificacion),\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxs(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                children: [/*#__PURE__*/_jsx(Box, {\n                  children: /*#__PURE__*/_jsx(ListItemText, {\n                    primary: /*#__PURE__*/_jsx(Typography, {\n                      className: classes.titleText,\n                      children: notificacion.titulo\n                    }),\n                    secondary: /*#__PURE__*/_jsx(Typography, {\n                      className: classes.mensajeText,\n                      children: notificacion.mensaje\n                    })\n                  })\n                }), /*#__PURE__*/_jsxs(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [!notificacion.visto && /*#__PURE__*/_jsx(Box, {\n                    className: classes.badge,\n                    children: /*#__PURE__*/_jsx(Badge, {\n                      color: \"primary\",\n                      variant: \"dot\"\n                    })\n                  }), /*#__PURE__*/_jsx(Box, {\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: /*#__PURE__*/_jsx(Typography, {\n                        className: classes.dateText,\n                        children: formatDateNotification(notificacion.fechaDeCreacion)\n                      })\n                    })\n                  })]\n                })]\n              }), /*#__PURE__*/_jsx(Divider, {})]\n            })\n          })\n        }, notificacion.id);\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}