{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/builder/FieldRender.tsx\";\nimport { TextField, Checkbox, RadioGroup, FormControl, FormControlLabel, Radio, FormHelperText, FormLabel, InputLabel, Select, MenuItem, InputAdornment, Box } from '@material-ui/core';\nimport { KeyboardDatePicker, KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport esLocale from 'date-fns/locale/es';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport { FieldType } from './FormField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format, parseISO } from 'date-fns';\nimport { FORM_BUILDER } from '../../labels';\nimport FieldAutocomplete from './FieldAutocomplete';\nimport FileInput from '../common/FileInput'; // Needed for prevent passing 'value' and 'onChange' props\n\nvar DatePicker = KeyboardDatePicker;\nvar TimePicker = KeyboardTimePicker;\nexport var getError = function getError(field, errors) {\n  var _field$rules, _field$rules2, _field$rules3, _field$rules4;\n\n  if (errors && errors[field.name]) {\n    switch (errors[field.name].type) {\n      case 'required':\n        return FORM_BUILDER.required;\n\n      case 'min':\n        return \"\".concat(FORM_BUILDER.min, \" \").concat((_field$rules = field.rules) === null || _field$rules === void 0 ? void 0 : _field$rules.min);\n\n      case 'minLength':\n        return \"\".concat(FORM_BUILDER.minLength, \" \").concat((_field$rules2 = field.rules) === null || _field$rules2 === void 0 ? void 0 : _field$rules2.minLength);\n\n      case 'max':\n        return \"\".concat(FORM_BUILDER.max, \" \").concat((_field$rules3 = field.rules) === null || _field$rules3 === void 0 ? void 0 : _field$rules3.max);\n\n      case 'maxLength':\n        return \"\".concat(FORM_BUILDER.maxLength, \" \").concat((_field$rules4 = field.rules) === null || _field$rules4 === void 0 ? void 0 : _field$rules4.maxLength);\n\n      case 'pattern':\n        return errors[field.name].message || FORM_BUILDER.pattern;\n\n      case 'validate':\n        return errors[field.name].message;\n\n      case 'unique':\n        return \"\".concat(FORM_BUILDER.unique);\n\n      default:\n        return errors[field.name].message || FORM_BUILDER[\"default\"];\n      // return FORM_BUILDER.default;\n    }\n  } else {\n    return null;\n  }\n};\nexport var getRules = function getRules(field, form) {\n  var rules = field.rules || {};\n\n  if (rules.validate) {\n    var oldMethod = rules.validate;\n\n    rules.validate = function () {\n      return oldMethod(form);\n    };\n  }\n\n  return rules;\n};\nexport default function FieldRender(_ref) {\n  var _field$rules5,\n      _ref2,\n      _this = this,\n      _ref5,\n      _field$rules10,\n      _ref7,\n      _ref8;\n\n  var field = _ref.field,\n      form = _ref.form,\n      data = _ref.data;\n  var control = form.control,\n      errors = form.errors;\n  var variant = 'standard';\n  var error = getError(field, errors);\n  var rules = getRules(field, form);\n\n  if (field.component === 'email') {\n    rules.pattern = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  } // Prefix & Suffix\n\n\n  var inputProps = {};\n\n  if (field.prefix) {\n    inputProps.startAdornment = /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"start\",\n      children: field.prefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }, this);\n  }\n\n  if (field.suffix) {\n    inputProps.endAdornment = /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: field.suffix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }, this);\n  }\n\n  var getMaxDate = function getMaxDate(f) {\n    var _f$rules;\n\n    return (f === null || f === void 0 ? void 0 : (_f$rules = f.rules) === null || _f$rules === void 0 ? void 0 : _f$rules.max) || new Date(2100, 10, 1);\n  };\n\n  var getMinDate = function getMinDate(f) {\n    var _f$rules2;\n\n    return (f === null || f === void 0 ? void 0 : (_f$rules2 = f.rules) === null || _f$rules2 === void 0 ? void 0 : _f$rules2.min) || new Date(1900, 10, 1);\n  };\n\n  switch (field.type) {\n    case FieldType.date:\n      return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        locale: esLocale,\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          variant: variant,\n          name: field.name,\n          label: field.label + (((_field$rules5 = field.rules) === null || _field$rules5 === void 0 ? void 0 : _field$rules5.required) === true ? ' *' : ''),\n          control: control,\n          error: !!error,\n          rules: rules,\n          initialFocusedDate: null,\n          defaultValue: (_ref2 = data[field.name] && format(parseISO(data[field.name]), 'MM/dd/yyyy')) !== null && _ref2 !== void 0 ? _ref2 : '',\n          render: function render(props) {\n            return /*#__PURE__*/_jsxDEV(DatePicker, {\n              value: props.value || null,\n              onChange: function onChange(e) {\n                props.onChange(e);\n                field.onChange && field.onChange(e, form);\n              },\n              inputRef: props.ref,\n              maxDate: getMaxDate(field),\n              minDate: getMinDate(field) // maxDate={field?.rules?.max || new Date(2100, 10, 1)}\n              // minDate={field?.rules?.max || new Date(1900, 10, 1)}\n              ,\n              autoOk: true,\n              disableToolbar: true,\n              variant: variant,\n              format: \"dd/MM/yyyy\",\n              inputVariant: variant,\n              fullWidth: true,\n              label: field.label,\n              helperText: error,\n              error: error,\n              disabled: field.disabled,\n              KeyboardButtonProps: {\n                'aria-label': 'change date'\n              },\n              InputLabelProps: {\n                shrink: props.value ? true : undefined\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case FieldType.time:\n      return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        locale: esLocale,\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          variant: variant,\n          error: !!error,\n          rules: rules,\n          render: function render(props) {\n            var _field$rules6;\n\n            return /*#__PURE__*/_jsxDEV(TimePicker, {\n              value: props.value,\n              onChange: props.onChange,\n              inputRef: props.ref,\n              autoOk: true,\n              variant: \"inline\",\n              disableToolbar: true,\n              inputVariant: variant,\n              fullWidth: true,\n              label: field.label + (((_field$rules6 = field.rules) === null || _field$rules6 === void 0 ? void 0 : _field$rules6.required) === true ? ' *' : ''),\n              error: !!error,\n              helperText: error,\n              disabled: field.disabled,\n              format: \"HH:mm\",\n              KeyboardButtonProps: {\n                'aria-label': 'change time'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, _this);\n          },\n          name: field.name,\n          placeholder: field.placeholder,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case FieldType[\"int\"]:\n      return /*#__PURE__*/_jsxDEV(Controller, {\n        render: function render(props) {\n          var _field$rules7;\n\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            label: field.label + (((_field$rules7 = field.rules) === null || _field$rules7 === void 0 ? void 0 : _field$rules7.required) === true ? ' *' : ''),\n            value: props.value,\n            name: field.name,\n            variant: variant,\n            fullWidth: true,\n            type: \"number\",\n            helperText: error,\n            error: !!error,\n            inputRef: props.ref,\n            onChange: function onChange(event) {\n              form.setValue(field.name, parseFloat(event.target.value));\n              field.onChange && field.onChange(parseFloat(event.target.value), form);\n            },\n            onBlur: function onBlur(event) {\n              field.onBlur && field.onBlur(event.target.value, form);\n            },\n            InputProps: inputProps,\n            disabled: field.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, _this);\n        },\n        defaultValue: data[field.name],\n        type: \"number\",\n        name: field.name,\n        label: field.label,\n        control: control,\n        error: !!error,\n        rules: rules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this);\n\n    case FieldType[\"float\"]:\n      return /*#__PURE__*/_jsxDEV(Controller, {\n        render: function render(props) {\n          var _field$rules8;\n\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            label: field.label + (((_field$rules8 = field.rules) === null || _field$rules8 === void 0 ? void 0 : _field$rules8.required) === true ? ' *' : ''),\n            value: props.value,\n            name: field.name,\n            type: \"number\",\n            variant: variant,\n            error: !!error,\n            fullWidth: true,\n            helperText: error || field.help,\n            inputRef: props.ref,\n            onChange: function onChange(_ref3) {\n              var value = _ref3.target.value;\n              var newVal = 0;\n              var regex = /^\\d+(\\.\\d{0,2})?$/;\n\n              if (regex.test(value)) {\n                newVal = Number(value);\n              } else {\n                newVal = Number(props.value);\n              }\n\n              form.setValue(field.name, newVal);\n              props.onChange && props.onChange(newVal);\n            },\n            onFocus: function onFocus(_ref4) {\n              var value = _ref4.target.value;\n\n              if (value === '0') {\n                form.setValue(field.name, '');\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, _this);\n        },\n        defaultValue: (_ref5 = data && data[field.name]) !== null && _ref5 !== void 0 ? _ref5 : 0,\n        name: field.name,\n        label: field.label,\n        control: control,\n        error: !!error,\n        rules: rules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case FieldType.options:\n      if (!Array.isArray(field.options)) {\n        return /*#__PURE__*/_jsxDEV(FieldAutocomplete, {\n          field: field,\n          error: error,\n          rules: rules,\n          form: form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 16\n        }, this);\n      } else {\n        var _field$rules9, _ref6;\n\n        return /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: variant,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: field.label + (((_field$rules9 = field.rules) === null || _field$rules9 === void 0 ? void 0 : _field$rules9.required) === true ? ' *' : '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: field.name,\n            id: field.name,\n            error: !!error,\n            disabled: field.disabled,\n            rules: rules,\n            defaultValue: (_ref6 = data && data[field.name]) !== null && _ref6 !== void 0 ? _ref6 : '',\n            render: function render(props) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  label: field.label,\n                  value: props.value,\n                  error: error,\n                  onChange: function onChange(e) {\n                    var _e$target$value, _e$target, _e$target2;\n\n                    props.onChange((_e$target$value = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) !== null && _e$target$value !== void 0 ? _e$target$value : null);\n                    field.onChange && field.onChange(e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value, form);\n                  },\n                  disabled: field.disabled,\n                  multiple: field.multiple,\n                  children: field.options.map(function (elem, index) {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: elem.value,\n                      children: elem.label\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 23\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: 'Mui-error',\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this);\n      }\n\n      break;\n\n    case FieldType[\"boolean\"]:\n      return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Controller, {\n          error: !!error,\n          rules: rules,\n          helperText: error,\n          variant: variant,\n          fullWidth: true,\n          label: field.label + (((_field$rules10 = field.rules) === null || _field$rules10 === void 0 ? void 0 : _field$rules10.required) === true ? ' *' : ''),\n          render: function render(props) {\n            return /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: function onChange(event) {\n                form.setValue(field.name, event.target.checked);\n                field.onChange && field.onChange(event.target.checked, form);\n              },\n              checked: props.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, _this);\n          },\n          valueName: \"checked\",\n          name: field.name,\n          control: control,\n          color: \"primary\",\n          disabled: field.disabled,\n          defaultValue: data[field.name] || false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this),\n        label: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case FieldType.radio:\n      return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: '',\n        control: /*#__PURE__*/_jsxDEV(Controller, {\n          error: !!error,\n          rules: rules,\n          helperText: error,\n          variant: variant,\n          fullWidth: true,\n          label: field.label,\n          render: function render(props) {\n            var _field$options;\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n                name: field.name,\n                onChange: function onChange(event) {\n                  form.setValue(field.name, event.target.value);\n                  field.onChange && field.onChange(event.target.value, form);\n                },\n                value: props.value,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: field.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, _this), (_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map(function (opt, i) {\n                  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: opt.value,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 36\n                    }, _this),\n                    label: opt.label\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 25\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                style: {\n                  color: 'red'\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, _this);\n          },\n          valueName: \"checked\",\n          name: field.name,\n          control: control,\n          color: \"primary\",\n          disabled: field.disabled,\n          defaultValue: data[field.name] || false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case FieldType.file:\n      return /*#__PURE__*/_jsxDEV(Controller, {\n        render: function render(props) {\n          var _field$rules11;\n\n          return /*#__PURE__*/_jsxDEV(FileInput, {\n            label: field.label + (((_field$rules11 = field.rules) === null || _field$rules11 === void 0 ? void 0 : _field$rules11.required) === true ? ' *' : ''),\n            name: field.name,\n            accept: field.accept || '',\n            multiple: field.multiple,\n            error: error,\n            value: props.value,\n            max: field.rules.max,\n            onChange: field.onChange,\n            methods: form,\n            onRemove: function onRemove(file) {\n              field.onRemove && field.onRemove(file);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, _this);\n        },\n        defaultValue: (_ref7 = data && data[field.name]) !== null && _ref7 !== void 0 ? _ref7 : null,\n        name: field.name,\n        label: field.label,\n        control: control,\n        error: !!error,\n        rules: rules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case FieldType.br:\n      return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 14\n      }, this);\n      break;\n\n    default:\n      return /*#__PURE__*/_jsxDEV(Controller, {\n        render: function render(props) {\n          var _field$rules12;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: variant,\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: !!error,\n                label: field.label + (((_field$rules12 = field.rules) === null || _field$rules12 === void 0 ? void 0 : _field$rules12.required) === true ? ' *' : ''),\n                placeholder: field.label,\n                name: field.name,\n                id: field.name,\n                variant: variant,\n                fullWidth: true,\n                helperText: error || field.help,\n                inputRef: props.ref,\n                onChange: function onChange(e) {\n                  props.onChange(e.target.value);\n                  field.onChange && field.onChange(e.target.value, form);\n                },\n                disabled: field.disabled // value={(data && data[field.name]) ?? ''}\n                ,\n                value: props.value,\n                InputProps: inputProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false);\n        } // value={(data && data[field.name]) ?? ''}\n        ,\n        defaultValue: (_ref8 = data && data[field.name]) !== null && _ref8 !== void 0 ? _ref8 : '',\n        name: field.name,\n        label: field.label,\n        control: control,\n        error: !!error,\n        rules: rules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this);\n      break;\n  }\n}\n_c = FieldRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldRender\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/builder/FieldRender.tsx"],"names":["TextField","Checkbox","RadioGroup","FormControl","FormControlLabel","Radio","FormHelperText","FormLabel","InputLabel","Select","MenuItem","InputAdornment","Box","KeyboardDatePicker","KeyboardTimePicker","MuiPickersUtilsProvider","esLocale","React","Controller","FieldType","DateFnsUtils","format","parseISO","FORM_BUILDER","FieldAutocomplete","FileInput","DatePicker","TimePicker","getError","field","errors","name","type","required","min","rules","minLength","max","maxLength","message","pattern","unique","getRules","form","validate","oldMethod","FieldRender","data","control","variant","error","component","inputProps","prefix","startAdornment","suffix","endAdornment","getMaxDate","f","Date","getMinDate","date","label","props","value","e","onChange","ref","disabled","shrink","undefined","time","placeholder","event","setValue","parseFloat","target","onBlur","help","newVal","regex","test","Number","options","Array","isArray","multiple","map","elem","index","checked","radio","opt","i","color","file","accept","onRemove","br"],"mappings":"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","sourcesContent":["import {\n  TextField,\n  Checkbox,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  FormHelperText,\n  FormLabel,\n  InputLabel,\n  Select,\n  MenuItem,\n  OutlinedInputProps,\n  InputAdornment,\n  Box,\n} from '@material-ui/core';\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport esLocale from 'date-fns/locale/es';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport { FieldType, FormField } from './FormField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format, parseISO, subDays } from 'date-fns';\nimport { FORM_BUILDER } from '../../labels';\nimport FieldAutocomplete from './FieldAutocomplete';\nimport FileInput from '../common/FileInput';\n\n// Needed for prevent passing 'value' and 'onChange' props\nconst DatePicker: any = KeyboardDatePicker;\nconst TimePicker: any = KeyboardTimePicker;\ntype Props = {\n  field: any;\n  form: any;\n  data: any;\n};\n\nexport const getError = (field: any, errors: any) => {\n  if (errors && errors[field.name]) {\n    switch (errors[field.name].type) {\n      case 'required':\n        return FORM_BUILDER.required;\n      case 'min':\n        return `${FORM_BUILDER.min} ${field.rules?.min}`;\n      case 'minLength':\n        return `${FORM_BUILDER.minLength} ${field.rules?.minLength}`;\n      case 'max':\n        return `${FORM_BUILDER.max} ${field.rules?.max}`;\n      case 'maxLength':\n        return `${FORM_BUILDER.maxLength} ${field.rules?.maxLength}`;\n      case 'pattern':\n        return errors[field.name].message || FORM_BUILDER.pattern;\n      case 'validate':\n        return errors[field.name].message;\n      case 'unique':\n        return `${FORM_BUILDER.unique}`;\n      default:\n        return errors[field.name].message || FORM_BUILDER.default;\n      // return FORM_BUILDER.default;\n    }\n  } else {\n    return null;\n  }\n};\n\nexport const getRules = (field, form) => {\n  const rules = field.rules || {};\n  if (rules.validate) {\n    const oldMethod = rules.validate;\n    rules.validate = () => oldMethod(form);\n  }\n  return rules;\n};\nexport default function FieldRender({ field, form, data }: Props) {\n  const { control, errors } = form;\n  const variant = 'standard';\n\n  const error = getError(field, errors);\n  const rules = getRules(field, form);\n  if (field.component === 'email') {\n    rules.pattern = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  }\n  // Prefix & Suffix\n  const inputProps: Partial<OutlinedInputProps> = {};\n  if (field.prefix) {\n    inputProps.startAdornment = <InputAdornment position=\"start\">{field.prefix}</InputAdornment>;\n  }\n  if (field.suffix) {\n    inputProps.endAdornment = <InputAdornment position=\"end\">{field.suffix}</InputAdornment>;\n  }\n\n  const getMaxDate = (f) => {\n    return f?.rules?.max || new Date(2100, 10, 1);\n  };\n\n  const getMinDate = (f) => {\n    return f?.rules?.min || new Date(1900, 10, 1);\n  };\n\n  switch (field.type) {\n    case FieldType.date:\n      return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n          <Controller\n            variant={variant}\n            name={field.name}\n            label={field.label + (field.rules?.required === true ? ' *' : '')}\n            control={control}\n            error={!!error}\n            rules={rules}\n            initialFocusedDate={null}\n            defaultValue={\n              (data[field.name] && format(parseISO(data[field.name]), 'MM/dd/yyyy')) ?? ''\n            }\n            render={(props) => (\n              <DatePicker\n                value={props.value || null}\n                onChange={(e) => {\n                  props.onChange(e);\n                  field.onChange && field.onChange(e, form);\n                }}\n                inputRef={props.ref}\n                maxDate={getMaxDate(field)}\n                minDate={getMinDate(field)}\n                // maxDate={field?.rules?.max || new Date(2100, 10, 1)}\n                // minDate={field?.rules?.max || new Date(1900, 10, 1)}\n\n                autoOk\n                disableToolbar\n                variant={variant}\n                format=\"dd/MM/yyyy\"\n                inputVariant={variant}\n                fullWidth={true}\n                label={field.label}\n                helperText={error}\n                error={error}\n                disabled={field.disabled}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n                InputLabelProps={{\n                  shrink: props.value ? true : undefined,\n                }}\n              />\n            )}\n          />\n        </MuiPickersUtilsProvider>\n      );\n      break;\n\n    case FieldType.time:\n      return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n          <Controller\n            variant={variant}\n            error={!!error}\n            rules={rules}\n            render={(props) => (\n              <TimePicker\n                value={props.value}\n                onChange={props.onChange}\n                inputRef={props.ref}\n                autoOk\n                variant=\"inline\"\n                disableToolbar\n                inputVariant={variant}\n                fullWidth={true}\n                label={field.label + (field.rules?.required === true ? ' *' : '')}\n                error={!!error}\n                helperText={error}\n                disabled={field.disabled}\n                format=\"HH:mm\"\n                KeyboardButtonProps={{\n                  'aria-label': 'change time',\n                }}\n              />\n            )}\n            name={field.name}\n            placeholder={field.placeholder}\n            control={control}\n          />\n        </MuiPickersUtilsProvider>\n      );\n      break;\n    case FieldType.int:\n      return (\n        <Controller\n          render={(props) => (\n            <TextField\n              label={field.label + (field.rules?.required === true ? ' *' : '')}\n              value={props.value}\n              name={field.name}\n              variant={variant}\n              fullWidth={true}\n              type=\"number\"\n              helperText={error}\n              error={!!error}\n              inputRef={props.ref}\n              onChange={(event) => {\n                form.setValue(field.name, parseFloat(event.target.value));\n                field.onChange && field.onChange(parseFloat(event.target.value), form);\n              }}\n              onBlur={(event) => {\n                field.onBlur && field.onBlur(event.target.value, form);\n              }}\n              InputProps={inputProps}\n              disabled={field.disabled}\n            />\n          )}\n          defaultValue={data[field.name]}\n          type=\"number\"\n          name={field.name}\n          label={field.label}\n          control={control}\n          error={!!error}\n          rules={rules}\n        />\n      );\n    case FieldType.float:\n      return (\n        <Controller\n          render={(props) => (\n            <TextField\n              label={field.label + (field.rules?.required === true ? ' *' : '')}\n              value={props.value}\n              name={field.name}\n              type=\"number\"\n              variant={variant}\n              error={!!error}\n              fullWidth={true}\n              helperText={error || field.help}\n              inputRef={props.ref}\n              onChange={({ target: { value } }) => {\n                let newVal = 0;\n                const regex = /^\\d+(\\.\\d{0,2})?$/;\n                if (regex.test(value)) {\n                  newVal = Number(value);\n                } else {\n                  newVal = Number(props.value);\n                }\n                form.setValue(field.name, newVal);\n                props.onChange && props.onChange(newVal);\n              }}\n              onFocus={({ target: { value } }) => {\n                if (value === '0') {\n                  form.setValue(field.name, '');\n                }\n              }}\n            />\n          )}\n          defaultValue={(data && data[field.name]) ?? 0}\n          name={field.name}\n          label={field.label}\n          control={control}\n          error={!!error}\n          rules={rules}\n        />\n      );\n      break;\n\n    case FieldType.options:\n      if (!Array.isArray(field.options)) {\n        return <FieldAutocomplete field={field} error={error} rules={rules} form={form} />;\n      } else {\n        return (\n          <FormControl variant={variant} fullWidth={true}>\n            <InputLabel>{field.label + (field.rules?.required === true ? ' *' : '')}</InputLabel>\n            <Controller\n              control={control}\n              name={field.name}\n              id={field.name}\n              error={!!error}\n              disabled={field.disabled}\n              rules={rules}\n              defaultValue={(data && data[field.name]) ?? ''}\n              render={(props) => (\n                <>\n                  <Select\n                    label={field.label}\n                    value={props.value}\n                    error={error}\n                    onChange={(e) => {\n                      props.onChange(e?.target?.value ?? null);\n                      field.onChange && field.onChange(e?.target?.value, form);\n                    }}\n                    disabled={field.disabled}\n                    multiple={field.multiple}\n                  >\n                    {field.options.map((elem, index) => (\n                      <MenuItem key={index} value={elem.value}>\n                        {elem.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </>\n              )}\n            />\n            {error && <FormHelperText className={'Mui-error'}>{error}</FormHelperText>}\n          </FormControl>\n        );\n      }\n      break;\n\n    case FieldType.boolean:\n      return (\n        <FormControlLabel\n          control={\n            <Controller\n              error={!!error}\n              rules={rules}\n              helperText={error}\n              variant={variant}\n              fullWidth={true}\n              label={field.label + (field.rules?.required === true ? ' *' : '')}\n              render={(props) => (\n                <Checkbox\n                  onChange={(event) => {\n                    form.setValue(field.name, event.target.checked);\n                    field.onChange && field.onChange(event.target.checked, form);\n                  }}\n                  checked={props.value}\n                />\n              )}\n              valueName=\"checked\"\n              name={field.name}\n              control={control}\n              color=\"primary\"\n              disabled={field.disabled}\n              defaultValue={data[field.name] || false}\n            />\n          }\n          label={field.label}\n        />\n      );\n      break;\n    case FieldType.radio:\n      return (\n        <FormControlLabel\n          label={''}\n          control={\n            <Controller\n              error={!!error}\n              rules={rules}\n              helperText={error}\n              variant={variant}\n              fullWidth={true}\n              label={field.label}\n              render={(props) => (\n                <Box>\n                  <RadioGroup\n                    name={field.name}\n                    onChange={(event) => {\n                      form.setValue(field.name, event.target.value);\n                      field.onChange && field.onChange(event.target.value, form);\n                    }}\n                    value={props.value}\n                  >\n                    <FormLabel component=\"legend\">{field.label}</FormLabel>\n                    {field.options?.map((opt, i) => {\n                      return (\n                        <FormControlLabel\n                          value={opt.value}\n                          control={<Radio />}\n                          label={opt.label}\n                          key={i}\n                        />\n                      );\n                    })}\n                  </RadioGroup>\n                  <FormHelperText style={{ color: 'red' }}>{error}</FormHelperText>\n                </Box>\n              )}\n              valueName=\"checked\"\n              name={field.name}\n              control={control}\n              color=\"primary\"\n              disabled={field.disabled}\n              defaultValue={data[field.name] || false}\n            />\n          }\n        />\n      );\n      break;\n    case FieldType.file:\n      return (\n        <Controller\n          render={(props) => (\n            <FileInput\n              label={field.label + (field.rules?.required === true ? ' *' : '')}\n              name={field.name}\n              accept={field.accept || ''}\n              multiple={field.multiple}\n              error={error}\n              value={props.value}\n              max={field.rules.max}\n              onChange={field.onChange}\n              methods={form}\n              onRemove={(file) => {\n                field.onRemove && field.onRemove(file);\n              }}\n            />\n          )}\n          defaultValue={(data && data[field.name]) ?? null}\n          name={field.name}\n          label={field.label}\n          control={control}\n          error={!!error}\n          rules={rules}\n        />\n      );\n      break;\n    case FieldType.br:\n      return <br></br>;\n      break;\n    default:\n      return (\n        <Controller\n          render={(props) => (\n            <>\n              <FormControl variant={variant} fullWidth={true}>\n                {/* <InputLabel htmlFor={field.name}>\n                  {field.label}\n                </InputLabel> */}\n                <TextField\n                  error={!!error}\n                  label={field.label + (field.rules?.required === true ? ' *' : '')}\n                  placeholder={field.label}\n                  name={field.name}\n                  id={field.name}\n                  variant={variant}\n                  fullWidth={true}\n                  helperText={error || field.help}\n                  inputRef={props.ref}\n                  onChange={(e) => {\n                    props.onChange(e.target.value);\n                    field.onChange && field.onChange(e.target.value, form);\n                  }}\n                  disabled={field.disabled}\n                  // value={(data && data[field.name]) ?? ''}\n                  value={props.value}\n                  InputProps={inputProps}\n                />\n              </FormControl>\n            </>\n          )}\n          // value={(data && data[field.name]) ?? ''}\n          defaultValue={(data && data[field.name]) ?? ''}\n          name={field.name}\n          label={field.label}\n          control={control}\n          error={!!error}\n          rules={rules}\n        />\n      );\n      break;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}