{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\nimport Typography from '@material-ui/core/Typography';\nimport { format, parseISO } from 'date-fns';\nimport { get, post } from '../api-call/service';\nimport { SOLICITUDES, STEPPER_SOLICITUDES } from '../../labels';\nimport useStyles from './Stepper.styles';\nimport { Box } from '@material-ui/core';\nimport { FormSolicitud } from './FormSolicitud';\nimport { FormPrestaciones } from './prestaciones/FormPrestaciones';\nimport { FormAdjuntos } from './adjuntos/FormAdjuntos';\nimport SolicitudesSummary from './SolicitudesSummary';\nexport const FormStepper = ({\n  setShowStepper,\n  onFinished\n}) => {\n  const {\n    watch,\n    errors,\n    trigger\n  } = useFormContext();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [compiledForm, setCompiledForm] = React.useState({});\n  const steps = STEPPER_SOLICITUDES.steps.map(elem => elem.title);\n  const form = watch();\n  const [prestaciones, setPrestaciones] = React.useState([]);\n  const [solicitud, setSolicitud] = React.useState(null);\n  const classes = useStyles();\n\n  const addPrestacion = async factura => {\n    form.fechaPractica = format(form === null || form === void 0 ? void 0 : form.fechaPractica, 'yyyy-MM-dd');\n    form.cobertura = parseInt(form.cobertura);\n    const nomenclador = await get(`api/nomenclador/${form === null || form === void 0 ? void 0 : form.nomenclador}`);\n    setPrestaciones([...prestaciones, _objectSpread(_objectSpread({}, form), {}, {\n      factura,\n      item: nomenclador === null || nomenclador === void 0 ? void 0 : nomenclador.data\n    })]);\n  };\n\n  const removePrestacion = id => {\n    setPrestaciones([...prestaciones.filter((_, index) => index !== id)]);\n  };\n\n  function getStepContent(step, formContent) {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsx(FormSolicitud, _objectSpread(_objectSpread({}, {\n          formContent\n        }), {}, {\n          step: STEPPER_SOLICITUDES.steps[step]\n        }));\n\n      case 1:\n        return /*#__PURE__*/_jsx(FormPrestaciones, _objectSpread(_objectSpread({}, {\n          formContent\n        }), {}, {\n          step: STEPPER_SOLICITUDES.steps[step],\n          addPrestacion: addPrestacion,\n          prestaciones: prestaciones,\n          removePrestacion: removePrestacion\n        }));\n\n      case 2:\n        return /*#__PURE__*/_jsx(SolicitudesSummary, {\n          solicitud: solicitud,\n          prestaciones: prestaciones,\n          header: true,\n          step: STEPPER_SOLICITUDES.steps[step]\n        });\n\n      case 3:\n        return /*#__PURE__*/_jsx(FormAdjuntos, {\n          prestaciones: prestaciones,\n          step: STEPPER_SOLICITUDES.steps[step]\n        });\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const handleNext = async () => {\n    window.scrollTo(0, 0);\n    let canContinue = false;\n    const result = await trigger();\n\n    if (!result) {\n      return;\n    }\n\n    switch (activeStep) {\n      case 0:\n        setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n          solicitud: form\n        }));\n        setSolicitud(_objectSpread({}, form));\n        canContinue = true;\n        break;\n\n      case 1:\n        if ((prestaciones === null || prestaciones === void 0 ? void 0 : prestaciones.length) > 0) {\n          setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n            prestaciones: prestaciones\n          }));\n          canContinue = true;\n        }\n\n        break;\n\n      case 2:\n        setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n          three: form\n        }));\n        canContinue = await handleSubmit(_objectSpread(_objectSpread({}, compiledForm), {}, {\n          three: form\n        }));\n        break;\n\n      case 3:\n        canContinue = true;\n        break;\n\n      default:\n        return 'not a valid step';\n    }\n\n    if (canContinue) {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    if (activeStep > 0) {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n\n      switch (activeStep) {\n        case 1:\n          // setCompiledForm({ ...compiledForm, solicitud: form });\n          break;\n\n        case 2:\n          // setCompiledForm({ ...compiledForm, prestaciones: form });\n          break;\n\n        default:\n          return 'not a valid step';\n      }\n    } else {\n      setShowStepper(false);\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompiledForm({});\n    setPrestaciones(null);\n    setSolicitud(null);\n    setShowStepper(false);\n  };\n\n  const handleSubmit = async form => {\n    if (_.isEmpty(errors)) {\n      var _form$solicitud, _form$solicitud2, _form$solicitud3;\n\n      const date = typeof (form === null || form === void 0 ? void 0 : (_form$solicitud = form.solicitud) === null || _form$solicitud === void 0 ? void 0 : _form$solicitud.fechaAlta) === 'string' ? parseISO(form === null || form === void 0 ? void 0 : (_form$solicitud2 = form.solicitud) === null || _form$solicitud2 === void 0 ? void 0 : _form$solicitud2.fechaAlta) : form === null || form === void 0 ? void 0 : (_form$solicitud3 = form.solicitud) === null || _form$solicitud3 === void 0 ? void 0 : _form$solicitud3.fechaAlta;\n      form.solicitud.fechaAlta = format(date, 'yyyy-MM-dd');\n      form.solicitud.afiliado = form.solicitud.afiliado.id; // form.solicitud.delegacion = form.solicitud.delegacion.id;\n\n      try {\n        var _solicitud$data;\n\n        //Remove the key used for show prestaciones list on step 2 before send to server\n        const presAux = prestaciones.map(elem => {\n          const aux = _objectSpread({}, elem);\n\n          delete aux.item;\n          return aux;\n        });\n        const solicitud = await post(SOLICITUDES.route, {\n          solicitud: _objectSpread({}, form.solicitud),\n          prestaciones: presAux\n        });\n        setPrestaciones([...(solicitud === null || solicitud === void 0 ? void 0 : (_solicitud$data = solicitud.data) === null || _solicitud$data === void 0 ? void 0 : _solicitud$data.prestaciones.map(p => _objectSpread(_objectSpread({}, p), {}, {\n          item: p.nomenclador\n        })))]);\n        onFinished();\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n        return /*#__PURE__*/_jsx(Step, _objectSpread(_objectSpread({}, stepProps), {}, {\n          children: /*#__PURE__*/_jsx(StepLabel, _objectSpread(_objectSpread({}, labelProps), {}, {\n            className: classes.stepLabel,\n            children: label\n          }))\n        }), label);\n      })\n    }), /*#__PURE__*/_jsx(Box, {\n      className: classes.formContainer,\n      children: activeStep === steps.length ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            children: STEPPER_SOLICITUDES.end\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: handleReset,\n            children: STEPPER_SOLICITUDES.close\n          })]\n        })\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [getStepContent(activeStep, compiledForm), /*#__PURE__*/_jsxs(Box, {\n          className: classes.stepperButtons,\n          children: [/*#__PURE__*/_jsx(Button, {\n            onClick: handleBack,\n            className: classes.button,\n            children: activeStep === 0 ? STEPPER_SOLICITUDES.cancel : STEPPER_SOLICITUDES.back\n          }), /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            className: classes.buttonNext,\n            color: \"primary\",\n            onClick: handleNext,\n            children: activeStep === steps.length - 1 ? STEPPER_SOLICITUDES.finish : STEPPER_SOLICITUDES.next\n          })]\n        })]\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}