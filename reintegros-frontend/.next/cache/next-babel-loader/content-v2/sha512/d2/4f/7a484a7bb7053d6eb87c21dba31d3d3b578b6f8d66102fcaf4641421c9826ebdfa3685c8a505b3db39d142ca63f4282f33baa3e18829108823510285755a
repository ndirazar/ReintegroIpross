{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Divider, List, ListItem, ListItemText, Typography, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { CUPONES } from '../../labels';\nimport Table from '../common/Table';\nimport Loading from '../common/Loading';\nimport Alert from '../common/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport { send } from '../api-call/service';\nimport Modal from '../common/Modal';\nimport SubTitleModalCreateLote from './SubTitleModalCreateLote';\nconst useStyles = makeStyles(theme => ({\n  typeCupon: {\n    marginLeft: '8px'\n  }\n}));\nexport default function CuponesList({\n  data,\n  handleDelete,\n  onEdit\n}) {\n  const classes = useStyles();\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(false);\n  const {\n    0: dataPreview,\n    1: setDataPreview\n  } = useState([]);\n  const {\n    0: processing,\n    1: setProcessing\n  } = useState(false);\n  const {\n    0: info,\n    1: setInfo\n  } = useState(null);\n  const columns = Object.keys(CUPONES.fields).map(key => {\n    var _CUPONES$renders$key;\n\n    return {\n      title: CUPONES.fields[key],\n      field: key,\n      render: (_CUPONES$renders$key = CUPONES.renders[key]) !== null && _CUPONES$renders$key !== void 0 ? _CUPONES$renders$key : null\n    };\n  });\n\n  const preCreateLote = async rowData => {\n    data = rowData.map(item => item.id);\n    setOpenModal(true);\n    setProcessing(true);\n    const preview = await send({\n      url: `api/lote/preview`,\n      data: {\n        cupones: data\n      },\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setDataPreview(preview.data.results);\n    setProcessing(false);\n  };\n\n  const handleConfirmModal = async () => {\n    var ids = [];\n    setProcessing(true);\n    dataPreview.forEach(value => {\n      if (value.isValid) {\n        ids.push(value.cupon.id);\n      }\n    });\n    const preview = await send({\n      url: `api/lote/`,\n      data: {\n        cupones: ids\n      },\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setProcessing(false);\n    setInfo(CUPONES.messages.successCreateCupones);\n    setOpenModal(false);\n  };\n\n  const handleCancelModal = () => {\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Table, {\n      columns: columns,\n      totalCount: data.count,\n      data: data.results,\n      title: CUPONES.name,\n      options: {\n        search: true,\n        selection: true\n      },\n      actions: [{\n        icon: /*#__PURE__*/_jsx(AddIcon, {}),\n        tooltip: 'Crear cupones',\n        onClick: async (event, rowData) => {\n          preCreateLote(rowData);\n        }\n      }],\n      onSelectionChange: () => {}\n    }), openModal && /*#__PURE__*/_jsxs(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: () => setOpenModal(!openModal),\n      title: CUPONES.modalCreateLote.mainTitle,\n      breadcrumbs: '',\n      subTitle: /*#__PURE__*/_jsx(SubTitleModalCreateLote, {\n        data: dataPreview\n      }),\n      actions: true,\n      onAcept: handleConfirmModal,\n      onCancel: handleCancelModal,\n      maxWidth: 'md',\n      children: [/*#__PURE__*/_jsx(List, {\n        children: dataPreview.map(item => {\n          if (!item.isValid) {\n            return /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Box, {\n                  children: [/*#__PURE__*/_jsx(Box, {\n                    fontWeight: \"fontWeightBold\",\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: /*#__PURE__*/_jsx(Box, {\n                        children: /*#__PURE__*/_jsxs(Typography, {\n                          children: [`Cupon: ${item.cupon.id}`, /*#__PURE__*/_jsx(\"span\", {\n                            className: classes.typeCupon,\n                            children: `${item.cupon.judicial ? 'Judicial' : ''}`\n                          })]\n                        })\n                      })\n                    })\n                  }), /*#__PURE__*/_jsxs(Box, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    ml: 5,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(ListItemText, {\n                        primary: \"No es v\\xE1lido\",\n                        secondary: /*#__PURE__*/_jsx(Typography, {\n                          color: \"error\",\n                          children: \"Errores:\"\n                        })\n                      })\n                    }), /*#__PURE__*/_jsx(Box, {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      children: item.errors.map(item => {\n                        return /*#__PURE__*/_jsx(ListItemText, {\n                          children: `- ${item}`\n                        });\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Divider, {})]\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsx(Loading, {\n        loading: processing,\n        message: CUPONES.messages.loading\n      })]\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: info,\n      severity: 'success',\n      message: info,\n      autoHideAfter: 5500,\n      onClose: () => {\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}