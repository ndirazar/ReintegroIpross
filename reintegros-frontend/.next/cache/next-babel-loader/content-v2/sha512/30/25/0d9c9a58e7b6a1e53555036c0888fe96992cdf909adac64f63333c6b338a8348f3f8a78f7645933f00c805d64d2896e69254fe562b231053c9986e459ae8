{"ast":null,"code":"import { format, parseISO } from 'date-fns';\nvar APP_NAME = 'Reintegros';\nvar DATE_FORMAT = 'dd/MM/yyyy';\nvar FORM_BUILDER = {\n  required: 'Campo requerido ',\n  min: 'El valor debe ser superior a ',\n  minLength: 'Longitud debe ser de al menos ',\n  max: 'El valor debe ser inferior a ',\n  maxLength: 'Longitud debe ser a lo sumo de ',\n  pattern: 'El formato no es válido',\n  \"default\": 'Error desconocido'\n};\nvar USERS = {\n  name: 'Usuarios',\n  route: 'usuarios',\n  page: 'usuarios',\n  fields: {\n    username: 'Nombre de usuario',\n    email: 'Mail',\n    first_name: 'Nombre',\n    last_name: 'Apellido',\n    is_active: 'Activo',\n    groups: 'Roles',\n    delegaciones: 'Delegaciones'\n  },\n  renders: {\n    is_active: function is_active(rowData) {\n      return rowData ? 'Si' : 'No';\n    },\n    groups: function groups(rowData) {\n      return rowData.groups.map(function (elem) {\n        return elem.name;\n      }).join(', ');\n    },\n    delegaciones: function delegaciones(rowData) {\n      return rowData.delegaciones.map(function (elem) {\n        return elem.nombre;\n      }).join(', ');\n    }\n  },\n  customActions: {\n    sync: 'Sincronizar Usuarios'\n  }\n};\nvar PRESTACIONES = {\n  name: 'Prestaciones',\n  route: 'api/prestaciones',\n  fields: {\n    cantidad: 'Cantidad',\n    categoria: 'Categoria',\n    prestador: 'Prestador',\n    nomenclador: 'Item',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado actual',\n    factura: 'Factura',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    periodo: 'Periodo'\n  },\n  optionsEstadoActual: [{\n    label: 'En curso',\n    value: 'enCurso'\n  }, {\n    label: 'Aceptado',\n    value: 'aceptado'\n  }, {\n    label: 'Rechazado',\n    value: 'rechazado'\n  }],\n  renders: {\n    categoria: function categoria(rowData) {\n      return rowData.categoria.nombre;\n    },\n    prestador: function prestador(rowData) {\n      return rowData.prestador.matricula;\n    },\n    nomenclador: function nomenclador(rowData) {\n      return rowData.nomenclador.descripcion;\n    },\n    factura: function factura(rowData) {\n      return rowData.factura.archivo;\n    },\n    estadoActual: function estadoActual(rowData) {\n      var _PRESTACIONES$options;\n\n      return (_PRESTACIONES$options = PRESTACIONES.optionsEstadoActual.find(function (elem) {\n        return elem.value === rowData.estadoActual;\n      })) === null || _PRESTACIONES$options === void 0 ? void 0 : _PRESTACIONES$options.label;\n    },\n    fechaPractica: function fechaPractica(rowData) {\n      return format(parseISO(rowData.fechaPractica), DATE_FORMAT);\n    }\n  }\n};\nvar NOMENCLADOR = {\n  name: 'Nomenclador',\n  route: 'nomenclador',\n  page: 'nomenclador',\n  fields: {\n    areaCubrir: 'Área a Cubrir',\n    capitulo: 'Capítulo',\n    codigo: 'Código',\n    complejidadPractica: 'Nivel de complejidad',\n    descripcion: 'Descripción',\n    fechaNorma: 'Fecha de la norma',\n    modalidadPresentacion: 'Modalidad de Prestación ',\n    montoFijoMensual: 'Monto Fijo Mensual ',\n    numeroNormaRespaldatoria: 'Nº Norma respaldatoria',\n    periodoTope: 'Periodo del tope',\n    programaSanitario: 'Programa sanitario',\n    topesCoberturaPeriodo: 'Topes de cobertura por período',\n    valorIpross: 'Valor IPROSS'\n  },\n  optionsModalidadPresentacion: [{\n    label: 'Ambulatoria',\n    value: 'ambulatoria'\n  }, {\n    label: 'Internación',\n    value: 'internacion'\n  }],\n  optionsPeriodoTope: [{\n    label: 'Día',\n    value: 'dia'\n  }, {\n    label: 'Mes',\n    value: 'mes'\n  }, {\n    label: 'Trimestre',\n    value: 'trimestre'\n  }, {\n    label: 'Año',\n    value: 'anio'\n  }],\n  renders: {\n    capitulo: function capitulo(rowData) {\n      return \"\".concat(rowData.capitulo.capitulo, \"-\").concat(rowData.capitulo.descripcion);\n    },\n    fechaNorma: function fechaNorma(rowData) {\n      return format(parseISO(rowData.fechaNorma), DATE_FORMAT);\n    },\n    modalidadPresentacion: function modalidadPresentacion(rowData) {\n      var _NOMENCLADOR$optionsM;\n\n      return (_NOMENCLADOR$optionsM = NOMENCLADOR.optionsModalidadPresentacion.find(function (elem) {\n        return elem.value === rowData.modalidadPresentacion;\n      })) === null || _NOMENCLADOR$optionsM === void 0 ? void 0 : _NOMENCLADOR$optionsM.label;\n    },\n    periodoTope: function periodoTope(rowData) {\n      var _NOMENCLADOR$optionsP;\n\n      return (_NOMENCLADOR$optionsP = NOMENCLADOR.optionsPeriodoTope.find(function (elem) {\n        return elem.value === rowData.periodoTope;\n      })) === null || _NOMENCLADOR$optionsP === void 0 ? void 0 : _NOMENCLADOR$optionsP.label;\n    }\n  }\n};\nvar CAPITULO = {\n  name: 'Capitulo',\n  route: 'capitulo',\n  page: 'capitulo',\n  fields: {\n    coseguro: 'Coseguro',\n    capitulo: 'Capítulo',\n    descripción: 'Descripción'\n  },\n  renders: {}\n}; //Used by generator, dont remove this line #entitiesobject\n\nvar TABLE = {\n  labelRowsSelect: 'filas',\n  labelDisplayedRows: '{from}-{to} de {count}',\n  labelRowsPerPage: 'Filas por página',\n  firstAriaLabel: 'Primera página',\n  firstTooltip: 'Primera página',\n  previousAriaLabel: 'Anterior',\n  previousTooltip: 'Anterior',\n  nextAriaLabel: 'Siguiente',\n  nextTooltip: 'Siguiente',\n  lastAriaLabel: 'Última página',\n  lastTooltip: 'Última página',\n  actions: 'Acciones'\n};\nvar LOGIN = {\n  passwordRecoveryMessage: 'Contacte al administrador de LDAP: adminldap@dominio.com',\n  passwordRecoveryButton: 'Olvide mi contraseña',\n  signIn: 'Entrar',\n  logout: 'Salir'\n};\nvar SOLICITUDES = {\n  name: 'Solicitudes',\n  route: 'api/solicitudes',\n  page: 'solicitudes',\n  fields: {\n    estadoActual: 'Estado actual',\n    fechaAlta: 'Fecha de alta',\n    'delegacion.nombre': 'Delegación',\n    'afiliado.codigo': 'Afiliado'\n  },\n  renders: {\n    estadoActual: function estadoActual(rowData) {\n      var _SOLICITUDES$optionsE;\n\n      return (_SOLICITUDES$optionsE = SOLICITUDES.optionsEstadoActual.find(function (elem) {\n        return elem.value === rowData.estadoActual;\n      })) === null || _SOLICITUDES$optionsE === void 0 ? void 0 : _SOLICITUDES$optionsE.label;\n    },\n    fechaAlta: function fechaAlta(rowData) {\n      return format(parseISO(rowData.fechaAlta), DATE_FORMAT);\n    }\n  },\n  optionsEstadoActual: [{\n    label: 'Sin pagos realizados',\n    value: 'sinPagos'\n  }, {\n    label: 'Pago parcial',\n    value: 'pagoParcial'\n  }, {\n    label: 'Pago total',\n    value: 'pagoTotal'\n  }],\n  customActions: {\n    addPresentacion: 'Agregar prestacion'\n  }\n};\nvar MAIN_ENTITIES = [USERS, NOMENCLADOR, //Used by generator, dont remove this line #addtomenu\nSOLICITUDES];\n\nvar LOADING = function LOADING(entity) {\n  return \"Cargando \".concat(entity);\n};\n\n_c = LOADING;\nvar ERRORS = {\n  unknown: 'Error desconocido',\n  onGet: function onGet(entity) {\n    return \"Error al obtener \".concat(entity);\n  },\n  onCreate: function onCreate(entity) {\n    return \"Error al crear \".concat(entity);\n  },\n  onDelete: function onDelete(entity) {\n    return \"Error al eliminar \".concat(entity);\n  },\n  onUpdate: function onUpdate(entity) {\n    return \"Error al actualizar \".concat(entity);\n  },\n  onSync: function onSync(entity) {\n    return \"Error al sincronizar \".concat(entity);\n  },\n  onDeactivate: function onDeactivate(entity) {\n    return \"Error al desactivar \".concat(entity);\n  },\n  onSetGroups: function onSetGroups(entity) {\n    return \"Error al modificar los roles del usuario\";\n  },\n  onSetDelegaciones: function onSetDelegaciones(entity) {\n    return 'Error al modificar las delegaciones del usuario';\n  },\n  inactiveUser: 'Tu cuenta está inactiva. Contactar al administrador: admin@dominio.com',\n  invalidLdap: 'Usuario o contraseña incorrecta. Contacte al administrador de LDAP: adminldap@dominio.com'\n};\nvar INFO = {\n  onSync: function onSync(entity, count) {\n    count === 0 ? 'Todos los usuarios ya estan sincronizados' : \"Se sincronizaron \".concat(count, \" \").concat(entity);\n  },\n  setGroups: \"Se actualizo correctamente el usuario\",\n  setDelegaciones: \"Se actualizo correctamente el usuario\"\n};\nvar ACTIONS = {\n  crete: function crete(entity) {\n    return \"Crear \".concat(entity);\n  },\n  \"delete\": function _delete(entity) {\n    return \"Eliminar \".concat(entity);\n  },\n  update: function update(entity) {\n    return \"Actualizar \".concat(entity);\n  }\n};\nvar STEPPER_SOLICITUDES = {\n  steps: ['Crear solicitud', 'Agregar prestaciones', 'Finalizar'],\n  onSubmitSolicitud: {\n    title: 'Solicitud creada!',\n    message: 'Se creo nueva solicitud',\n    severity: 'success'\n  },\n  onSubmitFactura: {\n    title: 'Factura guardada!',\n    message: 'Se guardo la factura, completa los datos de la prestacion para continuar. Luego elige siguiente para terminar o guardar y agregar para seguir cargando prestaciones',\n    severity: 'success'\n  },\n  onSubmitPrestacion: function onSubmitPrestacion(count) {\n    return {\n      title: \"\".concat(count, \"\\xBA Prestacion creada\"),\n      message: \"Se creo la \".concat(count, \"\\xBA prestaci\\xF3n\"),\n      severity: 'success'\n    };\n  },\n  onNewPrestacion: function onNewPrestacion(count) {\n    return {\n      title: 'Detalles prestación',\n      message: \"Complete formulario con los detalles de la \".concat(count, \"\\xBA prestaci\\xF3n asociada a la solicitud\"),\n      severity: 'info'\n    };\n  },\n  onNewFactura: function onNewFactura(count) {\n    return {\n      title: 'Cargar factura',\n      message: \"Suba el archivo de la factura correspondiente a la \".concat(count, \"\\xBA prestaci\\xF3n asociada a la solicitud\"),\n      severity: 'info'\n    };\n  },\n  onFinish: {\n    title: 'Proceso finalizado',\n    message: 'Solicitud completa, puede ver un resumen de los datos ingresados a continuación',\n    severity: 'info'\n  }\n};\nexport { STEPPER_SOLICITUDES, FORM_BUILDER, USERS, TABLE, NOMENCLADOR, MAIN_ENTITIES, APP_NAME, LOADING, ERRORS, ACTIONS, SOLICITUDES, LOGIN, INFO, PRESTACIONES, CAPITULO };\n\nvar _c;\n\n$RefreshReg$(_c, \"LOADING\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/labels.ts"],"names":["format","parseISO","APP_NAME","DATE_FORMAT","FORM_BUILDER","required","min","minLength","max","maxLength","pattern","USERS","name","route","page","fields","username","email","first_name","last_name","is_active","groups","delegaciones","renders","rowData","map","elem","join","nombre","customActions","sync","PRESTACIONES","cantidad","categoria","prestador","nomenclador","coseguroNomenclador","valorIprossNomenclador","valorPrestacion","montoReintegrar","estadoActual","factura","cobertura","fechaPractica","periodo","optionsEstadoActual","label","value","matricula","descripcion","archivo","find","NOMENCLADOR","areaCubrir","capitulo","codigo","complejidadPractica","fechaNorma","modalidadPresentacion","montoFijoMensual","numeroNormaRespaldatoria","periodoTope","programaSanitario","topesCoberturaPeriodo","valorIpross","optionsModalidadPresentacion","optionsPeriodoTope","CAPITULO","coseguro","descripción","TABLE","labelRowsSelect","labelDisplayedRows","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","actions","LOGIN","passwordRecoveryMessage","passwordRecoveryButton","signIn","logout","SOLICITUDES","fechaAlta","addPresentacion","MAIN_ENTITIES","LOADING","entity","ERRORS","unknown","onGet","onCreate","onDelete","onUpdate","onSync","onDeactivate","onSetGroups","onSetDelegaciones","inactiveUser","invalidLdap","INFO","count","setGroups","setDelegaciones","ACTIONS","crete","update","STEPPER_SOLICITUDES","steps","onSubmitSolicitud","title","message","severity","onSubmitFactura","onSubmitPrestacion","onNewPrestacion","onNewFactura","onFinish"],"mappings":"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","sourcesContent":["import { format, parseISO } from 'date-fns';\n\nconst APP_NAME = 'Reintegros';\n\nconst DATE_FORMAT = 'dd/MM/yyyy';\nconst FORM_BUILDER = {\n  required: 'Campo requerido ',\n  min: 'El valor debe ser superior a ',\n  minLength: 'Longitud debe ser de al menos ',\n  max: 'El valor debe ser inferior a ',\n  maxLength: 'Longitud debe ser a lo sumo de ',\n  pattern: 'El formato no es válido',\n  default: 'Error desconocido',\n};\n\nconst USERS = {\n  name: 'Usuarios',\n  route: 'usuarios',\n  page: 'usuarios',\n  fields: {\n    username: 'Nombre de usuario',\n    email: 'Mail',\n    first_name: 'Nombre',\n    last_name: 'Apellido',\n    is_active: 'Activo',\n    groups: 'Roles',\n    delegaciones: 'Delegaciones',\n  },\n  renders: {\n    is_active: (rowData) => (rowData ? 'Si' : 'No'),\n    groups: (rowData) => rowData.groups.map((elem) => elem.name).join(', '),\n    delegaciones: (rowData) => rowData.delegaciones.map((elem) => elem.nombre).join(', '),\n  },\n  customActions: {\n    sync: 'Sincronizar Usuarios',\n  },\n};\n\nconst PRESTACIONES = {\n  name: 'Prestaciones',\n  route: 'api/prestaciones',\n\n  fields: {\n    cantidad: 'Cantidad',\n    categoria: 'Categoria',\n\n    prestador: 'Prestador',\n    nomenclador: 'Item',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado actual',\n    factura: 'Factura',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    periodo: 'Periodo',\n  },\n\n  optionsEstadoActual: [\n    { label: 'En curso', value: 'enCurso' },\n    { label: 'Aceptado', value: 'aceptado' },\n    { label: 'Rechazado', value: 'rechazado' },\n  ],\n  renders: {\n    categoria: (rowData) => rowData.categoria.nombre,\n    prestador: (rowData) => rowData.prestador.matricula,\n    nomenclador: (rowData) => rowData.nomenclador.descripcion,\n    factura: (rowData) => rowData.factura.archivo,\n    estadoActual: (rowData) =>\n      PRESTACIONES.optionsEstadoActual.find((elem) => elem.value === rowData.estadoActual)?.label,\n    fechaPractica: (rowData) => format(parseISO(rowData.fechaPractica), DATE_FORMAT),\n  },\n};\nconst NOMENCLADOR = {\n  name: 'Nomenclador',\n  route: 'nomenclador',\n  page: 'nomenclador',\n  fields: {\n    areaCubrir: 'Área a Cubrir',\n    capitulo: 'Capítulo',\n\n    codigo: 'Código',\n    complejidadPractica: 'Nivel de complejidad',\n    descripcion: 'Descripción',\n    fechaNorma: 'Fecha de la norma',\n    modalidadPresentacion: 'Modalidad de Prestación ',\n    montoFijoMensual: 'Monto Fijo Mensual ',\n    numeroNormaRespaldatoria: 'Nº Norma respaldatoria',\n    periodoTope: 'Periodo del tope',\n    programaSanitario: 'Programa sanitario',\n    topesCoberturaPeriodo: 'Topes de cobertura por período',\n\n    valorIpross: 'Valor IPROSS',\n  },\n  optionsModalidadPresentacion: [\n    { label: 'Ambulatoria', value: 'ambulatoria' },\n    { label: 'Internación', value: 'internacion' },\n  ],\n  optionsPeriodoTope: [\n    { label: 'Día', value: 'dia' },\n    { label: 'Mes', value: 'mes' },\n    { label: 'Trimestre', value: 'trimestre' },\n    { label: 'Año', value: 'anio' },\n  ],\n\n  renders: {\n    capitulo: (rowData) => `${rowData.capitulo.capitulo}-${rowData.capitulo.descripcion}`,\n    fechaNorma: (rowData) => format(parseISO(rowData.fechaNorma), DATE_FORMAT),\n    modalidadPresentacion: (rowData) =>\n      NOMENCLADOR.optionsModalidadPresentacion.find(\n        (elem) => elem.value === rowData.modalidadPresentacion,\n      )?.label,\n    periodoTope: (rowData) =>\n      NOMENCLADOR.optionsPeriodoTope.find((elem) => elem.value === rowData.periodoTope)?.label,\n  },\n};\nconst CAPITULO = {\n  name: 'Capitulo',\n  route: 'capitulo',\n  page: 'capitulo',\n  fields: {\n    coseguro: 'Coseguro',\n    capitulo: 'Capítulo',\n\n    descripción: 'Descripción',\n  },\n\n  renders: {},\n};\n//Used by generator, dont remove this line #entitiesobject\n\nconst TABLE = {\n  labelRowsSelect: 'filas',\n  labelDisplayedRows: '{from}-{to} de {count}',\n  labelRowsPerPage: 'Filas por página',\n  firstAriaLabel: 'Primera página',\n  firstTooltip: 'Primera página',\n  previousAriaLabel: 'Anterior',\n  previousTooltip: 'Anterior',\n  nextAriaLabel: 'Siguiente',\n  nextTooltip: 'Siguiente',\n  lastAriaLabel: 'Última página',\n  lastTooltip: 'Última página',\n  actions: 'Acciones',\n};\nconst LOGIN = {\n  passwordRecoveryMessage: 'Contacte al administrador de LDAP: adminldap@dominio.com',\n  passwordRecoveryButton: 'Olvide mi contraseña',\n  signIn: 'Entrar',\n  logout: 'Salir',\n};\nconst SOLICITUDES = {\n  name: 'Solicitudes',\n  route: 'api/solicitudes',\n  page: 'solicitudes',\n  fields: {\n    estadoActual: 'Estado actual',\n    fechaAlta: 'Fecha de alta',\n    'delegacion.nombre': 'Delegación',\n    'afiliado.codigo': 'Afiliado',\n  },\n  renders: {\n    estadoActual: (rowData) =>\n      SOLICITUDES.optionsEstadoActual.find((elem) => elem.value === rowData.estadoActual)?.label,\n    fechaAlta: (rowData) => format(parseISO(rowData.fechaAlta), DATE_FORMAT),\n  },\n  optionsEstadoActual: [\n    { label: 'Sin pagos realizados', value: 'sinPagos' },\n    { label: 'Pago parcial', value: 'pagoParcial' },\n    { label: 'Pago total', value: 'pagoTotal' },\n  ],\n  customActions: {\n    addPresentacion: 'Agregar prestacion',\n  },\n};\n\nconst MAIN_ENTITIES = [\n  USERS,\n  NOMENCLADOR,\n  //Used by generator, dont remove this line #addtomenu\n  SOLICITUDES,\n];\n\nconst LOADING = (entity) => `Cargando ${entity}`;\n\nconst ERRORS = {\n  unknown: 'Error desconocido',\n  onGet: (entity) => `Error al obtener ${entity}`,\n  onCreate: (entity) => `Error al crear ${entity}`,\n  onDelete: (entity) => `Error al eliminar ${entity}`,\n  onUpdate: (entity) => `Error al actualizar ${entity}`,\n  onSync: (entity) => `Error al sincronizar ${entity}`,\n  onDeactivate: (entity) => `Error al desactivar ${entity}`,\n  onSetGroups: (entity) => `Error al modificar los roles del usuario`,\n  onSetDelegaciones: (entity) => 'Error al modificar las delegaciones del usuario',\n  inactiveUser: 'Tu cuenta está inactiva. Contactar al administrador: admin@dominio.com',\n  invalidLdap:\n    'Usuario o contraseña incorrecta. Contacte al administrador de LDAP: adminldap@dominio.com',\n};\n\nconst INFO = {\n  onSync: (entity, count) => {\n    count === 0\n      ? 'Todos los usuarios ya estan sincronizados'\n      : `Se sincronizaron ${count} ${entity}`;\n  },\n  setGroups: `Se actualizo correctamente el usuario`,\n  setDelegaciones: `Se actualizo correctamente el usuario`,\n};\n\nconst ACTIONS = {\n  crete: (entity) => `Crear ${entity}`,\n  delete: (entity) => `Eliminar ${entity}`,\n  update: (entity) => `Actualizar ${entity}`,\n};\n\nconst STEPPER_SOLICITUDES = {\n  steps: ['Crear solicitud', 'Agregar prestaciones', 'Finalizar'],\n  onSubmitSolicitud: {\n    title: 'Solicitud creada!',\n    message: 'Se creo nueva solicitud',\n    severity: 'success',\n  },\n  onSubmitFactura: {\n    title: 'Factura guardada!',\n    message:\n      'Se guardo la factura, completa los datos de la prestacion para continuar. Luego elige siguiente para terminar o guardar y agregar para seguir cargando prestaciones',\n    severity: 'success',\n  },\n  onSubmitPrestacion: (count) => ({\n    title: `${count}º Prestacion creada`,\n    message: `Se creo la ${count}º prestación`,\n    severity: 'success',\n  }),\n  onNewPrestacion: (count) => ({\n    title: 'Detalles prestación',\n    message: `Complete formulario con los detalles de la ${count}º prestación asociada a la solicitud`,\n    severity: 'info',\n  }),\n  onNewFactura: (count) => ({\n    title: 'Cargar factura',\n    message: `Suba el archivo de la factura correspondiente a la ${count}º prestación asociada a la solicitud`,\n    severity: 'info',\n  }),\n  onFinish: {\n    title: 'Proceso finalizado',\n    message: 'Solicitud completa, puede ver un resumen de los datos ingresados a continuación',\n    severity: 'info',\n  },\n};\nexport {\n  STEPPER_SOLICITUDES,\n  FORM_BUILDER,\n  USERS,\n  TABLE,\n  NOMENCLADOR,\n  MAIN_ENTITIES,\n  APP_NAME,\n  LOADING,\n  ERRORS,\n  ACTIONS,\n  SOLICITUDES,\n  LOGIN,\n  INFO,\n  PRESTACIONES,\n  CAPITULO,\n  //Used by generator, dont remove this line #exportconsts\n};\n"]},"metadata":{},"sourceType":"module"}