{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/users/SelectDelegacion.tsx\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nexport default function SelectDelegacion({\n  delegaciones,\n  rowData,\n  onSetDelegaciones\n}) {\n  const [delegacionesSelected, setDelegacionesSelected] = React.useState(rowData.delegaciones.map(delegacion => delegacion.nombre));\n\n  const handleChange = event => {\n    setDelegacionesSelected(event.target.value);\n  };\n\n  const handleClose = () => {\n    onSetDelegaciones(delegacionesSelected, rowData.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"select-delegaciones\",\n      id: `select-delegaciones-${rowData.id}`,\n      multiple: true,\n      value: delegacionesSelected,\n      onChange: handleChange,\n      input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this),\n      onClose: () => handleClose(),\n      children: delegaciones !== undefined && delegaciones.results.map(delegacion => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: delegacion.nombre,\n        children: delegacion.nombre\n      }, delegacion.nombre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/users/SelectDelegacion.tsx"],"names":["React","Select","Input","MenuItem","FormControl","SelectDelegacion","delegaciones","rowData","onSetDelegaciones","delegacionesSelected","setDelegacionesSelected","useState","map","delegacion","nombre","handleChange","event","target","value","handleClose","id","undefined","results"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AASA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAA1B,EAA+E;AAC5F,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDV,KAAK,CAACW,QAAN,CACtDJ,OAAO,CAACD,YAAR,CAAqBM,GAArB,CAA0BC,UAAD,IAAgBA,UAAU,CAACC,MAApD,CADsD,CAAxD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAkD;AACrEN,IAAAA,uBAAuB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBX,IAAAA,iBAAiB,CAACC,oBAAD,EAAuBF,OAAO,CAACa,EAA/B,CAAjB;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,qBADV;AAEE,MAAA,EAAE,EAAG,uBAAsBb,OAAO,CAACa,EAAG,EAFxC;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,KAAK,EAAEX,oBAJT;AAKE,MAAA,QAAQ,EAAEM,YALZ;AAME,MAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cANT;AAOE,MAAA,OAAO,EAAE,MAAMI,WAAW,EAP5B;AAAA,gBASGb,YAAY,KAAKe,SAAjB,IACCf,YAAY,CAACgB,OAAb,CAAqBV,GAArB,CAA0BC,UAAD,iBACvB,QAAC,QAAD;AAAkC,QAAA,KAAK,EAAEA,UAAU,CAACC,MAApD;AAAA,kBACGD,UAAU,CAACC;AADd,SAAeD,UAAU,CAACC,MAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD","sourcesContent":["import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { apiRequest } from '../common/types/Request';\n\ntype Props = {\n  delegaciones: apiRequest;\n  rowData: any;\n  onSetDelegaciones: (delegacionesSelected: string[], userId: number) => void;\n};\n\nexport default function SelectDelegacion({ delegaciones, rowData, onSetDelegaciones }: Props) {\n  const [delegacionesSelected, setDelegacionesSelected] = React.useState<string[]>(\n    rowData.delegaciones.map((delegacion) => delegacion.nombre),\n  );\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDelegacionesSelected(event.target.value as string[]);\n  };\n\n  const handleClose = () => {\n    onSetDelegaciones(delegacionesSelected, rowData.id);\n  };\n\n  return (\n    <FormControl>\n      <Select\n        labelId=\"select-delegaciones\"\n        id={`select-delegaciones-${rowData.id}`}\n        multiple={true}\n        value={delegacionesSelected}\n        onChange={handleChange}\n        input={<Input />}\n        onClose={() => handleClose()}\n      >\n        {delegaciones !== undefined &&\n          delegaciones.results.map((delegacion) => (\n            <MenuItem key={delegacion.nombre} value={delegacion.nombre}>\n              {delegacion.nombre}\n            </MenuItem>\n          ))}\n      </Select>\n    </FormControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}