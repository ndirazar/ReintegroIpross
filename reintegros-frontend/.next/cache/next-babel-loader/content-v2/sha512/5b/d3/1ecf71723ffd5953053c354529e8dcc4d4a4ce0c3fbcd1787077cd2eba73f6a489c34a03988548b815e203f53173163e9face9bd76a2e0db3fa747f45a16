{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Login from '../components/login/login';\nimport { post } from '../components/api-call/service';\nimport Cookies from 'universal-cookie';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nexport default function LoginPage() {\n  const {\n    0: error,\n    1: seterror\n  } = useState(null);\n  const router = useRouter();\n\n  const handleSubmit = async (username, password) => {\n    let res;\n\n    try {\n      res = await post('api/usuarios/login', {\n        username,\n        password\n      });\n      const {\n        access,\n        refresh,\n        user\n      } = res.data;\n\n      if (access) {\n        const cookies = new Cookies();\n        cookies.set('access', access, {\n          path: '/'\n        });\n        cookies.set('refresh', refresh, {\n          path: '/'\n        });\n        cookies.set('username', username, {\n          path: '/'\n        });\n        cookies.set('user', JSON.stringify(user), {\n          path: '/'\n        });\n        const isAdmin = user.groups.find(g => g.name === 'Administradores');\n\n        if (isAdmin) {\n          router.push('usuarios');\n        } else {\n          router.push('solicitudes');\n        }\n      } else {\n        var _res$data;\n\n        seterror((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.code);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      seterror((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.code);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Login, {\n    onSubmit: handleSubmit,\n    error: error\n  });\n}","map":null,"metadata":{},"sourceType":"module"}