{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/common/providers/Loading/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nexport var LoadingContext = /*#__PURE__*/React.createContext({\n  loading: false,\n  isLoading: function isLoading() {},\n  unsetLoading: function unsetLoading() {}\n});\nexport default function LoadingProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var unsetLoading = function unsetLoading() {\n    return setLoading(false);\n  };\n\n  var isLoading = function isLoading() {\n    return setLoading(true);\n  };\n\n  var contextValue = {\n    loading: loading,\n    isLoading: useCallback(function () {\n      return isLoading();\n    }, []),\n    unsetLoading: useCallback(function () {\n      return unsetLoading();\n    }, [])\n  };\n  return /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LoadingProvider, \"gtJPCg12bEAhNo1mHpDR5LJewew=\");\n\n_c = LoadingProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingProvider\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/common/providers/Loading/index.tsx"],"names":["React","useState","useCallback","LoadingContext","createContext","loading","isLoading","unsetLoading","LoadingProvider","children","setLoading","contextValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAO,IAAMC,cAAc,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AAChDC,EAAAA,OAAO,EAAE,KADuC;AAEhDC,EAAAA,SAAS,EAAE,qBAAM,CAAE,CAF6B;AAGhDC,EAAAA,YAAY,EAAE,wBAAM,CAAE;AAH0B,CAApB,CAAvB;AAMP,eAAe,SAASC,eAAT,OAAuC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACtBR,QAAQ,CAAC,KAAD,CADc;AAAA,MAC7CI,OAD6C;AAAA,MACpCK,UADoC;;AAGpD,MAAMH,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMG,UAAU,CAAC,KAAD,CAAhB;AAAA,GAArB;;AAEA,MAAMJ,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMI,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBN,IAAAA,OAAO,EAAPA,OADmB;AAEnBC,IAAAA,SAAS,EAAEJ,WAAW,CAAC;AAAA,aAAMI,SAAS,EAAf;AAAA,KAAD,EAAoB,EAApB,CAFH;AAGnBC,IAAAA,YAAY,EAAEL,WAAW,CAAC;AAAA,aAAMK,YAAY,EAAlB;AAAA,KAAD,EAAuB,EAAvB;AAHN,GAArB;AAMA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEI,YAAhC;AAAA,cAA+CF;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAduBD,e;;KAAAA,e","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nexport const LoadingContext = React.createContext({\n  loading: false,\n  isLoading: () => {},\n  unsetLoading: () => {},\n});\n\nexport default function LoadingProvider({ children }) {\n  const [loading, setLoading] = useState(false);\n\n  const unsetLoading = () => setLoading(false);\n\n  const isLoading = () => setLoading(true);\n\n  const contextValue = {\n    loading,\n    isLoading: useCallback(() => isLoading(), []),\n    unsetLoading: useCallback(() => unsetLoading(), []),\n  };\n\n  return <LoadingContext.Provider value={contextValue}>{children}</LoadingContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}