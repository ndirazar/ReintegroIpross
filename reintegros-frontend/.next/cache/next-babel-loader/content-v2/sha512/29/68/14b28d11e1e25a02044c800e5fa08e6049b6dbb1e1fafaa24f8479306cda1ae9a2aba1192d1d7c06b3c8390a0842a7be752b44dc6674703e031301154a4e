{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/common/FileInput.tsx\";\n// Third-party imports\nimport React, { useEffect, useState } from 'react';\n// Component\nexport default function FileInput(props) {\n  const {\n    0: clear,\n    1: setClear\n  } = useState(false);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState('');\n  const {\n    0: fileContent,\n    1: setFileContent\n  } = useState(null);\n\n  const changeHandler = event => {\n    const target = event.target;\n    setClear(false);\n\n    try {\n      if (!props.multiple) {\n        const reader = new FileReader();\n        const file = target.files[0];\n        setFileName(file.name);\n\n        reader.onload = () => {\n          props.onReadData && props.onReadData({\n            result: reader.result.toString(),\n            file\n          });\n        };\n\n        setFileContent(file);\n        reader.readAsText(file);\n      } else {\n        const faux = [];\n        Array.from(target.files).forEach(file => {\n          const reader = new FileReader();\n\n          reader.onload = () => {\n            props.onReadData && props.onReadData({\n              result: reader.result.toString(),\n              file\n            });\n          };\n\n          reader.readAsText(file);\n          faux.push(file);\n        });\n        setFileContent(faux);\n      }\n    } catch (e) {//TODO some thing\n    }\n  };\n\n  const removeFile = () => {\n    setFileName(null);\n    setFileContent(null);\n    setClear(true);\n    props.onRemove && props.onRemove();\n  };\n\n  useEffect(() => {\n    if (props.previousFile && !fileName && !clear) {\n      setFileName(props.previousFile);\n    }\n  }, [props]);\n  useEffect(() => {\n    if (fileContent && fileContent !== '') {\n      props.onChange && props.onChange(fileContent);\n    }\n  }, [fileContent]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: props.accept,\n      id: \"file-input\",\n      multiple: props.multiple,\n      type: \"file\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/common/FileInput.tsx"],"names":["React","useEffect","useState","FileInput","props","clear","setClear","fileName","setFileName","fileContent","setFileContent","changeHandler","event","target","multiple","reader","FileReader","file","files","name","onload","onReadData","result","toString","readAsText","faux","Array","from","forEach","push","e","removeFile","onRemove","previousFile","onChange","accept"],"mappings":"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","sourcesContent":["// Third-party imports\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// App imports\n\nimport { IconButton, Typography, Link } from '@material-ui/core';\n\n// Component\nexport default function FileInput(props) {\n  const [clear, setClear] = useState(false);\n  const [fileName, setFileName] = useState('');\n  const [fileContent, setFileContent] = useState<File | string | File[] | string[]>(null);\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target;\n    setClear(false);\n    try {\n      if (!props.multiple) {\n        const reader = new FileReader();\n        const file = target.files[0];\n        setFileName(file.name);\n\n        reader.onload = () => {\n          props.onReadData && props.onReadData({ result: reader.result.toString(), file });\n        };\n        setFileContent(file);\n        reader.readAsText(file);\n      } else {\n        const faux = [];\n        Array.from(target.files).forEach((file) => {\n          const reader = new FileReader();\n          reader.onload = () => {\n            props.onReadData && props.onReadData({ result: reader.result.toString(), file });\n          };\n\n          reader.readAsText(file);\n          faux.push(file);\n        });\n        setFileContent(faux);\n      }\n    } catch (e) {\n      //TODO some thing\n    }\n  };\n\n  const removeFile = () => {\n    setFileName(null);\n    setFileContent(null);\n    setClear(true);\n    props.onRemove && props.onRemove();\n  };\n\n  useEffect(() => {\n    if (props.previousFile && !fileName && !clear) {\n      setFileName(props.previousFile);\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if (fileContent && fileContent !== '') {\n      props.onChange && props.onChange(fileContent);\n    }\n  }, [fileContent]);\n\n  return (\n    <span>\n      <input\n        accept={props.accept}\n        id=\"file-input\"\n        multiple={props.multiple}\n        type=\"file\"\n        onChange={changeHandler}\n      />\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}