{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport { Box } from '@material-ui/core'; //App imports\n\nimport SolicitudesList from './SolicitudesList';\nimport { remove } from '../api-call/service';\nimport useLoading from '../common/hooks/Loading';\nimport useAlert from '../common/hooks/Alert';\nimport { FormStepper } from './Stepper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { ERRORS, SOLICITUDES } from '../../labels';\nimport { objToQueryString, formatDate, getUser, isUserAdmin } from '../common/helpers';\nimport { addDays } from 'date-fns';\nimport TableFilters from '../common/TableFilters';\nimport filterConfig from './FiltersConfig';\nexport default function Solicitudes() {\n  var _user$delegacionPrinc;\n\n  const user = getUser();\n  const isAdmin = isUserAdmin();\n  const INITIAL_FILTER = {\n    page: 1,\n    size: 20,\n    delegacion: isAdmin ? '' : user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id,\n    fecha_alta__gt: '',\n    fecha_alta__lt: ''\n  };\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(_objectSpread({}, INITIAL_FILTER));\n  const {\n    0: filterQueryStr,\n    1: setFilterQueryStr\n  } = useState(objToQueryString(filters));\n  const {\n    data,\n    error: errorGet,\n    mutate\n  } = useSWR(`${SOLICITUDES.route}/?` + filterQueryStr);\n  const {\n    0: error,\n    1: setError\n  } = useState(errorGet);\n  const [showStepper, setShowStepper] = React.useState(false);\n  const methods = useForm({\n    mode: 'onBlur'\n  });\n  const {\n    isLoading,\n    unsetLoading\n  } = useLoading();\n  const {\n    addAlert,\n    removeAlert\n  } = useAlert();\n  const {\n    0: showFilters,\n    1: setShowFilters\n  } = useState(false);\n  useEffect(() => {\n    if (!data) {\n      if (errorGet) {\n        unsetLoading();\n        addAlert(ERRORS.onGet(SOLICITUDES.name), 'error');\n      } else {\n        isLoading();\n      }\n    } else {\n      unsetLoading();\n\n      if (!error) {\n        removeAlert();\n      } else {\n        addAlert(error, 'error');\n      }\n    }\n  }, [data, errorGet, error]);\n\n  const handleDelete = async id => {\n    try {\n      await remove(`${SOLICITUDES.route}`, id);\n    } catch (error) {\n      setError(ERRORS.onDeactivate(SOLICITUDES.name));\n    }\n\n    mutate(`${SOLICITUDES.route}?` + filterQueryStr);\n  };\n\n  const handleShowStepper = () => {\n    window.scrollTo(0, 0);\n    setShowStepper(true);\n  };\n\n  const onEdit = async data => {//TODO\n  };\n\n  const handleFinished = () => {\n    mutate(`${SOLICITUDES.route}?${filterQueryStr}`);\n  };\n\n  const handleChangePagination = pagination => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      page: pagination.page,\n      size: pagination.pageSize\n    }));\n  };\n\n  const handleFilter = filters => {\n    if (filters.fecha_alta__gt) {\n      filters.fecha_alta__gt = formatDate(filters.fecha_alta__gt);\n    } else {\n      delete filters.fecha_alta__gt;\n    }\n\n    if (filters.fecha_alta__lt) {\n      filters.fecha_alta__lt = formatDate(addDays(filters.fecha_alta__lt, 1));\n    } else {\n      delete filters.fecha_alta__lt;\n    }\n\n    setFilters(_objectSpread(_objectSpread({}, INITIAL_FILTER), filters));\n    setShowFilters(false);\n  };\n\n  const handleCancelFilter = () => {\n    setFilters(_objectSpread({}, INITIAL_FILTER));\n    setShowFilters(false);\n  };\n\n  useEffect(() => {\n    setFilterQueryStr(objToQueryString(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxs(Box, {\n    style: {\n      position: 'relative'\n    },\n    children: [showStepper && /*#__PURE__*/_jsx(FormProvider, _objectSpread(_objectSpread({}, methods), {}, {\n      children: /*#__PURE__*/_jsx(FormStepper, {\n        setShowStepper: setShowStepper,\n        onFinished: handleFinished\n      })\n    })), /*#__PURE__*/_jsx(SolicitudesList, {\n      data: data,\n      handleDelete: handleDelete,\n      onEdit: onEdit,\n      onShowStepper: handleShowStepper,\n      onPaginationChange: handleChangePagination,\n      onFilter: () => {\n        setShowFilters(!showFilters);\n      }\n    }), /*#__PURE__*/_jsx(TableFilters, {\n      config: filterConfig,\n      data: filters,\n      onSubmit: handleFilter,\n      onCancel: handleCancelFilter,\n      show: showFilters\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}