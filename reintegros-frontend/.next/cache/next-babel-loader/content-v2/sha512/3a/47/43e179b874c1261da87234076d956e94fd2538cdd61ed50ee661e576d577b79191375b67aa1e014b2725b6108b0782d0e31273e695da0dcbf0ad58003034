{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\nimport Typography from '@material-ui/core/Typography';\nimport { format, parseISO } from 'date-fns';\nimport { get, post, send } from '../api-call/service';\nimport { NOMENCLADOR, PRESTADORES, SOLICITUDES, STEPPER_SOLICITUDES } from '../../labels';\nimport useStyles from './Stepper.styles';\nimport { Box } from '@material-ui/core';\nimport { FormSolicitud } from './FormSolicitud';\nimport { FormPrestaciones } from './prestaciones/FormPrestaciones';\nimport { FormAdjuntos } from './adjuntos/FormAdjuntos';\nimport SolicitudesSummary from './SolicitudesSummary';\nimport Alert from '../common/Alert';\nimport Loading from '../common/Loading';\nexport const FormStepper = ({\n  setShowStepper,\n  onFinished\n}) => {\n  const {\n    watch,\n    errors,\n    trigger,\n    setError\n  } = useFormContext();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [compiledForm, setCompiledForm] = React.useState({});\n  const steps = STEPPER_SOLICITUDES.steps.map(elem => elem.title);\n  const form = watch();\n  const [prestaciones, setPrestaciones] = React.useState([]);\n  const [solicitud, setSolicitud] = React.useState(null);\n  const [stepError, setStepError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [idSolicitud, setIdSolicitud] = React.useState(null);\n  const classes = useStyles();\n\n  const addPrestacion = async () => {\n    var _form$prestador, _await$get, _form$nomenclador, _form$capitulo;\n\n    form.fechaPractica = format(form === null || form === void 0 ? void 0 : form.fechaPractica, 'yyyy-MM-dd');\n\n    if (form !== null && form !== void 0 && form.fechaPracticaHasta) {\n      form.fechaPracticaHasta = format(form === null || form === void 0 ? void 0 : form.fechaPracticaHasta, 'yyyy-MM-dd');\n    }\n\n    form.cobertura = parseInt(form.cobertura);\n    let _prestaciones = prestaciones;\n\n    if (form.capitulo === 40 || form.capitulo === 41 || form.capitulo === 43) {\n      _prestaciones = _prestaciones.map(p => {\n        console.log({\n          p\n        });\n\n        if (p.capitulo !== 40 && p.capitulo !== 41 && p.capitulo !== 43) {\n          p.cobertura = 100;\n        } else {\n          p.cobertura = 90;\n        }\n\n        return p;\n      });\n    }\n\n    const prestadorID = ((_form$prestador = form.prestador) === null || _form$prestador === void 0 ? void 0 : _form$prestador.value) || form.prestador;\n    form.prestador = (_await$get = await get(`${PRESTADORES.route}/${prestadorID}/`)) === null || _await$get === void 0 ? void 0 : _await$get.data;\n    const nomencladorID = ((_form$nomenclador = form.nomenclador) === null || _form$nomenclador === void 0 ? void 0 : _form$nomenclador.value) || form.nomenclador;\n    const nomenclador = await get(`${NOMENCLADOR.route}/${nomencladorID}/`);\n    form.capitulo = ((_form$capitulo = form.capitulo) === null || _form$capitulo === void 0 ? void 0 : _form$capitulo.value) || form.capitulo;\n    form.nomenclador = nomencladorID;\n    setPrestaciones([..._prestaciones, _objectSpread(_objectSpread({}, form), {}, {\n      item: nomenclador === null || nomenclador === void 0 ? void 0 : nomenclador.data\n    })]);\n  };\n\n  const removePrestacion = id => {\n    setPrestaciones([...prestaciones.filter((_, index) => index !== id)]);\n  };\n\n  const getStepContent = (step, formContent) => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsx(FormSolicitud, _objectSpread(_objectSpread({}, {\n          formContent\n        }), {}, {\n          step: STEPPER_SOLICITUDES.steps[step]\n        }));\n\n      case 1:\n        return /*#__PURE__*/_jsx(FormPrestaciones, _objectSpread(_objectSpread({}, {\n          formContent\n        }), {}, {\n          step: STEPPER_SOLICITUDES.steps[step],\n          addPrestacion: addPrestacion,\n          prestaciones: prestaciones,\n          removePrestacion: removePrestacion\n        }));\n\n      case 2:\n        return /*#__PURE__*/_jsx(SolicitudesSummary, {\n          solicitud: solicitud,\n          prestaciones: prestaciones,\n          header: true,\n          step: STEPPER_SOLICITUDES.steps[step],\n          form: compiledForm\n        });\n\n      case 3:\n        return /*#__PURE__*/_jsx(FormAdjuntos, {\n          prestaciones: prestaciones,\n          step: STEPPER_SOLICITUDES.steps[step]\n        });\n\n      default:\n        return 'Unknown step';\n    }\n  };\n\n  const handleNext = async () => {\n    let canContinue = false;\n    setStepError(null);\n    const result = await trigger();\n\n    if (!result) {\n      return;\n    }\n\n    switch (activeStep) {\n      case 0:\n        setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n          solicitud: form\n        }));\n        setSolicitud(_objectSpread({}, form)); // if (!form.factura) {\n        //   return setStepError('No hay factura asociada');\n        // }\n\n        canContinue = true;\n        break;\n\n      case 1:\n        if ((prestaciones === null || prestaciones === void 0 ? void 0 : prestaciones.length) > 0) {\n          setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n            prestaciones: prestaciones\n          }));\n          canContinue = true;\n        } else {\n          setStepError('No hay prestaciones cargadas');\n        }\n\n        break;\n\n      case 2:\n        setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n          three: form\n        }));\n        canContinue = await handleSubmit(_objectSpread(_objectSpread({}, compiledForm), {}, {\n          three: form\n        }));\n        break;\n\n      case 3:\n        canContinue = true;\n        break;\n\n      default:\n        return 'not a valid step';\n    }\n\n    if (canContinue) {\n      window.scrollTo(0, 0);\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    if (activeStep > 0) {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n\n      switch (activeStep) {\n        case 1:\n          setCompiledForm(_objectSpread({}, compiledForm));\n          break;\n\n        case 2:\n          setCompiledForm(_objectSpread(_objectSpread({}, compiledForm), {}, {\n            prestaciones: form\n          }));\n          break;\n\n        default:\n          return 'not a valid step';\n      }\n    } else {\n      setShowStepper(false);\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompiledForm({});\n    setPrestaciones(null);\n    setSolicitud(null);\n    setShowStepper(false);\n  };\n\n  const handleSubmit = async form => {\n    if (_.isEmpty(errors)) {\n      var _form$solicitud, _form$solicitud2, _form$solicitud3, _form$solicitud$afili;\n\n      setIsLoading(true);\n      const date = typeof (form === null || form === void 0 ? void 0 : (_form$solicitud = form.solicitud) === null || _form$solicitud === void 0 ? void 0 : _form$solicitud.fechaAlta) === 'string' ? parseISO(form === null || form === void 0 ? void 0 : (_form$solicitud2 = form.solicitud) === null || _form$solicitud2 === void 0 ? void 0 : _form$solicitud2.fechaAlta) : form === null || form === void 0 ? void 0 : (_form$solicitud3 = form.solicitud) === null || _form$solicitud3 === void 0 ? void 0 : _form$solicitud3.fechaAlta;\n      form.solicitud.afiliado = ((_form$solicitud$afili = form.solicitud.afiliado) === null || _form$solicitud$afili === void 0 ? void 0 : _form$solicitud$afili.id) || form.solicitud.afiliado;\n      form.solicitud.estadoActual = 'sinPagos';\n\n      try {\n        var _solicitud$data, _solicitud$data2;\n\n        //Remove the key used for show prestaciones list on step 2 before send to server\n        const presAux = prestaciones.map(elem => {\n          const aux = _objectSpread(_objectSpread({}, elem), {}, {\n            prestador: elem.prestador.id\n          });\n\n          delete aux.item;\n          return aux;\n        });\n        const formData = new FormData();\n        formData.append('archivo', form.solicitud.factura[0]);\n        formData.append('etiqueta', '1');\n        const resFactura = await send({\n          url: 'api/facturas/',\n          data: formData,\n          method: 'POST',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        const solicitud = await post(SOLICITUDES.route, {\n          solicitud: _objectSpread(_objectSpread({}, form.solicitud), {}, {\n            factura: resFactura.data.id\n          }),\n          prestaciones: presAux\n        });\n        setIdSolicitud(solicitud === null || solicitud === void 0 ? void 0 : (_solicitud$data = solicitud.data) === null || _solicitud$data === void 0 ? void 0 : _solicitud$data.id);\n        setPrestaciones([...(solicitud === null || solicitud === void 0 ? void 0 : (_solicitud$data2 = solicitud.data) === null || _solicitud$data2 === void 0 ? void 0 : _solicitud$data2.prestaciones.map(p => _objectSpread(_objectSpread({}, p), {}, {\n          item: p.nomenclador\n        })))]);\n        onFinished();\n        setIsLoading(false);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n        return /*#__PURE__*/_jsx(Step, _objectSpread(_objectSpread({}, stepProps), {}, {\n          children: /*#__PURE__*/_jsx(StepLabel, _objectSpread(_objectSpread({}, labelProps), {}, {\n            className: classes.stepLabel,\n            children: label\n          }))\n        }), label);\n      })\n    }), /*#__PURE__*/_jsx(Box, {\n      className: classes.formContainer,\n      children: activeStep === steps.length ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxs(Typography, {\n            style: {\n              margin: '15px 0'\n            },\n            children: [STEPPER_SOLICITUDES.end, \" \", idSolicitud]\n          }), /*#__PURE__*/_jsx(Typography, {\n            children: STEPPER_SOLICITUDES.end2\n          }), /*#__PURE__*/_jsx(Button, {\n            style: {\n              marginTop: 35\n            },\n            onClick: handleReset,\n            color: \"primary\",\n            variant: \"contained\",\n            children: STEPPER_SOLICITUDES.close\n          })]\n        })\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [getStepContent(activeStep, compiledForm), /*#__PURE__*/_jsxs(Box, {\n          className: classes.stepperButtons,\n          children: [/*#__PURE__*/_jsx(Button, {\n            onClick: handleBack,\n            className: classes.button,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: activeStep === 0 ? STEPPER_SOLICITUDES.cancel : STEPPER_SOLICITUDES.back\n          }), /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            className: classes.buttonNext,\n            color: \"primary\",\n            onClick: handleNext,\n            children: activeStep === steps.length - 1 ? STEPPER_SOLICITUDES.finish : STEPPER_SOLICITUDES.next\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: isLoading,\n      message: 'Guardando solicitud...'\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: !!stepError,\n      severity: 'error',\n      message: stepError,\n      autoHideAfter: 5500,\n      onClose: () => {\n        setStepError(null);\n      }\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}