{"ast":null,"code":"import { CUENTAS_TERCEROS } from '../../../labels';\nimport { get, remove } from '../../api-call/service';\nimport { FieldType } from '../../builder/FormField';\nimport { getUser, getUserDelegaciones, isUserAdmin } from '../../common/helpers';\nconst user = getUser();\nconst configCuentasTerceros = [{\n  name: 'afiliado',\n  type: FieldType.options,\n  label: CUENTAS_TERCEROS.fields['afiliado'],\n  options: async (form, value) => {\n    var _await$get, _await$get$data;\n\n    const results = (_await$get = await get(`api/afiliados/?page=1&size=5&cuentaTerceros=true&numeroAfiliado=${value}`)) === null || _await$get === void 0 ? void 0 : (_await$get$data = _await$get.data) === null || _await$get$data === void 0 ? void 0 : _await$get$data.results;\n    return results.map(d => ({\n      value: d.id,\n      label: d.numeroAfiliado + ' - ' + d.nombre + ' ' + d.apellido + ' ',\n      afiliado: d\n    }));\n  },\n  onChange: async (value, form) => {\n    var _value$afiliado, _value$afiliado2, _value$afiliado3, _value$afiliado4;\n\n    form.setValue('afiliado', value);\n    form.setValue('nombre', (value === null || value === void 0 ? void 0 : (_value$afiliado = value.afiliado) === null || _value$afiliado === void 0 ? void 0 : _value$afiliado.nombre) || '');\n    form.setValue('apellido', (value === null || value === void 0 ? void 0 : (_value$afiliado2 = value.afiliado) === null || _value$afiliado2 === void 0 ? void 0 : _value$afiliado2.apellido) || '');\n    form.setValue('cuitCuil', (value === null || value === void 0 ? void 0 : (_value$afiliado3 = value.afiliado) === null || _value$afiliado3 === void 0 ? void 0 : _value$afiliado3.cuitCuil) || '');\n    form.setValue('cbu', (value === null || value === void 0 ? void 0 : (_value$afiliado4 = value.afiliado) === null || _value$afiliado4 === void 0 ? void 0 : _value$afiliado4.cbu) || '');\n  },\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'nombre',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['nombre'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'apellido',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['apellido'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'cuitCuil',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['cuitCuil'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 11\n  }\n}, {\n  name: 'cbu',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['cbu'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 22\n  }\n}, {\n  name: 'delegacion',\n  type: FieldType.options,\n  label: CUENTAS_TERCEROS.fields.delegacion,\n  options: getUserDelegaciones(),\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'estado',\n  label: 'Estado',\n  type: FieldType.options,\n  options: CUENTAS_TERCEROS.optionsEstados,\n  disabled: !isUserAdmin(),\n  styling: {\n    columns: 3\n  }\n}, {\n  name: 'adjuntos',\n  type: FieldType.file,\n  label: CUENTAS_TERCEROS.fields.adjuntos,\n  styling: {\n    columns: 12\n  },\n  accept: 'application/pdf',\n  rules: {\n    required: false,\n    max: 3\n  },\n  multiple: true,\n  onRemove: async file => {\n    if (file.id) {\n      const d = await remove('api/archivos-adjuntos', file.id);\n    }\n  }\n}];\nexport default configCuentasTerceros;","map":null,"metadata":{},"sourceType":"module"}