{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { LOTES } from '../../labels';\nimport Table from '../common/Table';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport { send } from '../api-call/service';\nimport AddIcon from '@material-ui/icons/Add';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport ProcesarQnYQoForm from './ProcesarQnYQoForm';\nimport Modal from '../common/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Box, Button, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport SubtitleModalResultQnQofiles from './SubtitleModalResultQnQofiles';\nimport { isUserAdmin, isUserContaduria, isUserTesoreria } from '../common/helpers';\nimport { Delete } from '@material-ui/icons';\nimport filterConfig from './FiltersConfig';\nexport default function LotesList({\n  data,\n  handleDelete,\n  onReload,\n  onPaginationChange,\n  onFilter\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(false);\n  const {\n    0: openModalResult,\n    1: setOpenModalResult\n  } = useState(false);\n  const {\n    0: idLoteSelected,\n    1: setIdLoteSelected\n  } = useState(null);\n  const {\n    0: processingQnQofile,\n    1: setProcessingQnQofile\n  } = useState(false);\n  const {\n    0: dataResultOfQnQoFile,\n    1: setDataResultOfQnQoFile\n  } = useState({});\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const columns = Object.keys(LOTES.fields).map(key => {\n    var _LOTES$renders$key;\n\n    return {\n      title: LOTES.fields[key],\n      field: key,\n      render: (_LOTES$renders$key = LOTES.renders[key]) !== null && _LOTES$renders$key !== void 0 ? _LOTES$renders$key : null\n    };\n  });\n  const {\n    0: pagination,\n    1: setPagination\n  } = useState({\n    page: 1,\n    pageSize: 20\n  });\n\n  const crearArchivoPo = async rowData => {\n    setLoading(true);\n    const archivoPo = await send({\n      url: `api/lote/${rowData.id}/crear-archivo-po`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setLoading(false);\n    onReload && onReload();\n  };\n\n  const descargarArchivoPo = async rowData => {\n    const archivo_po = await send({\n      url: `api/archivo-po/${rowData.archivos_po[0].id}/descargar-archivo`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    });\n    const path_file = rowData.archivos_po[0].archivo.split('/');\n    const file_name = path_file[path_file.length - 1];\n    const element = document.createElement('a');\n    const file = new Blob([archivo_po.data], {\n      type: 'text/plain'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = file_name;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const descargarArchivoDetalleEnvioBanco = async rowData => {\n    const archivoInforme = await send({\n      url: `api/lote/${rowData.id}/descargar-archivo-detalle-envio-banco`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    });\n    const fileName = rowData.detalleEnvioBanco.split('/').pop();\n    const element = document.createElement('a');\n    const file = new Blob([archivoInforme.data], {\n      type: 'text/csv'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = fileName;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const descargarArchivoTotalEnvioBanco = async rowData => {\n    const archivoInforme = await send({\n      url: `api/lote/${rowData.id}/descargar-archivo-total-envio-banco`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    });\n    const fileName = rowData.totalEnvioBanco.split('/').pop();\n    const element = document.createElement('a');\n    const file = new Blob([archivoInforme.data], {\n      type: 'text/csv'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = fileName;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const openFormFiles = rowData => {\n    setIdLoteSelected(rowData.id);\n    setOpenForm(true);\n  };\n\n  const handleSubmit = async data => {\n    var _data$archivoQn, _data$archivoQo;\n\n    const formData = new FormData();\n\n    if ((data === null || data === void 0 ? void 0 : (_data$archivoQn = data.archivoQn) === null || _data$archivoQn === void 0 ? void 0 : _data$archivoQn.length) > 0) {\n      formData.append('archivos', data.archivoQn[0]);\n    }\n\n    if ((data === null || data === void 0 ? void 0 : (_data$archivoQo = data.archivoQo) === null || _data$archivoQo === void 0 ? void 0 : _data$archivoQo.length) > 0) {\n      formData.append('archivos', data.archivoQo[0]);\n    }\n\n    setOpenForm(false);\n    setOpenModal(true);\n    setProcessingQnQofile(true);\n    const response = await send({\n      url: `api/lote/${idLoteSelected}/procesar-vuelta-del-banco`,\n      data: formData,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setDataResultOfQnQoFile({\n      error: response.data.error,\n      detalle: response.data.detalle\n    });\n    setProcessingQnQofile(false);\n    setOpenModal(false);\n    setOpenModalResult(true);\n  };\n\n  const handleCancel = () => {\n    setOpenForm(false);\n  };\n\n  const reloadPagination = pagData => {\n    setPagination(pagData);\n    onPaginationChange(_objectSpread(_objectSpread({}, pagination), pagData));\n  };\n\n  const deleteLote = async rowData => {\n    handleDelete(rowData.id);\n  }; // Actions in table\n\n\n  const actionsUserTable = [rowData => ({\n    icon: () => /*#__PURE__*/_jsx(AddIcon, {}),\n    tooltip: 'Crear archivo PO',\n    onClick: (event, rowData) => crearArchivoPo(rowData),\n    disabled: rowData.archivos_po.length > 0 || loading ? true : false,\n    hidden: rowData.tipo === 'judicial' || rowData.estado === 'eliminado'\n  }), rowData => ({\n    icon: () => /*#__PURE__*/_jsx(CloudDownloadIcon, {}),\n    tooltip: 'Descargar archivo PO',\n    onClick: (event, rowData) => descargarArchivoPo(rowData),\n    disabled: rowData.archivos_po.length == 0 ? true : false,\n    hidden: rowData.tipo === 'judicial'\n  }), rowData => ({\n    icon: () => /*#__PURE__*/_jsx(AssessmentIcon, {}),\n    tooltip: 'Descargar informe detalle envio banco',\n    onClick: (event, rowData) => descargarArchivoDetalleEnvioBanco(rowData),\n    disabled: false\n  }), rowData => ({\n    icon: () => /*#__PURE__*/_jsx(ShowChartIcon, {}),\n    tooltip: 'Descargar informe total envio banco',\n    onClick: (event, rowData) => descargarArchivoTotalEnvioBanco(rowData),\n    disabled: false\n  }), rowData => ({\n    icon: () => /*#__PURE__*/_jsx(AccountBalanceIcon, {}),\n    tooltip: 'Procesar archivo QN y QO',\n    onClick: (event, rowData) => openFormFiles(rowData),\n    disabled: rowData.archivos_po.length == 0 || rowData.estado === 'procesadoOk' || rowData.estado === 'eliminado',\n    hidden: rowData.tipo === 'judicial'\n  })];\n\n  if (isUserAdmin()) {\n    actionsUserTable.push(rowData => ({\n      icon: () => /*#__PURE__*/_jsx(Delete, {}),\n      tooltip: 'Eliminar Lote',\n      onClick: (event, rowData) => deleteLote(rowData),\n      disabled: rowData.archivos_po.length > 0,\n      hidden: rowData.estado === 'eliminado'\n    }));\n  }\n\n  const getAcions = () => {\n    var actions = [];\n\n    if (isUserAdmin()) {\n      actions = actionsUserTable;\n      return actions;\n    }\n\n    if (isUserContaduria() && isUserTesoreria()) {\n      actions = actionsUserTable;\n      return actions;\n    }\n\n    if (isUserContaduria()) {\n      actions = [actionsUserTable[0]];\n      return actions;\n    }\n\n    if (isUserTesoreria()) {\n      actions = [actionsUserTable[1], actionsUserTable[2], actionsUserTable[3], actionsUserTable[4]];\n      return actions;\n    }\n\n    return actions;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [openForm && /*#__PURE__*/_jsx(ProcesarQnYQoForm, {\n      data: {},\n      handleSubmit: handleSubmit,\n      handleCancel: handleCancel\n    }), /*#__PURE__*/_jsx(Table, {\n      columns: columns,\n      totalCount: data === null || data === void 0 ? void 0 : data.count,\n      data: data === null || data === void 0 ? void 0 : data.results,\n      title: LOTES.name,\n      options: {\n        search: false\n      },\n      pagination: {\n        page: pagination.page - 1,\n        pageSize: pagination.pageSize\n      },\n      onPageChange: (page, pageSize) => {\n        reloadPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n          page: page + 1,\n          pageSize\n        }));\n      },\n      onChangeRowsPerPage: pageSize => {\n        reloadPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n          pageSize\n        }));\n      },\n      tableFiltersConfig: filterConfig,\n      onFilterClick: onFilter,\n      actions: getAcions()\n    }), openModal && /*#__PURE__*/_jsx(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: () => setOpenModal(!openModal),\n      title: 'Procesar Archivos QN y QO',\n      breadcrumbs: '',\n      subTitle: false,\n      actions: false,\n      onAcept: null,\n      onCancel: null,\n      maxWidth: 'md',\n      children: processingQnQofile && /*#__PURE__*/_jsx(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxs(Box, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsx(Typography, {\n            children: \"Procesando...\"\n          }), /*#__PURE__*/_jsx(CircularProgress, {})]\n        })\n      })\n    }), openModalResult && /*#__PURE__*/_jsxs(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: () => setOpenModalResult(!openModalResult),\n      title: 'Resultado de procesar los archivos QN y QO',\n      breadcrumbs: '',\n      subTitle: /*#__PURE__*/_jsx(SubtitleModalResultQnQofiles, {\n        data: dataResultOfQnQoFile\n      }),\n      actions: false,\n      onAcept: null,\n      onCancel: null,\n      maxWidth: 'md',\n      children: [dataResultOfQnQoFile.error && /*#__PURE__*/_jsx(List, {\n        children: dataResultOfQnQoFile.detalle.map((item, i) => {\n          return /*#__PURE__*/_jsx(ListItem, {\n            children: /*#__PURE__*/_jsx(ListItemText, {\n              primary: `- ${item}`\n            })\n          });\n        })\n      }), /*#__PURE__*/_jsx(Box, {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        children: /*#__PURE__*/_jsx(Button, {\n          onClick: () => {\n            setOpenModalResult(false);\n          },\n          color: \"primary\",\n          children: \"Salir\"\n        })\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}