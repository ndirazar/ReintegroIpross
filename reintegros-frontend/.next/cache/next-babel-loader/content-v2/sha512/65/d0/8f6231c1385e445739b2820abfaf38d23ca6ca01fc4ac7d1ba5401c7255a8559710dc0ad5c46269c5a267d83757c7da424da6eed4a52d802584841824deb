{"ast":null,"code":"import _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _user$delegaciones;\n\nimport { CUENTAS_JUDICIALES } from '../../../labels';\nimport { get } from '../../api-call/service';\nimport { FieldType } from '../../builder/FormField';\nimport { getUser } from '../../common/helpers';\nvar user = getUser();\nvar configCuentasJudiciales = [{\n  name: 'afiliado',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields['afiliado'],\n  options: function () {\n    var _options = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(form, value) {\n      var _yield$get, _yield$get$data;\n\n      var results;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(\"api/afiliados/?page=1&size=5&cuentaJudicial=true&numeroAfiliado=\".concat(value));\n\n            case 2:\n              _context.t1 = _yield$get = _context.sent;\n              _context.t0 = _context.t1 === null;\n\n              if (_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.t0 = _yield$get === void 0;\n\n            case 6:\n              if (!_context.t0) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.t2 = void 0;\n              _context.next = 11;\n              break;\n\n            case 10:\n              _context.t2 = (_yield$get$data = _yield$get.data) === null || _yield$get$data === void 0 ? void 0 : _yield$get$data.results;\n\n            case 11:\n              results = _context.t2;\n              return _context.abrupt(\"return\", results.map(function (d) {\n                return {\n                  value: d.id,\n                  label: d.numeroAfiliado + ' - ' + d.nombre + ' ' + d.apellido + ' ',\n                  afiliado: d\n                };\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function options(_x, _x2) {\n      return _options.apply(this, arguments);\n    }\n\n    return options;\n  }(),\n  onChange: function () {\n    var _onChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, form) {\n      var _value$afiliado, _value$afiliado2, _value$afiliado3, _value$afiliado4;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              form.setValue('afiliado', value);\n              form.setValue('nombre', (value === null || value === void 0 ? void 0 : (_value$afiliado = value.afiliado) === null || _value$afiliado === void 0 ? void 0 : _value$afiliado.nombre) || '');\n              form.setValue('apellido', (value === null || value === void 0 ? void 0 : (_value$afiliado2 = value.afiliado) === null || _value$afiliado2 === void 0 ? void 0 : _value$afiliado2.apellido) || '');\n              form.setValue('cuitCuil', (value === null || value === void 0 ? void 0 : (_value$afiliado3 = value.afiliado) === null || _value$afiliado3 === void 0 ? void 0 : _value$afiliado3.cuitCuil) || '');\n              form.setValue('cbu', (value === null || value === void 0 ? void 0 : (_value$afiliado4 = value.afiliado) === null || _value$afiliado4 === void 0 ? void 0 : _value$afiliado4.cbu) || '');\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function onChange(_x3, _x4) {\n      return _onChange.apply(this, arguments);\n    }\n\n    return onChange;\n  }(),\n  // onUpdate: async (value, form) => {\n  //   const regex = /^[0-9]{2}-[0-9]{8}\\/[0-9]{2}$/;\n  //   const isValid = value.match(regex);\n  //   if (isValid) {\n  //     try {\n  //       await send({\n  //         url: `api/verificar/afiliado`,\n  //         data: { afiliado: value },\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //       });\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  // },\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'nombre',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields.nombre,\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'apellido',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields.apellido,\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'delegacion',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields.delegacion,\n  options: user === null || user === void 0 ? void 0 : (_user$delegaciones = user.delegaciones) === null || _user$delegaciones === void 0 ? void 0 : _user$delegaciones.map(function (d) {\n    return {\n      value: d.id,\n      label: d.nombre\n    };\n  }),\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'informacionAdicional',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['informacionAdicional'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: false\n  }\n}, {\n  name: 'cuitCuil',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['cuitCuil'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 11\n  }\n}, {\n  name: 'cbu',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['cbu'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 22\n  }\n}, {\n  name: 'responsableDeCarga',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields['responsableDeCarga'],\n  options: function () {\n    var _options2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(form, value) {\n      var _form$getValues, _form$getValues2;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", [{\n                value: (_form$getValues = form.getValues()) === null || _form$getValues === void 0 ? void 0 : _form$getValues.responsableDeCarga['value'],\n                label: (_form$getValues2 = form.getValues()) === null || _form$getValues2 === void 0 ? void 0 : _form$getValues2.responsableDeCarga['label']\n              }]);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function options(_x5, _x6) {\n      return _options2.apply(this, arguments);\n    }\n\n    return options;\n  }(),\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: false\n  },\n  disabled: true\n}, {\n  name: 'oficioJudicial',\n  type: FieldType.file,\n  label: CUENTAS_JUDICIALES.fields.oficioJudicial,\n  accept: 'application/pdf',\n  styling: {\n    columns: 12\n  },\n  rules: {\n    required: true\n  },\n  multiple: false\n}];\nexport default configCuentasJudiciales;","map":null,"metadata":{},"sourceType":"module"}