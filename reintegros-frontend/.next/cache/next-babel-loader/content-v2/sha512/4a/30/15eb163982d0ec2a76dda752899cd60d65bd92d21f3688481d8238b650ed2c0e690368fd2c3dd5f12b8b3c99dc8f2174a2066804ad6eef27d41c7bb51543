{"ast":null,"code":"import { format, parseISO } from 'date-fns';\nvar APP_NAME = 'Reintegros';\nvar DATE_FORMAT = 'dd/MM/yyyy';\nvar FORM_BUILDER = {\n  required: 'Campo requerido ',\n  min: 'El valor debe ser superior a ',\n  minLength: 'Longitud debe ser de al menos ',\n  max: 'El valor debe ser inferior a ',\n  maxLength: 'Longitud debe ser a lo sumo de ',\n  pattern: 'El formato no es válido',\n  \"default\": 'Error desconocido',\n  unique: 'Este campo debe ser único'\n};\nvar USERS = {\n  name: 'Usuarios',\n  route: 'api/usuarios',\n  page: 'usuarios',\n  fields: {\n    username: 'Nombre de usuario',\n    email: 'Email',\n    first_name: 'Nombre',\n    last_name: 'Apellido',\n    is_active: 'Estado',\n    groups: 'Roles',\n    delegaciones: 'Delegaciones',\n    delegacionPrincipal: 'Delegacion principal',\n    capitulos: 'Capítulos'\n  },\n  filters: {\n    usuario: 'Usuario',\n    groups: 'Roles',\n    estado: 'Estado',\n    delegacion: 'Delegación'\n  },\n  optionsEstado: [{\n    label: 'Todos',\n    value: ''\n  }, {\n    label: 'Activo',\n    value: 'true'\n  }, {\n    label: 'Inactivo',\n    value: 'false'\n  }],\n  renders: {\n    is_active: function is_active(rowData) {\n      return rowData ? 'Si' : 'No';\n    },\n    groups: function groups(rowData) {\n      return rowData.groups.map(function (elem) {\n        return elem.name;\n      }).join(', ');\n    },\n    delegaciones: function delegaciones(rowData) {\n      return rowData.delegaciones.map(function (elem) {\n        return elem.nombre;\n      }).join(', ');\n    },\n    delegacionPrincipal: function delegacionPrincipal(rowData) {\n      var _rowData$delegacionPr;\n\n      return (_rowData$delegacionPr = rowData.delegacionPrincipal) === null || _rowData$delegacionPr === void 0 ? void 0 : _rowData$delegacionPr.nombre;\n    }\n  },\n  customActions: {\n    sync: 'Sincronizar Usuarios'\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  roles: {\n    list: [],\n    create: [],\n    update: [],\n    destroy: []\n  }\n};\nvar PRESTACIONES = {\n  name: 'Prestaciones',\n  route: 'api/prestaciones',\n  page: 'prestaciones',\n  fields: {\n    auditor: 'Auditor',\n    cantidad: 'Cantidad',\n    unidad: 'Unidad',\n    montoTotal: 'Monto total',\n    capitulo: 'Capítulo',\n    prestador: 'Prestador',\n    nomenclador: 'Prestación',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado de auditoría',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    fechaPracticaHasta: 'Fecha finalizacion práctica',\n    periodo: 'Período',\n    factura: 'Factura',\n    adjuntos: 'Otros adjuntos',\n    modalidad: 'Ámbito',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD'\n  },\n  cols: {\n    auditor: 'Auditor',\n    cantidad: 'Cantidad',\n    montoTotal: 'Monto total',\n    prestador: 'Prestador',\n    codigo: 'Código',\n    nomenclador: 'Prestación',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado de auditoría',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    fechaPracticaHasta: 'Fecha finalizacion práctica',\n    periodo: 'Período',\n    factura: 'Factura',\n    adjuntos: 'Otros adjuntos',\n    modalidad: 'Ámbito',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD'\n  },\n  filters: {\n    auditorActual: 'Auditor',\n    nomenclador: 'Prestación',\n    prestador: 'Prestador',\n    estadoActual: 'Estado de auditoría',\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta'\n  },\n  optionsEstadoActual: [{\n    label: 'En curso',\n    value: 'enCurso'\n  }, {\n    label: 'Aceptado',\n    value: 'aceptado'\n  }, {\n    label: 'Rechazado',\n    value: 'rechazado'\n  }, {\n    label: 'Desvinculado de lote',\n    value: 'desvinculado'\n  }, {\n    label: 'Cerrado',\n    value: 'cerrado'\n  }],\n  optionsCobertura: [{\n    label: '50%',\n    value: '50'\n  }, {\n    label: '70%',\n    value: '70'\n  }, {\n    label: '80%',\n    value: '80'\n  }, {\n    label: '90%',\n    value: '90'\n  }],\n  optionsDate: [{\n    label: 'Fecha',\n    value: 'date'\n  }, {\n    label: 'Rango',\n    value: 'range'\n  }],\n  renders: {\n    categoria: function categoria(rowData) {\n      var _rowData$categoria, _rowData$nomenclador;\n\n      if ((_rowData$categoria = rowData.categoria) !== null && _rowData$categoria !== void 0 && _rowData$categoria.nombre) {\n        var _rowData$categoria2;\n\n        return (_rowData$categoria2 = rowData.categoria) === null || _rowData$categoria2 === void 0 ? void 0 : _rowData$categoria2.nombre;\n      }\n\n      if ((_rowData$nomenclador = rowData.nomenclador) !== null && _rowData$nomenclador !== void 0 && _rowData$nomenclador.categoria) {\n        var _rowData$nomenclador2;\n\n        return (_rowData$nomenclador2 = rowData.nomenclador) === null || _rowData$nomenclador2 === void 0 ? void 0 : _rowData$nomenclador2.categoria.nombre;\n      }\n\n      return '';\n    },\n    coseguroNomenclador: function coseguroNomenclador(rowData) {\n      return 100 - rowData.cobertura;\n    },\n    modalidad: function modalidad(rowData) {\n      var _rowData$nomenclador3, _rowData$item;\n\n      var modalidad = ((_rowData$nomenclador3 = rowData.nomenclador) === null || _rowData$nomenclador3 === void 0 ? void 0 : _rowData$nomenclador3.modalidadPrestacion) || ((_rowData$item = rowData.item) === null || _rowData$item === void 0 ? void 0 : _rowData$item.modalidadPrestacion);\n      var nom = NOMENCLADOR.optionsModalidadPresentacion.find(function (n) {\n        return n.value === modalidad;\n      });\n      return nom === null || nom === void 0 ? void 0 : nom.label;\n    },\n    prestador: function prestador(rowData) {\n      var _rowData$prestador, _rowData$prestador2, _rowData$prestador3;\n\n      if (!rowData.prestador.id) {\n        return '';\n      }\n\n      return \"\".concat((_rowData$prestador = rowData.prestador) === null || _rowData$prestador === void 0 ? void 0 : _rowData$prestador.matricula, \" - \").concat((_rowData$prestador2 = rowData.prestador) === null || _rowData$prestador2 === void 0 ? void 0 : _rowData$prestador2.nombre, \" \").concat((_rowData$prestador3 = rowData.prestador) === null || _rowData$prestador3 === void 0 ? void 0 : _rowData$prestador3.apellido);\n    },\n    codigo: function codigo(rowData) {\n      var _rowData$nomenclador4, _rowData$item2;\n\n      return ((_rowData$nomenclador4 = rowData.nomenclador) === null || _rowData$nomenclador4 === void 0 ? void 0 : _rowData$nomenclador4.codigo) || ((_rowData$item2 = rowData.item) === null || _rowData$item2 === void 0 ? void 0 : _rowData$item2.codigo);\n    },\n    nomenclador: function nomenclador(rowData) {\n      var _rowData$nomenclador5, _rowData$item3;\n\n      return ((_rowData$nomenclador5 = rowData.nomenclador) === null || _rowData$nomenclador5 === void 0 ? void 0 : _rowData$nomenclador5.descripcion) || ((_rowData$item3 = rowData.item) === null || _rowData$item3 === void 0 ? void 0 : _rowData$item3.descripcion);\n    },\n    estadoActual: function estadoActual(rowData) {\n      var _rowData$auditoria, _PRESTACIONES$options;\n\n      var estado = ((_rowData$auditoria = rowData.auditoria) === null || _rowData$auditoria === void 0 ? void 0 : _rowData$auditoria.estadoActual) || rowData.estadoActual || 'enCurso';\n      return (_PRESTACIONES$options = PRESTACIONES.optionsEstadoActual.find(function (elem) {\n        return elem.value === estado;\n      })) === null || _PRESTACIONES$options === void 0 ? void 0 : _PRESTACIONES$options.label;\n    },\n    fechaPractica: function fechaPractica(rowData) {\n      return format(parseISO(rowData.fechaPractica), DATE_FORMAT);\n    },\n    fechaPracticaHasta: function fechaPracticaHasta(rowData) {\n      return rowData.fechaPracticaHasta ? format(parseISO(rowData.fechaPracticaHasta), DATE_FORMAT) : '-';\n    },\n    adjuntos: function adjuntos(rowData) {\n      if (rowData.adjuntos) {\n        var adArr = rowData.adjuntos.map(function (a) {\n          return a.archivo;\n        });\n        return adArr.join(', ');\n      }\n\n      return '';\n    },\n    montoTotal: function montoTotal(rowData) {\n      return \"$ \".concat((parseFloat(rowData.valorIprossNomenclador) * rowData.cantidad).toFixed(2));\n    },\n    montoReintegrar: function montoReintegrar(rowData) {\n      if (rowData.montoReintegrar) {\n        return \"$ \".concat(parseFloat(rowData.montoReintegrar).toFixed(2));\n      }\n\n      return \"$ \".concat((parseFloat(rowData.valorIprossNomenclador) * rowData.cantidad * (rowData.cobertura / 100)).toFixed(2));\n    },\n    valorPrestacion: function valorPrestacion(rowData) {\n      return \"$ \".concat(rowData.valorPrestacion);\n    },\n    valorIprossNomenclador: function valorIprossNomenclador(rowData) {\n      return \"$ \".concat(rowData.valorIprossNomenclador);\n    },\n    cud: function cud(rowData) {\n      var _rowData$solicitud, _rowData$solicitud2, _rowData$solicitud2$a;\n\n      return rowData !== null && rowData !== void 0 && (_rowData$solicitud = rowData.solicitud) !== null && _rowData$solicitud !== void 0 && _rowData$solicitud.discapacitado ? rowData === null || rowData === void 0 ? void 0 : (_rowData$solicitud2 = rowData.solicitud) === null || _rowData$solicitud2 === void 0 ? void 0 : (_rowData$solicitud2$a = _rowData$solicitud2.afiliado) === null || _rowData$solicitud2$a === void 0 ? void 0 : _rowData$solicitud2$a.cud : '';\n    },\n    discapacitado: function discapacitado(rowData) {\n      var _rowData$solicitud3;\n\n      return rowData !== null && rowData !== void 0 && (_rowData$solicitud3 = rowData.solicitud) !== null && _rowData$solicitud3 !== void 0 && _rowData$solicitud3.discapacitado ? 'Si' : 'No';\n    }\n  }\n};\nvar NOMENCLADOR = {\n  name: 'Nomenclador',\n  route: 'api/nomenclador',\n  page: 'nomenclador',\n  modalImportNomenclador: 'Vista previa',\n  addPrestacion: 'Agregar prestación',\n  importPrestaciones: 'Sincronizar',\n  fields: {\n    capitulo: 'Capítulo',\n    codigo: 'Código',\n    descripcion: 'Descripción',\n    complejidadPractica: 'Nivel de complejidad',\n    numeroNormaRespaldatoria: 'Nº Norma respaldatoria',\n    fechaNorma: 'Fecha de la norma',\n    topesCoberturaPeriodo: 'Topes de cobertura por período',\n    periodoTope: 'Período del tope',\n    modalidadPresentacion: 'Ámbito',\n    valorIpross: 'Valor IPROSS',\n    unidades: 'Unidad',\n    requiereAuditoriaMedica: '¿Requiere auditoría médica?'\n  },\n  cols: {\n    codigo: 'Código',\n    capitulo: 'Capítulo',\n    modalidadPresentacion: 'Ámbito',\n    valorIpross: 'Valor IPROSS',\n    descripcion: 'Descripción',\n    complejidadPractica: 'Escala de Precios',\n    numeroNormaRespaldatoria: 'Resolución',\n    fechaNorma: 'Fecha Resolución',\n    topesCoberturaPeriodo: 'Topes',\n    periodoTope: 'Período',\n    requiereAuditoriaMedica: 'Aud. Med.'\n  },\n  filters: {\n    descripcion: 'Descripción',\n    modalidad: 'Ámbito',\n    capitulo: 'Capítulo',\n    requiereAuditoriaMedica: 'Aud. Méd.'\n  },\n  optionsModalidadPresentacion: [{\n    label: 'Ambulatoria',\n    value: 'ambulatorio'\n  }, {\n    label: 'Internación',\n    value: 'internacion'\n  }],\n  optionsPeriodoTope: [{\n    label: 'Por única vez',\n    value: 'porunicavez'\n  }, {\n    label: 'Mensual',\n    value: 'mensual'\n  }, {\n    label: 'Bimenstral',\n    value: 'bimestral'\n  }, {\n    label: 'Trimestral',\n    value: 'trimestral'\n  }, {\n    label: 'Cuatrimestral',\n    value: 'cuatrimestral'\n  }, {\n    label: 'Semestral',\n    value: 'semestral'\n  }, {\n    label: 'Anual',\n    value: 'anual'\n  }],\n  optionsUnidades: [{\n    label: 'km',\n    value: 'km'\n  }, {\n    label: 'horas',\n    value: 'hs'\n  }, {\n    label: 'sesiones',\n    value: 'sesiones'\n  }, {\n    label: 'unidades',\n    value: 'unidades'\n  }],\n  renders: {\n    capitulo: function capitulo(rowData) {\n      return \"\".concat(rowData.capitulo.capitulo, \"-\").concat(rowData.capitulo.descripcion);\n    },\n    fechaVigencia: function fechaVigencia(rowData) {\n      return format(parseISO(rowData.fechaVigencia), DATE_FORMAT);\n    },\n    fechaVigenciaHasta: function fechaVigenciaHasta(rowData) {\n      return rowData.fechaVigenciaHasta ? format(parseISO(rowData.fechaVigencia), DATE_FORMAT) : '';\n    },\n    modalidadPresentacion: function modalidadPresentacion(rowData) {\n      var _NOMENCLADOR$optionsM;\n\n      return (_NOMENCLADOR$optionsM = NOMENCLADOR.optionsModalidadPresentacion.find(function (elem) {\n        return elem.value === rowData.modalidadPrestacion;\n      })) === null || _NOMENCLADOR$optionsM === void 0 ? void 0 : _NOMENCLADOR$optionsM.label;\n    },\n    periodoTope: function periodoTope(rowData) {\n      var _NOMENCLADOR$optionsP;\n\n      return (_NOMENCLADOR$optionsP = NOMENCLADOR.optionsPeriodoTope.find(function (elem) {\n        return elem.value === rowData.periodoTope;\n      })) === null || _NOMENCLADOR$optionsP === void 0 ? void 0 : _NOMENCLADOR$optionsP.label;\n    },\n    estado: function estado(rowData) {\n      return rowData.estado === 'activo' ? 'Activo' : 'Inactivo';\n    },\n    requiereAuditoriaMedica: function requiereAuditoriaMedica(rowData) {\n      return rowData.requiereAuditoriaMedica === true ? 'Si' : 'No';\n    }\n  },\n  messages: {\n    processingFileMessage: 'Procesando archivo de importación',\n    successfulImportNomenclador: 'Importación exitosa'\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea eliminar el nomenclador?'\n};\nvar CUENTAS_TERCEROS = {\n  name: 'Cuentas de terceros',\n  route: 'api/cuenta-de-terceros',\n  page: 'cuentas_terceros',\n  fields: {\n    afiliado: 'Afiliado',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    cuitCuil: 'CUIT / CUIL',\n    cbu: 'CBU',\n    responsableDeCarga: 'Responsable de carga',\n    delegacion: 'Delegación',\n    adjuntos: 'Archivos adjuntos',\n    estado: 'Estado'\n  },\n  filters: {\n    delegacion: 'Delegación'\n  },\n  optionsEstados: [{\n    value: 'inactiva',\n    label: 'Inactiva'\n  }, {\n    value: 'pendiente',\n    label: 'Pendiente'\n  }, {\n    value: 'aprobada',\n    label: 'Aprobada'\n  }, {\n    value: 'rechazada',\n    label: 'Rechazada'\n  }],\n  renders: {\n    responsableDeCarga: function responsableDeCarga(rowData) {\n      return rowData.responsableDeCarga.first_name + ' ' + rowData.responsableDeCarga.last_name;\n    },\n    delegacion: function delegacion(rowData) {\n      var _rowData$delegacion;\n\n      return (_rowData$delegacion = rowData.delegacion) === null || _rowData$delegacion === void 0 ? void 0 : _rowData$delegacion.nombre;\n    },\n    adjuntos: function adjuntos(rowData) {\n      return rowData.adjuntos.archivo;\n    },\n    afiliado: function afiliado(rowData) {\n      var _rowData$afiliado, _rowData$afiliado2, _rowData$afiliado3;\n\n      return \"\".concat((_rowData$afiliado = rowData.afiliado) === null || _rowData$afiliado === void 0 ? void 0 : _rowData$afiliado.numeroAfiliado, \" | \").concat((_rowData$afiliado2 = rowData.afiliado) === null || _rowData$afiliado2 === void 0 ? void 0 : _rowData$afiliado2.nombre, \", \").concat((_rowData$afiliado3 = rowData.afiliado) === null || _rowData$afiliado3 === void 0 ? void 0 : _rowData$afiliado3.apellido);\n    },\n    estado: function estado(rowData) {\n      var _CUENTAS_TERCEROS$opt;\n\n      return (_CUENTAS_TERCEROS$opt = CUENTAS_TERCEROS.optionsEstados.find(function (c) {\n        return c.value === rowData.estado;\n      })) === null || _CUENTAS_TERCEROS$opt === void 0 ? void 0 : _CUENTAS_TERCEROS$opt.label;\n    }\n  },\n  tabPermissions: ['Administrador', 'Reintegro', 'Delegado', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea desactivar esta cuenta de terceros?',\n  helpCuit: 'Ingresar número sin guiones ni puntos'\n};\nvar CUENTAS_JUDICIALES = {\n  name: 'Cuentas judiciales',\n  route: 'api/cuenta-judicial',\n  page: 'cuentas_judiciales',\n  fields: {\n    afiliado: 'Afiliado',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    responsableDeCarga: 'Responsable de carga',\n    delegacion: 'Delegación',\n    informacionAdicional: 'Información adicional',\n    oficioJudicial: 'Oficio judicial',\n    cuitCuil: 'CUIT / CUIL',\n    cbu: 'CBU',\n    estado: 'Estado'\n  },\n  filters: {\n    delegacion: 'Delegación'\n  },\n  optionsEstados: [{\n    value: 'inactiva',\n    label: 'Inactiva'\n  }, {\n    value: 'activa',\n    label: 'Activa'\n  }],\n  renders: {\n    responsableDeCarga: function responsableDeCarga(rowData) {\n      return rowData.responsableDeCarga.first_name + ' ' + rowData.responsableDeCarga.last_name;\n    },\n    delegacion: function delegacion(rowData) {\n      var _rowData$delegacion2;\n\n      return (_rowData$delegacion2 = rowData.delegacion) === null || _rowData$delegacion2 === void 0 ? void 0 : _rowData$delegacion2.nombre;\n    },\n    afiliado: function afiliado(rowData) {\n      var _rowData$afiliado4, _rowData$afiliado5, _rowData$afiliado6;\n\n      return \"\".concat((_rowData$afiliado4 = rowData.afiliado) === null || _rowData$afiliado4 === void 0 ? void 0 : _rowData$afiliado4.numeroAfiliado, \" | \").concat((_rowData$afiliado5 = rowData.afiliado) === null || _rowData$afiliado5 === void 0 ? void 0 : _rowData$afiliado5.nombre, \", \").concat((_rowData$afiliado6 = rowData.afiliado) === null || _rowData$afiliado6 === void 0 ? void 0 : _rowData$afiliado6.apellido);\n    },\n    estado: function estado(rowData) {\n      var _CUENTAS_JUDICIALES$o;\n\n      return (_CUENTAS_JUDICIALES$o = CUENTAS_JUDICIALES.optionsEstados.find(function (c) {\n        return c.value === rowData.estado;\n      })) === null || _CUENTAS_JUDICIALES$o === void 0 ? void 0 : _CUENTAS_JUDICIALES$o.label;\n    }\n  },\n  tabPermissions: ['Administrador', 'Delegado', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea desactivar esta cuenta judicial?',\n  helpCuit: 'Ingresar número sin guiones ni puntos'\n};\nvar CAPITULO = {\n  name: 'Capitulo',\n  route: 'api/capitulos',\n  page: 'capitulo',\n  fields: {\n    coseguro: 'Coseguro',\n    capitulo: 'Capítulo',\n    descripción: 'Descripción'\n  },\n  renders: {}\n}; //Used by generator, dont remove this line #entitiesobject\n\nvar CUPONES = {\n  name: 'Solicitudes Autorizadas',\n  page: 'cupones',\n  route: 'api/cupon',\n  fields: {\n    id: 'N° Autorización',\n    nroSolicitud: 'N° Solicitud',\n    nroAfiliado: 'N° Afiliado',\n    origenCuenta: 'Cuenta',\n    fechaDeAlta: 'Fecha de alta',\n    delegacion: 'Delegación',\n    // plazo: 'Plazo',\n    montoDeReintegro: 'Monto de reintegro',\n    lotesIds: 'N° Lote',\n    estado: 'Estado',\n    capitulos: 'Capítulos',\n    numeroDePago: 'Número de pago',\n    motivoDeRechazo: 'Motivo de rechazo'\n  },\n  filters: {\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n    capitulo: 'Capítulo',\n    nroLote: 'N° Lote',\n    delegacion: 'Delegación',\n    estado: 'Estado',\n    tipo: 'Tipo'\n  },\n  optionsEstado: [{\n    label: 'Todos',\n    value: ''\n  }, {\n    label: 'Abierto',\n    value: 'abierto'\n  }, {\n    label: 'En proceso',\n    value: 'enProceso'\n  }, {\n    label: 'Pago realizado',\n    value: 'pagoRealizado'\n  }, {\n    label: 'Pago rechazado',\n    value: 'pagoRechazado'\n  }, {\n    label: 'Rechazo parcial',\n    value: 'rechazoParcial'\n  }, {\n    label: 'Cerrado',\n    value: 'cerrado'\n  }, {\n    label: 'Desvinculado de lote',\n    value: 'desvinculado'\n  }],\n  renders: {\n    fechaDeAlta: function fechaDeAlta(rowData) {\n      return format(parseISO(rowData.fechaDeAlta), DATE_FORMAT);\n    },\n    montoDeReintegro: function montoDeReintegro(rowData) {\n      return \"$ \".concat(rowData.montoDeReintegro);\n    }\n  },\n  createLoteForFilteredCupones: 'Crear lote para todos',\n  modalCreateLote: {\n    mainTitle: 'Vista previa de creación de lotes',\n    subTitle: 'Resultado del análisis de las autorizaciones:',\n    subTitle2: 'Solo se crearán los lotes, si todas las autorizaciones seleccionadas son correctas.'\n  },\n  modalSetState: {\n    mainTitle: 'Modificar estado de autorización',\n    subTitle1: '¿Está seguro que desea modificar el estado de la autorización?',\n    subTitle2: 'Si se modifica el estado a \"abierto\" la autorización podrá formar parte de un nuevo lote.',\n    subTitle3: function subTitle3(cupon) {\n      var _cupon$solicitud$cuen;\n\n      var tipoDeCuenta = '';\n\n      switch ((_cupon$solicitud$cuen = cupon.solicitud.cuenta) === null || _cupon$solicitud$cuen === void 0 ? void 0 : _cupon$solicitud$cuen.origen) {\n        case 'cuentaAfiliado':\n          tipoDeCuenta = 'cuenta de afiliado';\n          break;\n\n        case 'cuentaDeTerceros':\n          tipoDeCuenta = 'cuenta de terceros';\n          break;\n\n        case 'cuentaJudicial':\n          tipoDeCuenta = 'cuenta judicial';\n          break;\n\n        default:\n          break;\n      }\n\n      return \"Se volver\\xE1n a copiar los datos para el pago desde la \".concat(tipoDeCuenta, \"; puede modificar los datos de dicha cuenta antes de modificar el estado de la autorizaci\\xF3n.\");\n    },\n    subTitle4: 'Esta acción no se puede deshacer.'\n  },\n  messages: {\n    successCreateCupones: 'Proceso finalizado con éxito',\n    successReopenCupones: 'Actualizacion exitosa del estado de la solicitud de autorización',\n    loading: 'Procesando las autorizaciones',\n    deleteMessage: '¿Seguro que desea remover la solicitud de autorización?'\n  },\n  tabPermissions: ['Administrador', 'AuditoriaAdministrativa', 'AuditoriaCentral', 'AuditoriaMedica', 'Contaduria', 'Delegado', 'Presidencia', 'Reintegro', 'SoloLectura']\n};\nvar LOTES = {\n  name: 'Lotes',\n  page: 'lotes',\n  route: 'api/lote',\n  fields: {\n    id: 'N° Lote',\n    fechaDeAlta: 'Fecha de alta',\n    tipo: 'Tipo',\n    montoTotal: 'Monto total',\n    estado: 'Estado',\n    procesadoPor: 'Procesado por'\n  },\n  filters: {\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n    tipo: 'Tipo',\n    estado: 'Estado',\n    delegacion: 'Delegación'\n  },\n  optionsTipos: [{\n    label: 'No judicial',\n    value: 'noJudicial'\n  }, {\n    label: 'Judicial',\n    value: 'judicial'\n  }],\n  optionsEstados: [{\n    label: 'No procesado',\n    value: 'noProcesado'\n  }, {\n    label: 'Procesado',\n    value: 'procesadoOk'\n  }, {\n    label: 'Procesado con error',\n    value: 'procesadoConError'\n  }, {\n    label: 'Eliminado',\n    value: 'eliminado'\n  }],\n  renders: {\n    fechaDeAlta: function fechaDeAlta(rowData) {\n      return format(parseISO(rowData.fechaDeAlta), DATE_FORMAT);\n    },\n    tipo: function tipo(rowData) {\n      return rowData.tipo === 'noJudicial' ? 'No judicial' : 'Judicial';\n    },\n    montoTotal: function montoTotal(rowData) {\n      return rowData.montoTotal ? \"$ \".concat(rowData.montoTotal) : '';\n    },\n    procesadoPor: function procesadoPor(rowData) {\n      return \"\".concat(rowData.procesadoPor);\n    },\n    estado: function estado(rowData) {\n      var _LOTES$optionsEstados;\n\n      return (_LOTES$optionsEstados = LOTES.optionsEstados.find(function (opt) {\n        return opt.value === rowData.estado;\n      })) === null || _LOTES$optionsEstados === void 0 ? void 0 : _LOTES$optionsEstados.label;\n    }\n  },\n  modalResultQnQoFiles: {\n    subTitle: 'Resultado del análisis de los archivos:',\n    subtitle2Error: 'No se pueden procesar las autorizaciones. Se deben corregir los errores y volver a cargar los archivos para el lote.',\n    subtitle2Success: 'Se procesaron exitosamente los archivos.'\n  },\n  modalSetState: {\n    mainTitle: 'Modificar estado de lote judicial',\n    subTitle1: '¿Está seguro que desea modificar el estado del lote judicial?'\n  },\n  tabPermissions: ['Administrador', 'Tesoreria', 'Contaduria', 'Presidencia', 'SoloLectura'],\n  deleteMessage: '¿Seguro que desea elimiar el lote?',\n  messages: {\n    successChangeStatus: 'Actualizacion exitosa del estado del lote'\n  }\n};\nvar DELEGACIONES = {\n  name: 'Delegaciones',\n  page: 'delegaciones',\n  route: 'api/delegaciones',\n  fields: {\n    id: 'N° Delegación',\n    nombre: 'Nombre'\n  },\n  renders: {\n    is_active: function is_active(rowData) {\n      return rowData ? 'Si' : 'No';\n    }\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  userWithoutDelegacionesOption: 'El usuario no tiene delegaciones asignadas'\n};\nvar AFILIADOS = {\n  name: 'Afiliados',\n  page: 'afiliados',\n  route: 'api/afiliados',\n  fields: {\n    numeroAfiliado: 'N° Afiliado',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    cuitCuil: 'CUIT / CUIL',\n    cbu: 'CBU',\n    activo: 'Activo',\n    fechaBaja: 'Fecha de baja',\n    cuentaDeTerceros: 'Cuenta de terceros',\n    cuentaJudicial: 'Cuenta judicial'\n  },\n  renders: {\n    activo: function activo(rowData) {\n      return rowData.activo ? 'Si' : 'No';\n    }\n  },\n  tabPermissions: ['Administrador', 'Presidencia']\n};\nvar AUDITORIAS = {\n  name: 'Auditorias',\n  page: 'auditorias',\n  route: 'api/auditorias',\n  fields: {\n    nroSolicitud: 'N° Solicitud',\n    practica: 'Práctica',\n    fechaPractica: 'Fecha de práctica',\n    prestadorName: 'Prestador',\n    estadoActual: 'Estado',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD',\n    auditor: 'Auditor'\n  },\n  optionsRechazo: [{\n    value: 'faltaDocumentacion',\n    label: 'Falta documentación'\n  }, {\n    value: 'prestacionNoEstaEnMenuPrestacional',\n    label: 'Prestación no está en menú prestacional'\n  }, {\n    value: 'noTieneAutorizacionPrevia',\n    label: 'No tiene autorización previa'\n  }, {\n    value: 'noCorrespondeCoberturaPorReintegro',\n    label: 'No corresponde cobertura por reintegro'\n  }],\n  renders: {\n    // 'solicitud.id': (rowData) =>\n    //   `${'0'.repeat(\n    //     7 - rowData.solicitud.id?.toString().length,\n    //   )}${rowData.solicitud.id?.toString()}`,\n    fechaPractica: function fechaPractica(rowData) {\n      return format(parseISO(rowData.fechaPractica), DATE_FORMAT);\n    },\n    prestador: function prestador(rowData) {\n      var _rowData$prestador4, _rowData$prestador5, _rowData$prestador6;\n\n      return \"\".concat((_rowData$prestador4 = rowData.prestador) === null || _rowData$prestador4 === void 0 ? void 0 : _rowData$prestador4.matricula, \" - \").concat((_rowData$prestador5 = rowData.prestador) === null || _rowData$prestador5 === void 0 ? void 0 : _rowData$prestador5.nombre, \" \").concat((_rowData$prestador6 = rowData.prestador) === null || _rowData$prestador6 === void 0 ? void 0 : _rowData$prestador6.apellido);\n    },\n    // practica: (rowData) => {\n    //   const prac = `${rowData.nomenclador.codigo} - ${rowData.nomenclador.descripcion} - ${rowData.nomenclador.capitulo.descripcion}`\n    //   if (prac.length > 50) {\n    //     return prac.substring(0, 50) + '...';\n    //   }\n    //   return prac\n    // },\n    estadoActual: function estadoActual(rowData) {\n      var _PRESTACIONES$options2;\n\n      return (_PRESTACIONES$options2 = PRESTACIONES.optionsEstadoActual.find(function (opt) {\n        return opt.value === rowData.estadoActual;\n      })) === null || _PRESTACIONES$options2 === void 0 ? void 0 : _PRESTACIONES$options2.label;\n    }\n  },\n  tabPermissions: ['Administrador', 'AuditoriaAdministrativa', 'AuditoriaCentral', 'AuditoriaMedica', 'Presidencia', 'SoloLectura']\n};\nvar TABLE = {\n  labelRowsSelect: 'filas',\n  labelDisplayedRows: '{from}-{to} de {count}',\n  labelRowsPerPage: 'Filas por página',\n  firstAriaLabel: 'Primera página',\n  firstTooltip: 'Primera página',\n  previousAriaLabel: 'Anterior',\n  previousTooltip: 'Anterior',\n  nextAriaLabel: 'Siguiente',\n  nextTooltip: 'Siguiente',\n  lastAriaLabel: 'Última página',\n  lastTooltip: 'Última página',\n  actions: '',\n  searchPlaceholder: 'Buscar',\n  exportCSV: 'Exportar csv',\n  emptyDataSourceMessage: 'No se encontraron registros'\n};\nvar TABLE_FILTER = {\n  title: 'Filtro'\n};\nvar LOGIN = {\n  passwordRecoveryMessage: 'Contacte al administrador de LDAP: mesadeayuda@ipross.rionegro.gov.ar',\n  passwordRecoveryButton: 'Olvidé mi contraseña',\n  signIn: 'Ingresar',\n  logout: 'Salir',\n  password: 'Contraseña'\n};\nvar SOLICITUDES = {\n  name: 'Solicitudes',\n  route: 'api/solicitudes',\n  page: 'solicitudes',\n  editPrestaciones: 'Editar',\n  fields: {\n    id: 'N° Solicitud',\n    estadoActual: 'Estado',\n    fechaAlta: 'Fecha de alta',\n    delegacionNombre: 'Delegación',\n    numeroAfiliado: 'Afiliado',\n    tipo: 'Solicitud judicializada',\n    montoTotal: 'Monto total',\n    montoTotalAReintegrar: 'Monto total a reintegrar',\n    capitulosPrestaciones: 'Capítulos',\n    'factura.id': 'Factura',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD'\n  },\n  filters: {\n    afiliado: 'Afiliado',\n    delegacion: 'Delegación',\n    estadoActual: 'Estado actual',\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n    judicial: 'Solicitud judicializada',\n    source: 'Origen'\n  },\n  renders: {\n    estadoActual: function estadoActual(rowData) {\n      var _SOLICITUDES$optionsE;\n\n      return (_SOLICITUDES$optionsE = SOLICITUDES.optionsEstadoActual.find(function (elem) {\n        return elem.value === rowData.estadoActual;\n      })) === null || _SOLICITUDES$optionsE === void 0 ? void 0 : _SOLICITUDES$optionsE.label;\n    },\n    fechaAlta: function fechaAlta(rowData) {\n      return format(parseISO(rowData.fechaAlta), DATE_FORMAT);\n    },\n    'afiliado.numeroAfiliado': function afiliadoNumeroAfiliado(rowData) {\n      var _rowData$afiliado7, _rowData$afiliado8, _rowData$afiliado9;\n\n      return \"\".concat((_rowData$afiliado7 = rowData.afiliado) === null || _rowData$afiliado7 === void 0 ? void 0 : _rowData$afiliado7.numeroAfiliado, \" | \").concat((_rowData$afiliado8 = rowData.afiliado) === null || _rowData$afiliado8 === void 0 ? void 0 : _rowData$afiliado8.nombre, \", \").concat((_rowData$afiliado9 = rowData.afiliado) === null || _rowData$afiliado9 === void 0 ? void 0 : _rowData$afiliado9.apellido);\n    },\n    tipo: function tipo(rowData) {\n      return rowData.tipo === 'noJudicial' ? 'No' : 'Si';\n    },\n    montoTotal: function montoTotal(rowData) {\n      return \"$ \".concat(rowData === null || rowData === void 0 ? void 0 : rowData.montoTotal);\n    },\n    montoTotalAReintegrar: function montoTotalAReintegrar(rowData) {\n      return \"$ \".concat(rowData.montoTotalAReintegrar);\n    },\n    // capitulosPrestaciones: (rowData) => rowData.capitulosPrestaciones.join('; '),\n    factura: function factura(rowData) {\n      var _rowData$factura;\n\n      return (_rowData$factura = rowData.factura) === null || _rowData$factura === void 0 ? void 0 : _rowData$factura.archivo;\n    }\n  },\n  optionsEstadoActual: [{\n    label: 'Sin pagos realizados',\n    value: 'sinPagos'\n  }, {\n    label: 'Pago parcial',\n    value: 'pagoParcial'\n  }, {\n    label: 'Pago total',\n    value: 'pagoTotal'\n  }],\n  optionsType: [{\n    label: 'Si',\n    value: 'judicial'\n  }, {\n    label: 'No',\n    value: 'noJudicial'\n  }],\n  sources: [{\n    label: 'Interna',\n    value: 'interna'\n  }, {\n    label: 'VEM',\n    value: 'vem'\n  }, {\n    label: 'Bajo Presupuesto',\n    value: 'bajoPresupuesto'\n  }],\n  customActions: {\n    addPresentacion: 'Agregar prestacion'\n  },\n  modalEditPrestacion: {\n    mainTitle: 'Editar prestacion'\n  },\n  modalCreateCupones: {\n    mainTitle: 'Vista previa de creacion de autorizaciones',\n    subTitle: 'Resultado del análisis de las solicitudes',\n    subTitle2: function subTitle2(data) {\n      return \"Se crearan \".concat(data, \" autorizaciones. Las siguientes solicitudes no cumplen con las condiciones para que se puedan crear las solicitudes de autorizaci\\xF3n:\");\n    }\n  },\n  messages: {\n    errorCreateCupones: \"No se cre\\xF3 ninguna solicitud de autorizaci\\xF3n\",\n    successCreateCupones: function successCreateCupones(data) {\n      return \"Se crearon exitosamente \".concat(data, \" solicitudes de autorizaci\\xF3n\");\n    },\n    loading: 'Procesando las solicitudes de autorización',\n    tipoForm: 'Tipos de cuentas disponibles',\n    errorAlObtenerCuenta: 'Error al intentar obtener la cuenta',\n    toolTipJudicializada: 'Definir si la solicitud se encuentra judicializada',\n    successEditPrestacion: 'Prestacion editada correctamente'\n  },\n  tabPermissions: ['Administrador', 'AuditoriaAdministrativa', 'AuditoriaCentral', 'AuditoriaMedica', 'Contaduria', 'Delegado', 'Presidencia', 'Reintegro', 'SoloLectura', 'Tesoreria']\n};\nvar PRESTADORES = {\n  name: 'Prestadores',\n  route: 'api/prestadores',\n  page: 'prestadores',\n  addPrestador: 'Agregar Prestador',\n  \"import\": 'Importar prestadores',\n  fields: {\n    tipoDocumento: 'Tipo de documento',\n    nroDocumento: 'N° Documento',\n    apellido: 'Apellido',\n    nombre: 'Nombre',\n    sexoSisa: 'Sexo',\n    perEstado: 'Per. Estado',\n    fechaNacimiento: 'Fecha de nacimiento',\n    lugarNacimiento: 'Lugar de nacimiento',\n    nacionalidad: 'Nacionalidad',\n    domicilio: 'Domicilio',\n    localidadDes: 'Provincia',\n    profEstado: 'Prof. Estado',\n    areaDes: 'Area des.',\n    matricula: 'Matrícula',\n    libro: 'Libro',\n    folio: 'Folio',\n    matTipoRegistro: 'Tipo de matrícula',\n    matFechaRegistro: 'Fecha de registro de matrícula',\n    matCondicionMatricula: 'Condición de matrícula',\n    matFechaExpededTitulo: 'Fecha de expedición de título',\n    tituloDes: 'Título Des.',\n    especialidadDes: 'Especialidad',\n    institucionDes: 'Institución'\n  },\n  cols: {\n    nroDocumento: 'N° Documento',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    localidadDes: 'Localidad',\n    profEstado: 'Prof. Estado',\n    matricula: 'Matrícula',\n    libro: 'Libro',\n    folio: 'Folio',\n    tituloDes: 'Título Des.'\n  },\n  renders: {\n    localidadDes: function localidadDes(data) {\n      var _PRESTADORES$optionsP;\n\n      return (_PRESTADORES$optionsP = PRESTADORES.optionsProvincias.find(function (p) {\n        return p.value === data.localidadDes;\n      })) === null || _PRESTADORES$optionsP === void 0 ? void 0 : _PRESTADORES$optionsP.label;\n    },\n    profEstado: function profEstado(data) {\n      var _PRESTADORES$optionsE;\n\n      return (_PRESTADORES$optionsE = PRESTADORES.optionsEstado.find(function (e) {\n        return e.value === data.profEstado;\n      })) === null || _PRESTADORES$optionsE === void 0 ? void 0 : _PRESTADORES$optionsE.label;\n    },\n    perEstado: function perEstado(data) {\n      var _PRESTADORES$optionsE2;\n\n      return (_PRESTADORES$optionsE2 = PRESTADORES.optionsEstado.find(function (e) {\n        return e.value === data.perEstado;\n      })) === null || _PRESTADORES$optionsE2 === void 0 ? void 0 : _PRESTADORES$optionsE2.label;\n    }\n  },\n  optionsGender: [{\n    value: 'F',\n    label: 'Femenino'\n  }, {\n    value: 'M',\n    label: 'Masculino'\n  }, {\n    value: 'A',\n    label: 'A'\n  }],\n  optionsEstado: [{\n    value: 'alta',\n    label: 'Alta'\n  }, {\n    value: 'baja',\n    label: 'Baja'\n  }],\n  optionsDni: [{\n    value: '1',\n    label: 'DNI'\n  }, {\n    value: '2',\n    label: 'LC'\n  }, {\n    value: '3',\n    label: 'LE'\n  }, {\n    value: '4',\n    label: 'CI'\n  }, {\n    value: '5',\n    label: 'DE'\n  }, {\n    value: '6',\n    label: 'DNIF'\n  }, {\n    value: '7',\n    label: 'DNIM'\n  }],\n  optionsNacionalidad: [{\n    value: '200',\n    label: 'Argentina'\n  }, {\n    value: '202',\n    label: 'Bolivia'\n  }, {\n    value: '203',\n    label: 'Brasil'\n  }, {\n    value: '208',\n    label: 'Chile'\n  }, {\n    value: '221',\n    label: 'Paraguay'\n  }, {\n    value: '225',\n    label: 'Uruguay'\n  }],\n  optionsProvincias: [{\n    value: '1',\n    label: 'CABA'\n  }, {\n    value: '2',\n    label: 'Buenos Aires'\n  }, {\n    value: '3',\n    label: 'Catamarca'\n  }, {\n    value: '4',\n    label: 'Chaco'\n  }, {\n    value: '5',\n    label: 'Chubut'\n  }, {\n    value: '6',\n    label: 'Córdoba'\n  }, {\n    value: '7',\n    label: 'Corrientes'\n  }, {\n    value: '8',\n    label: 'Entre Ríos'\n  }, {\n    value: '9',\n    label: 'Formosa'\n  }, {\n    value: '10',\n    label: 'Jujuy'\n  }, {\n    value: '11',\n    label: 'La Pampa'\n  }, {\n    value: '12',\n    label: 'La Rioja'\n  }, {\n    value: '13',\n    label: 'Mendoza'\n  }, {\n    value: '14',\n    label: 'Misiones'\n  }, {\n    value: '15',\n    label: 'Neuquén'\n  }, {\n    value: '16',\n    label: 'Río Negro'\n  }, {\n    value: '17',\n    label: 'Salta'\n  }, {\n    value: '18',\n    label: 'San Juan'\n  }, {\n    value: '19',\n    label: 'San Luis'\n  }, {\n    value: '20',\n    label: 'Santa Cruz'\n  }, {\n    value: '21',\n    label: 'Santa Fe'\n  }, {\n    value: '22',\n    label: 'Santiago del Estero'\n  }, {\n    value: '23',\n    label: 'Tierra del Fuego'\n  }, {\n    value: '24',\n    label: 'Tucumán'\n  }],\n  messages: {\n    processingFileMessage: 'Procesando archivo de importación',\n    successfulImport: 'Importacion exitosa'\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea eliminar el prestador?'\n};\nvar MAIN_ENTITIES = [SOLICITUDES, AUDITORIAS, CUPONES, LOTES];\nvar ADMIN_ENTITIES = [NOMENCLADOR, DELEGACIONES, USERS, AFILIADOS, PRESTADORES];\nvar ACCOUNTS_ENTITIES = [CUENTAS_TERCEROS, CUENTAS_JUDICIALES];\n\nvar LOADING = function LOADING(entity) {\n  return \"Cargando \".concat(entity);\n};\n\n_c = LOADING;\nvar ERRORS = {\n  unknown: 'Error desconocido',\n  onGet: function onGet(entity) {\n    return \"Error al obtener \".concat(entity);\n  },\n  onCreate: function onCreate(entity) {\n    return \"Error al crear \".concat(entity);\n  },\n  onDelete: function onDelete(entity) {\n    return \"Error al eliminar \".concat(entity);\n  },\n  onUpdate: function onUpdate(entity) {\n    return \"Error al actualizar \".concat(entity);\n  },\n  onSync: function onSync(entity) {\n    return \"Error al sincronizar \".concat(entity);\n  },\n  onDeactivate: function onDeactivate(entity) {\n    return \"Error al desactivar \".concat(entity);\n  },\n  onSetGroups: function onSetGroups(entity) {\n    return \"Error al modificar los roles del usuario\";\n  },\n  onSetCapitulos: function onSetCapitulos(entity) {\n    return \"Error al modificar los cap\\xEDtulos del usuario\";\n  },\n  onSetDelegaciones: function onSetDelegaciones(entity) {\n    return 'Error al modificar las delegaciones del usuario';\n  },\n  onSetDelegacionPrincipal: function onSetDelegacionPrincipal(entity) {\n    return 'Error al modificar la delegación principal del usuario';\n  },\n  inactiveUser: 'Su cuenta está inactiva. Contacte al administrador del sistema: admin@dominio.com',\n  invalidLdap: 'Usuario o contraseña incorrecta. Contacte al administrador de LDAP: mesadeayuda@ipross.rionegro.gov.ar',\n  onAudit: function onAudit(error) {\n    return 'Error al actualizar auditoría';\n  },\n  onUpload: 'Error subiendo archivos',\n  onEditStateCupon: function onEditStateCupon(entity) {\n    return \"Error al actualizar \".concat(entity);\n  },\n  onRemoveCupon: function onRemoveCupon(entity) {\n    return \"Error al desvincular \".concat(entity);\n  },\n  onUpdateNomenclador: function onUpdateNomenclador() {\n    return 'Error al actualizar el nomenclador';\n  },\n  cuitCuil: function cuitCuil() {\n    return 'El cuit-cuil debe tener una longitud de 11 caracteres';\n  },\n  cuitCuilInvalid: function cuitCuilInvalid() {\n    return 'El cuit-cuil no es valido';\n  },\n  onAlreadyAudited: function onAlreadyAudited() {\n    return 'No es posible editar prestaciones que ya fueron auditadas';\n  }\n};\nvar INFO = {\n  onSync: function onSync(entity, count) {\n    return count === 0 ? 'Usuarios sincronizados' : \"Se sincronizaron \".concat(count, \" \").concat(entity);\n  },\n  setGroups: \"Se actualiz\\xF3 correctamente el usuario\",\n  setDelegaciones: \"Se actualiz\\xF3 correctamente el usuario\",\n  setDelegacionPrincipal: \"Se actualiz\\xF3 correctamente el usuario\",\n  //Spinner message\n  working: 'Por favor espere...'\n};\nvar ACTIONS = {\n  crete: function crete(entity) {\n    return \"Crear \".concat(entity);\n  },\n  \"delete\": function _delete(entity) {\n    return \"Eliminar \".concat(entity);\n  },\n  update: function update(entity) {\n    return \"Actualizar \".concat(entity);\n  },\n  \"import\": function _import(entity) {\n    return \"Importar \".concat(entity);\n  }\n};\nvar STEPPER_SOLICITUDES = {\n  add: 'Agregar solicitud',\n  end: 'Se ha cargado exitosamente la solicitud: ',\n  end2: 'Presione el botón \"Cerrar\" para terminar.',\n  steps: [{\n    title: 'Crear solicitud',\n    description: 'Complete los siguientes campos con la información de la solicitud:'\n  }, {\n    title: 'Agregar prestaciones',\n    description: 'Primero, cargue la factura para agregar la prestación. Una vez cargada, complete el formulario:'\n  }, {\n    title: 'Guardar',\n    description: 'Confirme los datos para guardar la solicitud y sus prestaciones:'\n  }, {\n    title: 'Agregar archivos adjuntos adicionales (opcional)',\n    description: 'Puedes agregar otros archivos adjuntos a cada prestación de la solicitud:'\n  }],\n  back: 'Atrás',\n  next: 'Siguiente',\n  finish: 'Finalizar',\n  cancel: 'Cancelar',\n  close: 'Cerrar',\n  save: 'Guardar y terminar',\n  saveAndContinue: 'Guardar y agregar otra',\n  addPrestacion: 'Agregar',\n  onSubmitSolicitud: {\n    title: 'Solicitud creada exitosamente',\n    message: 'Se creó una nueva solicitud',\n    severity: 'success'\n  },\n  onSubmitFactura: {\n    title: 'Factura guardada exitosamente',\n    message: 'Se guardó la factura. Complete los datos de la prestación para continuar. Luego, presione \"siguiente\" para terminar, o guardar y agregar para seguir cargando prestaciones',\n    severity: 'success'\n  },\n  onSubmitPrestacion: function onSubmitPrestacion(count) {\n    return {\n      title: \"\".concat(count, \"\\xBA Prestaci\\xF3n creada\"),\n      message: \"Se cre\\xF3 la \".concat(count, \"\\xBA prestaci\\xF3n\"),\n      severity: 'success'\n    };\n  },\n  onNewPrestacion: function onNewPrestacion(count) {\n    return {\n      title: 'Detalles prestación',\n      message: \"Complete formulario con los detalles de la \".concat(count, \"\\xBA prestaci\\xF3n asociada a la solicitud\"),\n      severity: 'info'\n    };\n  },\n  onNewFactura: function onNewFactura(count) {\n    return {\n      title: 'Cargar factura',\n      message: \"Suba el archivo de la factura correspondiente a la \".concat(count, \"\\xBA prestaci\\xF3n asociada a la solicitud\"),\n      severity: 'info'\n    };\n  },\n  onFinish: {\n    title: 'Proceso finalizado',\n    message: 'Solicitud completa, puede ver un resumen de los datos ingresados a continuación',\n    severity: 'info'\n  }\n};\nvar CONFIRM_DIALOG = {\n  title: 'Confirmar',\n  accept: 'Aceptar',\n  cancel: 'Cancelar'\n};\nvar NAVBAR = {\n  home: 'Inicio',\n  accounts: 'Cuentas Especiales',\n  config: 'Configuración'\n};\nexport { CONFIRM_DIALOG, STEPPER_SOLICITUDES, FORM_BUILDER, USERS, TABLE, TABLE_FILTER, NOMENCLADOR, MAIN_ENTITIES, ADMIN_ENTITIES, APP_NAME, DATE_FORMAT, LOADING, ERRORS, ACTIONS, SOLICITUDES, LOGIN, INFO, PRESTACIONES, CAPITULO, CUENTAS_TERCEROS, CUENTAS_JUDICIALES, AUDITORIAS //Used by generator, dont remove this line #exportconsts\n, CUPONES, LOTES, DELEGACIONES, AFILIADOS, PRESTADORES, ACCOUNTS_ENTITIES, NAVBAR };\n\nvar _c;\n\n$RefreshReg$(_c, \"LOADING\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/labels.ts"],"names":["format","parseISO","APP_NAME","DATE_FORMAT","FORM_BUILDER","required","min","minLength","max","maxLength","pattern","unique","USERS","name","route","page","fields","username","email","first_name","last_name","is_active","groups","delegaciones","delegacionPrincipal","capitulos","filters","usuario","estado","delegacion","optionsEstado","label","value","renders","rowData","map","elem","join","nombre","customActions","sync","tabPermissions","roles","list","create","update","destroy","PRESTACIONES","auditor","cantidad","unidad","montoTotal","capitulo","prestador","nomenclador","coseguroNomenclador","valorIprossNomenclador","valorPrestacion","montoReintegrar","estadoActual","cobertura","fechaPractica","fechaPracticaHasta","periodo","factura","adjuntos","modalidad","discapacitado","cud","cols","codigo","auditorActual","fechaDesde","fechaHasta","optionsEstadoActual","optionsCobertura","optionsDate","categoria","modalidadPrestacion","item","nom","NOMENCLADOR","optionsModalidadPresentacion","find","n","id","matricula","apellido","descripcion","auditoria","adArr","a","archivo","parseFloat","toFixed","solicitud","afiliado","modalImportNomenclador","addPrestacion","importPrestaciones","complejidadPractica","numeroNormaRespaldatoria","fechaNorma","topesCoberturaPeriodo","periodoTope","modalidadPresentacion","valorIpross","unidades","requiereAuditoriaMedica","optionsPeriodoTope","optionsUnidades","fechaVigencia","fechaVigenciaHasta","messages","processingFileMessage","successfulImportNomenclador","deleteMessage","CUENTAS_TERCEROS","cuitCuil","cbu","responsableDeCarga","optionsEstados","numeroAfiliado","c","helpCuit","CUENTAS_JUDICIALES","informacionAdicional","oficioJudicial","CAPITULO","coseguro","descripción","CUPONES","nroSolicitud","nroAfiliado","origenCuenta","fechaDeAlta","montoDeReintegro","lotesIds","numeroDePago","motivoDeRechazo","nroLote","tipo","createLoteForFilteredCupones","modalCreateLote","mainTitle","subTitle","subTitle2","modalSetState","subTitle1","subTitle3","cupon","tipoDeCuenta","cuenta","origen","subTitle4","successCreateCupones","successReopenCupones","loading","LOTES","procesadoPor","optionsTipos","opt","modalResultQnQoFiles","subtitle2Error","subtitle2Success","successChangeStatus","DELEGACIONES","userWithoutDelegacionesOption","AFILIADOS","activo","fechaBaja","cuentaDeTerceros","cuentaJudicial","AUDITORIAS","practica","prestadorName","optionsRechazo","TABLE","labelRowsSelect","labelDisplayedRows","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","actions","searchPlaceholder","exportCSV","emptyDataSourceMessage","TABLE_FILTER","title","LOGIN","passwordRecoveryMessage","passwordRecoveryButton","signIn","logout","password","SOLICITUDES","editPrestaciones","fechaAlta","delegacionNombre","montoTotalAReintegrar","capitulosPrestaciones","judicial","source","optionsType","sources","addPresentacion","modalEditPrestacion","modalCreateCupones","data","errorCreateCupones","tipoForm","errorAlObtenerCuenta","toolTipJudicializada","successEditPrestacion","PRESTADORES","addPrestador","tipoDocumento","nroDocumento","sexoSisa","perEstado","fechaNacimiento","lugarNacimiento","nacionalidad","domicilio","localidadDes","profEstado","areaDes","libro","folio","matTipoRegistro","matFechaRegistro","matCondicionMatricula","matFechaExpededTitulo","tituloDes","especialidadDes","institucionDes","optionsProvincias","p","e","optionsGender","optionsDni","optionsNacionalidad","successfulImport","MAIN_ENTITIES","ADMIN_ENTITIES","ACCOUNTS_ENTITIES","LOADING","entity","ERRORS","unknown","onGet","onCreate","onDelete","onUpdate","onSync","onDeactivate","onSetGroups","onSetCapitulos","onSetDelegaciones","onSetDelegacionPrincipal","inactiveUser","invalidLdap","onAudit","error","onUpload","onEditStateCupon","onRemoveCupon","onUpdateNomenclador","cuitCuilInvalid","onAlreadyAudited","INFO","count","setGroups","setDelegaciones","setDelegacionPrincipal","working","ACTIONS","crete","STEPPER_SOLICITUDES","add","end","end2","steps","description","back","next","finish","cancel","close","save","saveAndContinue","onSubmitSolicitud","message","severity","onSubmitFactura","onSubmitPrestacion","onNewPrestacion","onNewFactura","onFinish","CONFIRM_DIALOG","accept","NAVBAR","home","accounts","config"],"mappings":"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","sourcesContent":["import { format, parseISO } from 'date-fns';\n\nconst APP_NAME = 'Reintegros';\n\nconst DATE_FORMAT = 'dd/MM/yyyy';\nconst FORM_BUILDER = {\n  required: 'Campo requerido ',\n  min: 'El valor debe ser superior a ',\n  minLength: 'Longitud debe ser de al menos ',\n  max: 'El valor debe ser inferior a ',\n  maxLength: 'Longitud debe ser a lo sumo de ',\n  pattern: 'El formato no es válido',\n  default: 'Error desconocido',\n  unique: 'Este campo debe ser único',\n};\n\nconst USERS = {\n  name: 'Usuarios',\n  route: 'api/usuarios',\n  page: 'usuarios',\n  fields: {\n    username: 'Nombre de usuario',\n    email: 'Email',\n    first_name: 'Nombre',\n    last_name: 'Apellido',\n    is_active: 'Estado',\n    groups: 'Roles',\n    delegaciones: 'Delegaciones',\n    delegacionPrincipal: 'Delegacion principal',\n    capitulos: 'Capítulos',\n  },\n  filters: {\n    usuario: 'Usuario',\n    groups: 'Roles',\n    estado: 'Estado',\n    delegacion: 'Delegación',\n  },\n  optionsEstado: [\n    { label: 'Todos', value: '' },\n    { label: 'Activo', value: 'true' },\n    { label: 'Inactivo', value: 'false' },\n  ],\n  renders: {\n    is_active: (rowData) => (rowData ? 'Si' : 'No'),\n    groups: (rowData) => rowData.groups.map((elem) => elem.name).join(', '),\n    delegaciones: (rowData) => rowData.delegaciones.map((elem) => elem.nombre).join(', '),\n    delegacionPrincipal: (rowData) => rowData.delegacionPrincipal?.nombre,\n  },\n  customActions: {\n    sync: 'Sincronizar Usuarios',\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  roles: {\n    list: [],\n    create: [],\n    update: [],\n    destroy: [],\n  },\n};\n\nconst PRESTACIONES = {\n  name: 'Prestaciones',\n  route: 'api/prestaciones',\n  page: 'prestaciones',\n  fields: {\n    auditor: 'Auditor',\n    cantidad: 'Cantidad',\n    unidad: 'Unidad',\n    montoTotal: 'Monto total',\n    capitulo: 'Capítulo',\n    prestador: 'Prestador',\n    nomenclador: 'Prestación',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado de auditoría',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    fechaPracticaHasta: 'Fecha finalizacion práctica',\n    periodo: 'Período',\n    factura: 'Factura',\n    adjuntos: 'Otros adjuntos',\n    modalidad: 'Ámbito',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD',\n  },\n  cols: {\n    auditor: 'Auditor',\n    cantidad: 'Cantidad',\n    montoTotal: 'Monto total',\n    prestador: 'Prestador',\n    codigo: 'Código',\n    nomenclador: 'Prestación',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado de auditoría',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    fechaPracticaHasta: 'Fecha finalizacion práctica',\n    periodo: 'Período',\n    factura: 'Factura',\n    adjuntos: 'Otros adjuntos',\n    modalidad: 'Ámbito',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD',\n  },\n  filters: {\n    auditorActual: 'Auditor',\n    nomenclador: 'Prestación',\n    prestador: 'Prestador',\n    estadoActual: 'Estado de auditoría',\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n  },\n  optionsEstadoActual: [\n    { label: 'En curso', value: 'enCurso' },\n    { label: 'Aceptado', value: 'aceptado' },\n    { label: 'Rechazado', value: 'rechazado' },\n    { label: 'Desvinculado de lote', value: 'desvinculado' },\n    { label: 'Cerrado', value: 'cerrado' },\n  ],\n  optionsCobertura: [\n    { label: '50%', value: '50' },\n    { label: '70%', value: '70' },\n    { label: '80%', value: '80' },\n    { label: '90%', value: '90' },\n  ],\n  optionsDate: [\n    { label: 'Fecha', value: 'date' },\n    { label: 'Rango', value: 'range' },\n  ],\n  renders: {\n    categoria: (rowData) => {\n      if (rowData.categoria?.nombre) {\n        return rowData.categoria?.nombre;\n      }\n      if (rowData.nomenclador?.categoria) {\n        return rowData.nomenclador?.categoria.nombre;\n      }\n      return '';\n    },\n    coseguroNomenclador: (rowData) => {\n      return 100 - rowData.cobertura;\n    },\n    modalidad: (rowData) => {\n      const modalidad =\n        rowData.nomenclador?.modalidadPrestacion || rowData.item?.modalidadPrestacion;\n      const nom = NOMENCLADOR.optionsModalidadPresentacion.find((n) => n.value === modalidad);\n      return nom?.label;\n    },\n    prestador: (rowData) => {\n      if (!rowData.prestador.id) {\n        return '';\n      }\n      return `${rowData.prestador?.matricula} - ${rowData.prestador?.nombre} ${rowData.prestador?.apellido}`;\n    },\n    codigo: (rowData) => rowData.nomenclador?.codigo || rowData.item?.codigo,\n    nomenclador: (rowData) => rowData.nomenclador?.descripcion || rowData.item?.descripcion,\n    estadoActual: (rowData) => {\n      const estado = rowData.auditoria?.estadoActual || rowData.estadoActual || 'enCurso';\n      return PRESTACIONES.optionsEstadoActual.find((elem) => elem.value === estado)?.label;\n    },\n    fechaPractica: (rowData) => format(parseISO(rowData.fechaPractica), DATE_FORMAT),\n    fechaPracticaHasta: (rowData) =>\n      rowData.fechaPracticaHasta ? format(parseISO(rowData.fechaPracticaHasta), DATE_FORMAT) : '-',\n    adjuntos: (rowData) => {\n      if (rowData.adjuntos) {\n        const adArr = rowData.adjuntos.map((a) => a.archivo);\n        return adArr.join(', ');\n      }\n      return '';\n    },\n    montoTotal: (rowData) => {\n      return `$ ${(parseFloat(rowData.valorIprossNomenclador) * rowData.cantidad).toFixed(2)}`;\n    },\n    montoReintegrar: (rowData) => {\n      if (rowData.montoReintegrar) {\n        return `$ ${parseFloat(rowData.montoReintegrar).toFixed(2)}`;\n      }\n\n      return `$ ${(\n        parseFloat(rowData.valorIprossNomenclador) *\n        rowData.cantidad *\n        (rowData.cobertura / 100)\n      ).toFixed(2)}`;\n    },\n    valorPrestacion: (rowData) => {\n      return `$ ${rowData.valorPrestacion}`;\n    },\n    valorIprossNomenclador: (rowData) => {\n      return `$ ${rowData.valorIprossNomenclador}`;\n    },\n    cud: (rowData) => (rowData?.solicitud?.discapacitado ? rowData?.solicitud?.afiliado?.cud : ''),\n    discapacitado: (rowData) => (rowData?.solicitud?.discapacitado ? 'Si' : 'No'),\n  },\n};\nconst NOMENCLADOR = {\n  name: 'Nomenclador',\n  route: 'api/nomenclador',\n  page: 'nomenclador',\n  modalImportNomenclador: 'Vista previa',\n  addPrestacion: 'Agregar prestación',\n  importPrestaciones: 'Sincronizar',\n  fields: {\n    capitulo: 'Capítulo',\n    codigo: 'Código',\n    descripcion: 'Descripción',\n    complejidadPractica: 'Nivel de complejidad',\n    numeroNormaRespaldatoria: 'Nº Norma respaldatoria',\n    fechaNorma: 'Fecha de la norma',\n    topesCoberturaPeriodo: 'Topes de cobertura por período',\n    periodoTope: 'Período del tope',\n    modalidadPresentacion: 'Ámbito',\n    valorIpross: 'Valor IPROSS',\n    unidades: 'Unidad',\n    requiereAuditoriaMedica: '¿Requiere auditoría médica?',\n  },\n  cols: {\n    codigo: 'Código',\n    capitulo: 'Capítulo',\n    modalidadPresentacion: 'Ámbito',\n    valorIpross: 'Valor IPROSS',\n    descripcion: 'Descripción',\n    complejidadPractica: 'Escala de Precios',\n    numeroNormaRespaldatoria: 'Resolución',\n    fechaNorma: 'Fecha Resolución',\n    topesCoberturaPeriodo: 'Topes',\n    periodoTope: 'Período',\n    requiereAuditoriaMedica: 'Aud. Med.',\n  },\n  filters: {\n    descripcion: 'Descripción',\n    modalidad: 'Ámbito',\n    capitulo: 'Capítulo',\n    requiereAuditoriaMedica: 'Aud. Méd.',\n  },\n  optionsModalidadPresentacion: [\n    { label: 'Ambulatoria', value: 'ambulatorio' },\n    { label: 'Internación', value: 'internacion' },\n  ],\n  optionsPeriodoTope: [\n    { label: 'Por única vez', value: 'porunicavez' },\n    { label: 'Mensual', value: 'mensual' },\n    { label: 'Bimenstral', value: 'bimestral' },\n    { label: 'Trimestral', value: 'trimestral' },\n    { label: 'Cuatrimestral', value: 'cuatrimestral' },\n    { label: 'Semestral', value: 'semestral' },\n    { label: 'Anual', value: 'anual' },\n  ],\n  optionsUnidades: [\n    { label: 'km', value: 'km' },\n    { label: 'horas', value: 'hs' },\n    { label: 'sesiones', value: 'sesiones' },\n    { label: 'unidades', value: 'unidades' },\n  ],\n  renders: {\n    capitulo: (rowData) => `${rowData.capitulo.capitulo}-${rowData.capitulo.descripcion}`,\n    fechaVigencia: (rowData) => format(parseISO(rowData.fechaVigencia), DATE_FORMAT),\n    fechaVigenciaHasta: (rowData) =>\n      rowData.fechaVigenciaHasta ? format(parseISO(rowData.fechaVigencia), DATE_FORMAT) : '',\n    modalidadPresentacion: (rowData) =>\n      NOMENCLADOR.optionsModalidadPresentacion.find(\n        (elem) => elem.value === rowData.modalidadPrestacion,\n      )?.label,\n    periodoTope: (rowData) =>\n      NOMENCLADOR.optionsPeriodoTope.find((elem) => elem.value === rowData.periodoTope)?.label,\n    estado: (rowData) => (rowData.estado === 'activo' ? 'Activo' : 'Inactivo'),\n    requiereAuditoriaMedica: (rowData) => (rowData.requiereAuditoriaMedica === true ? 'Si' : 'No'),\n  },\n  messages: {\n    processingFileMessage: 'Procesando archivo de importación',\n    successfulImportNomenclador: 'Importación exitosa',\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea eliminar el nomenclador?',\n};\n\nconst CUENTAS_TERCEROS = {\n  name: 'Cuentas de terceros',\n  route: 'api/cuenta-de-terceros',\n  page: 'cuentas_terceros',\n  fields: {\n    afiliado: 'Afiliado',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    cuitCuil: 'CUIT / CUIL',\n    cbu: 'CBU',\n    responsableDeCarga: 'Responsable de carga',\n    delegacion: 'Delegación',\n    adjuntos: 'Archivos adjuntos',\n    estado: 'Estado',\n  },\n  filters: {\n    delegacion: 'Delegación',\n  },\n  optionsEstados: [\n    { value: 'inactiva', label: 'Inactiva' },\n    { value: 'pendiente', label: 'Pendiente' },\n    { value: 'aprobada', label: 'Aprobada' },\n    { value: 'rechazada', label: 'Rechazada' },\n  ],\n  renders: {\n    responsableDeCarga: (rowData) =>\n      rowData.responsableDeCarga.first_name + ' ' + rowData.responsableDeCarga.last_name,\n    delegacion: (rowData) => rowData.delegacion?.nombre,\n    adjuntos: (rowData) => rowData.adjuntos.archivo,\n    afiliado: (rowData) =>\n      `${rowData.afiliado?.numeroAfiliado} | ${rowData.afiliado?.nombre}, ${rowData.afiliado?.apellido}`,\n    estado: (rowData) =>\n      CUENTAS_TERCEROS.optionsEstados.find((c) => c.value === rowData.estado)?.label,\n  },\n  tabPermissions: ['Administrador', 'Reintegro', 'Delegado', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea desactivar esta cuenta de terceros?',\n  helpCuit: 'Ingresar número sin guiones ni puntos',\n};\n\nconst CUENTAS_JUDICIALES = {\n  name: 'Cuentas judiciales',\n  route: 'api/cuenta-judicial',\n  page: 'cuentas_judiciales',\n  fields: {\n    afiliado: 'Afiliado',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    responsableDeCarga: 'Responsable de carga',\n    delegacion: 'Delegación',\n    informacionAdicional: 'Información adicional',\n    oficioJudicial: 'Oficio judicial',\n    cuitCuil: 'CUIT / CUIL',\n    cbu: 'CBU',\n    estado: 'Estado',\n  },\n  filters: {\n    delegacion: 'Delegación',\n  },\n  optionsEstados: [\n    { value: 'inactiva', label: 'Inactiva' },\n    { value: 'activa', label: 'Activa' },\n  ],\n  renders: {\n    responsableDeCarga: (rowData) =>\n      rowData.responsableDeCarga.first_name + ' ' + rowData.responsableDeCarga.last_name,\n    delegacion: (rowData) => rowData.delegacion?.nombre,\n    afiliado: (rowData) =>\n      `${rowData.afiliado?.numeroAfiliado} | ${rowData.afiliado?.nombre}, ${rowData.afiliado?.apellido}`,\n    estado: (rowData) =>\n      CUENTAS_JUDICIALES.optionsEstados.find((c) => c.value === rowData.estado)?.label,\n  },\n  tabPermissions: ['Administrador', 'Delegado', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea desactivar esta cuenta judicial?',\n  helpCuit: 'Ingresar número sin guiones ni puntos',\n};\n\nconst CAPITULO = {\n  name: 'Capitulo',\n  route: 'api/capitulos',\n  page: 'capitulo',\n  fields: {\n    coseguro: 'Coseguro',\n    capitulo: 'Capítulo',\n\n    descripción: 'Descripción',\n  },\n\n  renders: {},\n};\n//Used by generator, dont remove this line #entitiesobject\nconst CUPONES = {\n  name: 'Solicitudes Autorizadas',\n  page: 'cupones',\n  route: 'api/cupon',\n  fields: {\n    id: 'N° Autorización',\n    nroSolicitud: 'N° Solicitud',\n    nroAfiliado: 'N° Afiliado',\n    origenCuenta: 'Cuenta',\n    fechaDeAlta: 'Fecha de alta',\n    delegacion: 'Delegación',\n    // plazo: 'Plazo',\n    montoDeReintegro: 'Monto de reintegro',\n    lotesIds: 'N° Lote',\n    estado: 'Estado',\n    capitulos: 'Capítulos',\n    numeroDePago: 'Número de pago',\n    motivoDeRechazo: 'Motivo de rechazo',\n  },\n  filters: {\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n    capitulo: 'Capítulo',\n    nroLote: 'N° Lote',\n    delegacion: 'Delegación',\n    estado: 'Estado',\n    tipo: 'Tipo',\n  },\n  optionsEstado: [\n    {\n      label: 'Todos',\n      value: '',\n    },\n    {\n      label: 'Abierto',\n      value: 'abierto',\n    },\n    {\n      label: 'En proceso',\n      value: 'enProceso',\n    },\n    {\n      label: 'Pago realizado',\n      value: 'pagoRealizado',\n    },\n    {\n      label: 'Pago rechazado',\n      value: 'pagoRechazado',\n    },\n    {\n      label: 'Rechazo parcial',\n      value: 'rechazoParcial',\n    },\n    {\n      label: 'Cerrado',\n      value: 'cerrado',\n    },\n    {\n      label: 'Desvinculado de lote',\n      value: 'desvinculado',\n    },\n  ],\n  renders: {\n    fechaDeAlta: (rowData) => format(parseISO(rowData.fechaDeAlta), DATE_FORMAT),\n    montoDeReintegro: (rowData) => `$ ${rowData.montoDeReintegro}`,\n  },\n  createLoteForFilteredCupones: 'Crear lote para todos',\n  modalCreateLote: {\n    mainTitle: 'Vista previa de creación de lotes',\n    subTitle: 'Resultado del análisis de las autorizaciones:',\n    subTitle2:\n      'Solo se crearán los lotes, si todas las autorizaciones seleccionadas son correctas.',\n  },\n  modalSetState: {\n    mainTitle: 'Modificar estado de autorización',\n    subTitle1: '¿Está seguro que desea modificar el estado de la autorización?',\n    subTitle2:\n      'Si se modifica el estado a \"abierto\" la autorización podrá formar parte de un nuevo lote.',\n    subTitle3: (cupon) => {\n      var tipoDeCuenta = '';\n      switch (cupon.solicitud.cuenta?.origen) {\n        case 'cuentaAfiliado':\n          tipoDeCuenta = 'cuenta de afiliado';\n          break;\n        case 'cuentaDeTerceros':\n          tipoDeCuenta = 'cuenta de terceros';\n          break;\n        case 'cuentaJudicial':\n          tipoDeCuenta = 'cuenta judicial';\n          break;\n        default:\n          break;\n      }\n      return `Se volverán a copiar los datos para el pago desde la ${tipoDeCuenta}; puede modificar los datos de dicha cuenta antes de modificar el estado de la autorización.`;\n    },\n    subTitle4: 'Esta acción no se puede deshacer.',\n  },\n  messages: {\n    successCreateCupones: 'Proceso finalizado con éxito',\n    successReopenCupones: 'Actualizacion exitosa del estado de la solicitud de autorización',\n    loading: 'Procesando las autorizaciones',\n    deleteMessage: '¿Seguro que desea remover la solicitud de autorización?',\n  },\n  tabPermissions: [\n    'Administrador',\n    'AuditoriaAdministrativa',\n    'AuditoriaCentral',\n    'AuditoriaMedica',\n    'Contaduria',\n    'Delegado',\n    'Presidencia',\n    'Reintegro',\n    'SoloLectura',\n  ],\n};\n\nconst LOTES = {\n  name: 'Lotes',\n  page: 'lotes',\n  route: 'api/lote',\n  fields: {\n    id: 'N° Lote',\n    fechaDeAlta: 'Fecha de alta',\n    tipo: 'Tipo',\n    montoTotal: 'Monto total',\n    estado: 'Estado',\n    procesadoPor: 'Procesado por',\n  },\n  filters: {\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n    tipo: 'Tipo',\n    estado: 'Estado',\n    delegacion: 'Delegación',\n  },\n  optionsTipos: [\n    { label: 'No judicial', value: 'noJudicial' },\n    { label: 'Judicial', value: 'judicial' },\n  ],\n  optionsEstados: [\n    {\n      label: 'No procesado',\n      value: 'noProcesado',\n    },\n    {\n      label: 'Procesado',\n      value: 'procesadoOk',\n    },\n    {\n      label: 'Procesado con error',\n      value: 'procesadoConError',\n    },\n    {\n      label: 'Eliminado',\n      value: 'eliminado',\n    },\n  ],\n  renders: {\n    fechaDeAlta: (rowData) => format(parseISO(rowData.fechaDeAlta), DATE_FORMAT),\n    tipo: (rowData) => (rowData.tipo === 'noJudicial' ? 'No judicial' : 'Judicial'),\n    montoTotal: (rowData) => (rowData.montoTotal ? `$ ${rowData.montoTotal}` : ''),\n    procesadoPor: (rowData) => `${rowData.procesadoPor}`,\n    estado: (rowData) => LOTES.optionsEstados.find((opt) => opt.value === rowData.estado)?.label,\n  },\n  modalResultQnQoFiles: {\n    subTitle: 'Resultado del análisis de los archivos:',\n    subtitle2Error:\n      'No se pueden procesar las autorizaciones. Se deben corregir los errores y volver a cargar los archivos para el lote.',\n    subtitle2Success: 'Se procesaron exitosamente los archivos.',\n  },\n  modalSetState: {\n    mainTitle: 'Modificar estado de lote judicial',\n    subTitle1: '¿Está seguro que desea modificar el estado del lote judicial?',\n  },\n  tabPermissions: ['Administrador', 'Tesoreria', 'Contaduria', 'Presidencia', 'SoloLectura'],\n  deleteMessage: '¿Seguro que desea elimiar el lote?',\n  messages: {\n    successChangeStatus: 'Actualizacion exitosa del estado del lote',\n  },\n};\n\nconst DELEGACIONES = {\n  name: 'Delegaciones',\n  page: 'delegaciones',\n  route: 'api/delegaciones',\n  fields: {\n    id: 'N° Delegación',\n    nombre: 'Nombre',\n  },\n  renders: {\n    is_active: (rowData) => (rowData ? 'Si' : 'No'),\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  userWithoutDelegacionesOption: 'El usuario no tiene delegaciones asignadas',\n};\nconst AFILIADOS = {\n  name: 'Afiliados',\n  page: 'afiliados',\n  route: 'api/afiliados',\n  fields: {\n    numeroAfiliado: 'N° Afiliado',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    cuitCuil: 'CUIT / CUIL',\n    cbu: 'CBU',\n    activo: 'Activo',\n    fechaBaja: 'Fecha de baja',\n    cuentaDeTerceros: 'Cuenta de terceros',\n    cuentaJudicial: 'Cuenta judicial',\n  },\n  renders: {\n    activo: (rowData) => (rowData.activo ? 'Si' : 'No'),\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n};\n\nconst AUDITORIAS = {\n  name: 'Auditorias',\n  page: 'auditorias',\n  route: 'api/auditorias',\n  fields: {\n    nroSolicitud: 'N° Solicitud',\n    practica: 'Práctica',\n    fechaPractica: 'Fecha de práctica',\n    prestadorName: 'Prestador',\n    estadoActual: 'Estado',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD',\n    auditor: 'Auditor',\n  },\n  optionsRechazo: [\n    { value: 'faltaDocumentacion', label: 'Falta documentación' },\n    {\n      value: 'prestacionNoEstaEnMenuPrestacional',\n      label: 'Prestación no está en menú prestacional',\n    },\n    { value: 'noTieneAutorizacionPrevia', label: 'No tiene autorización previa' },\n    {\n      value: 'noCorrespondeCoberturaPorReintegro',\n      label: 'No corresponde cobertura por reintegro',\n    },\n  ],\n  renders: {\n    // 'solicitud.id': (rowData) =>\n    //   `${'0'.repeat(\n    //     7 - rowData.solicitud.id?.toString().length,\n    //   )}${rowData.solicitud.id?.toString()}`,\n    fechaPractica: (rowData) => format(parseISO(rowData.fechaPractica), DATE_FORMAT),\n    prestador: (rowData) =>\n      `${rowData.prestador?.matricula} - ${rowData.prestador?.nombre} ${rowData.prestador?.apellido}`,\n    // practica: (rowData) => {\n    //   const prac = `${rowData.nomenclador.codigo} - ${rowData.nomenclador.descripcion} - ${rowData.nomenclador.capitulo.descripcion}`\n    //   if (prac.length > 50) {\n    //     return prac.substring(0, 50) + '...';\n    //   }\n    //   return prac\n    // },\n    estadoActual: (rowData) => {\n      return PRESTACIONES.optionsEstadoActual.find((opt) => opt.value === rowData.estadoActual)\n        ?.label;\n    },\n  },\n  tabPermissions: [\n    'Administrador',\n    'AuditoriaAdministrativa',\n    'AuditoriaCentral',\n    'AuditoriaMedica',\n    'Presidencia',\n    'SoloLectura',\n  ],\n};\n\nconst TABLE = {\n  labelRowsSelect: 'filas',\n  labelDisplayedRows: '{from}-{to} de {count}',\n  labelRowsPerPage: 'Filas por página',\n  firstAriaLabel: 'Primera página',\n  firstTooltip: 'Primera página',\n  previousAriaLabel: 'Anterior',\n  previousTooltip: 'Anterior',\n  nextAriaLabel: 'Siguiente',\n  nextTooltip: 'Siguiente',\n  lastAriaLabel: 'Última página',\n  lastTooltip: 'Última página',\n  actions: '',\n  searchPlaceholder: 'Buscar',\n  exportCSV: 'Exportar csv',\n  emptyDataSourceMessage: 'No se encontraron registros',\n};\nconst TABLE_FILTER = {\n  title: 'Filtro',\n};\nconst LOGIN = {\n  passwordRecoveryMessage: 'Contacte al administrador de LDAP: mesadeayuda@ipross.rionegro.gov.ar',\n  passwordRecoveryButton: 'Olvidé mi contraseña',\n  signIn: 'Ingresar',\n  logout: 'Salir',\n  password: 'Contraseña',\n};\nconst SOLICITUDES = {\n  name: 'Solicitudes',\n  route: 'api/solicitudes',\n  page: 'solicitudes',\n  editPrestaciones: 'Editar',\n  fields: {\n    id: 'N° Solicitud',\n    estadoActual: 'Estado',\n    fechaAlta: 'Fecha de alta',\n    delegacionNombre: 'Delegación',\n    numeroAfiliado: 'Afiliado',\n    tipo: 'Solicitud judicializada',\n    montoTotal: 'Monto total',\n    montoTotalAReintegrar: 'Monto total a reintegrar',\n    capitulosPrestaciones: 'Capítulos',\n    'factura.id': 'Factura',\n    discapacitado: '¿Posee CUD?',\n    cud: 'CUD',\n  },\n  filters: {\n    afiliado: 'Afiliado',\n    delegacion: 'Delegación',\n    estadoActual: 'Estado actual',\n    fechaDesde: 'Fecha desde',\n    fechaHasta: 'Fecha hasta',\n    judicial: 'Solicitud judicializada',\n    source: 'Origen',\n  },\n  renders: {\n    estadoActual: (rowData) =>\n      SOLICITUDES.optionsEstadoActual.find((elem) => elem.value === rowData.estadoActual)?.label,\n    fechaAlta: (rowData) => format(parseISO(rowData.fechaAlta), DATE_FORMAT),\n    'afiliado.numeroAfiliado': (rowData) =>\n      `${rowData.afiliado?.numeroAfiliado} | ${rowData.afiliado?.nombre}, ${rowData.afiliado?.apellido}`,\n    tipo: (rowData) => (rowData.tipo === 'noJudicial' ? 'No' : 'Si'),\n    montoTotal: (rowData) => {\n      return `$ ${rowData?.montoTotal}`;\n    },\n    montoTotalAReintegrar: (rowData) => {\n      return `$ ${rowData.montoTotalAReintegrar}`;\n    },\n    // capitulosPrestaciones: (rowData) => rowData.capitulosPrestaciones.join('; '),\n    factura: (rowData) => rowData.factura?.archivo,\n  },\n  optionsEstadoActual: [\n    { label: 'Sin pagos realizados', value: 'sinPagos' },\n    { label: 'Pago parcial', value: 'pagoParcial' },\n    { label: 'Pago total', value: 'pagoTotal' },\n  ],\n  optionsType: [\n    { label: 'Si', value: 'judicial' },\n    { label: 'No', value: 'noJudicial' },\n  ],\n  sources: [\n    { label: 'Interna', value: 'interna' },\n    { label: 'VEM', value: 'vem' },\n    { label: 'Bajo Presupuesto', value: 'bajoPresupuesto' },\n  ],\n  customActions: {\n    addPresentacion: 'Agregar prestacion',\n  },\n  modalEditPrestacion: {\n    mainTitle: 'Editar prestacion',\n  },\n  modalCreateCupones: {\n    mainTitle: 'Vista previa de creacion de autorizaciones',\n    subTitle: 'Resultado del análisis de las solicitudes',\n    subTitle2: (data) =>\n      `Se crearan ${data} autorizaciones. Las siguientes solicitudes no cumplen con las condiciones para que se puedan crear las solicitudes de autorización:`,\n  },\n  messages: {\n    errorCreateCupones: `No se creó ninguna solicitud de autorización`,\n    successCreateCupones: (data) => `Se crearon exitosamente ${data} solicitudes de autorización`,\n    loading: 'Procesando las solicitudes de autorización',\n    tipoForm: 'Tipos de cuentas disponibles',\n    errorAlObtenerCuenta: 'Error al intentar obtener la cuenta',\n    toolTipJudicializada: 'Definir si la solicitud se encuentra judicializada',\n    successEditPrestacion: 'Prestacion editada correctamente',\n  },\n  tabPermissions: [\n    'Administrador',\n    'AuditoriaAdministrativa',\n    'AuditoriaCentral',\n    'AuditoriaMedica',\n    'Contaduria',\n    'Delegado',\n    'Presidencia',\n    'Reintegro',\n    'SoloLectura',\n    'Tesoreria',\n  ],\n};\n\nconst PRESTADORES = {\n  name: 'Prestadores',\n  route: 'api/prestadores',\n  page: 'prestadores',\n  addPrestador: 'Agregar Prestador',\n  import: 'Importar prestadores',\n  fields: {\n    tipoDocumento: 'Tipo de documento',\n    nroDocumento: 'N° Documento',\n    apellido: 'Apellido',\n    nombre: 'Nombre',\n    sexoSisa: 'Sexo',\n    perEstado: 'Per. Estado',\n    fechaNacimiento: 'Fecha de nacimiento',\n    lugarNacimiento: 'Lugar de nacimiento',\n    nacionalidad: 'Nacionalidad',\n    domicilio: 'Domicilio',\n    localidadDes: 'Provincia',\n    profEstado: 'Prof. Estado',\n    areaDes: 'Area des.',\n    matricula: 'Matrícula',\n    libro: 'Libro',\n    folio: 'Folio',\n    matTipoRegistro: 'Tipo de matrícula',\n    matFechaRegistro: 'Fecha de registro de matrícula',\n    matCondicionMatricula: 'Condición de matrícula',\n    matFechaExpededTitulo: 'Fecha de expedición de título',\n    tituloDes: 'Título Des.',\n    especialidadDes: 'Especialidad',\n    institucionDes: 'Institución',\n  },\n  cols: {\n    nroDocumento: 'N° Documento',\n    nombre: 'Nombre',\n    apellido: 'Apellido',\n    localidadDes: 'Localidad',\n    profEstado: 'Prof. Estado',\n    matricula: 'Matrícula',\n    libro: 'Libro',\n    folio: 'Folio',\n    tituloDes: 'Título Des.',\n  },\n  renders: {\n    localidadDes: (data) => {\n      return PRESTADORES.optionsProvincias.find((p) => p.value === data.localidadDes)?.label;\n    },\n    profEstado: (data) => {\n      return PRESTADORES.optionsEstado.find((e) => e.value === data.profEstado)?.label;\n    },\n    perEstado: (data) => {\n      return PRESTADORES.optionsEstado.find((e) => e.value === data.perEstado)?.label;\n    },\n  },\n  optionsGender: [\n    { value: 'F', label: 'Femenino' },\n    { value: 'M', label: 'Masculino' },\n    { value: 'A', label: 'A' },\n  ],\n  optionsEstado: [\n    { value: 'alta', label: 'Alta' },\n    { value: 'baja', label: 'Baja' },\n  ],\n  optionsDni: [\n    { value: '1', label: 'DNI' },\n    { value: '2', label: 'LC' },\n    { value: '3', label: 'LE' },\n    { value: '4', label: 'CI' },\n    { value: '5', label: 'DE' },\n    { value: '6', label: 'DNIF' },\n    { value: '7', label: 'DNIM' },\n  ],\n  optionsNacionalidad: [\n    { value: '200', label: 'Argentina' },\n    { value: '202', label: 'Bolivia' },\n    { value: '203', label: 'Brasil' },\n    { value: '208', label: 'Chile' },\n    { value: '221', label: 'Paraguay' },\n    { value: '225', label: 'Uruguay' },\n  ],\n  optionsProvincias: [\n    { value: '1', label: 'CABA' },\n    { value: '2', label: 'Buenos Aires' },\n    { value: '3', label: 'Catamarca' },\n    { value: '4', label: 'Chaco' },\n    { value: '5', label: 'Chubut' },\n    { value: '6', label: 'Córdoba' },\n    { value: '7', label: 'Corrientes' },\n    { value: '8', label: 'Entre Ríos' },\n    { value: '9', label: 'Formosa' },\n    { value: '10', label: 'Jujuy' },\n    { value: '11', label: 'La Pampa' },\n    { value: '12', label: 'La Rioja' },\n    { value: '13', label: 'Mendoza' },\n    { value: '14', label: 'Misiones' },\n    { value: '15', label: 'Neuquén' },\n    { value: '16', label: 'Río Negro' },\n    { value: '17', label: 'Salta' },\n    { value: '18', label: 'San Juan' },\n    { value: '19', label: 'San Luis' },\n    { value: '20', label: 'Santa Cruz' },\n    { value: '21', label: 'Santa Fe' },\n    { value: '22', label: 'Santiago del Estero' },\n    { value: '23', label: 'Tierra del Fuego' },\n    { value: '24', label: 'Tucumán' },\n  ],\n  messages: {\n    processingFileMessage: 'Procesando archivo de importación',\n    successfulImport: 'Importacion exitosa',\n  },\n  tabPermissions: ['Administrador', 'Presidencia'],\n  deleteMessage: '¿Seguro que desea eliminar el prestador?',\n};\n\nconst MAIN_ENTITIES = [SOLICITUDES, AUDITORIAS, CUPONES, LOTES];\n\nconst ADMIN_ENTITIES = [NOMENCLADOR, DELEGACIONES, USERS, AFILIADOS, PRESTADORES];\n\nconst ACCOUNTS_ENTITIES = [CUENTAS_TERCEROS, CUENTAS_JUDICIALES];\n\nconst LOADING = (entity) => `Cargando ${entity}`;\n\nconst ERRORS = {\n  unknown: 'Error desconocido',\n  onGet: (entity) => `Error al obtener ${entity}`,\n  onCreate: (entity) => `Error al crear ${entity}`,\n  onDelete: (entity) => `Error al eliminar ${entity}`,\n  onUpdate: (entity) => `Error al actualizar ${entity}`,\n  onSync: (entity) => `Error al sincronizar ${entity}`,\n  onDeactivate: (entity) => `Error al desactivar ${entity}`,\n  onSetGroups: (entity) => `Error al modificar los roles del usuario`,\n  onSetCapitulos: (entity) => `Error al modificar los capítulos del usuario`,\n  onSetDelegaciones: (entity) => 'Error al modificar las delegaciones del usuario',\n  onSetDelegacionPrincipal: (entity) => 'Error al modificar la delegación principal del usuario',\n  inactiveUser: 'Su cuenta está inactiva. Contacte al administrador del sistema: admin@dominio.com',\n  invalidLdap:\n    'Usuario o contraseña incorrecta. Contacte al administrador de LDAP: mesadeayuda@ipross.rionegro.gov.ar',\n  onAudit: (error) => 'Error al actualizar auditoría',\n  onUpload: 'Error subiendo archivos',\n  onEditStateCupon: (entity) => `Error al actualizar ${entity}`,\n  onRemoveCupon: (entity) => `Error al desvincular ${entity}`,\n  onUpdateNomenclador: () => 'Error al actualizar el nomenclador',\n  cuitCuil: () => 'El cuit-cuil debe tener una longitud de 11 caracteres',\n  cuitCuilInvalid: () => 'El cuit-cuil no es valido',\n  onAlreadyAudited: () => 'No es posible editar prestaciones que ya fueron auditadas',\n};\n\nconst INFO = {\n  onSync: (entity, count) => {\n    return count === 0 ? 'Usuarios sincronizados' : `Se sincronizaron ${count} ${entity}`;\n  },\n  setGroups: `Se actualizó correctamente el usuario`,\n  setDelegaciones: `Se actualizó correctamente el usuario`,\n  setDelegacionPrincipal: `Se actualizó correctamente el usuario`,\n  //Spinner message\n  working: 'Por favor espere...',\n};\n\nconst ACTIONS = {\n  crete: (entity) => `Crear ${entity}`,\n  delete: (entity) => `Eliminar ${entity}`,\n  update: (entity) => `Actualizar ${entity}`,\n  import: (entity) => `Importar ${entity}`,\n};\n\nconst STEPPER_SOLICITUDES = {\n  add: 'Agregar solicitud',\n  end: 'Se ha cargado exitosamente la solicitud: ',\n  end2: 'Presione el botón \"Cerrar\" para terminar.',\n  steps: [\n    {\n      title: 'Crear solicitud',\n      description: 'Complete los siguientes campos con la información de la solicitud:',\n    },\n    {\n      title: 'Agregar prestaciones',\n      description:\n        'Primero, cargue la factura para agregar la prestación. Una vez cargada, complete el formulario:',\n    },\n\n    {\n      title: 'Guardar',\n      description: 'Confirme los datos para guardar la solicitud y sus prestaciones:',\n    },\n    {\n      title: 'Agregar archivos adjuntos adicionales (opcional)',\n      description: 'Puedes agregar otros archivos adjuntos a cada prestación de la solicitud:',\n    },\n  ],\n  back: 'Atrás',\n  next: 'Siguiente',\n  finish: 'Finalizar',\n  cancel: 'Cancelar',\n  close: 'Cerrar',\n  save: 'Guardar y terminar',\n  saveAndContinue: 'Guardar y agregar otra',\n  addPrestacion: 'Agregar',\n  onSubmitSolicitud: {\n    title: 'Solicitud creada exitosamente',\n    message: 'Se creó una nueva solicitud',\n    severity: 'success',\n  },\n  onSubmitFactura: {\n    title: 'Factura guardada exitosamente',\n    message:\n      'Se guardó la factura. Complete los datos de la prestación para continuar. Luego, presione \"siguiente\" para terminar, o guardar y agregar para seguir cargando prestaciones',\n    severity: 'success',\n  },\n  onSubmitPrestacion: (count) => ({\n    title: `${count}º Prestación creada`,\n    message: `Se creó la ${count}º prestación`,\n    severity: 'success',\n  }),\n  onNewPrestacion: (count) => ({\n    title: 'Detalles prestación',\n    message: `Complete formulario con los detalles de la ${count}º prestación asociada a la solicitud`,\n    severity: 'info',\n  }),\n  onNewFactura: (count) => ({\n    title: 'Cargar factura',\n    message: `Suba el archivo de la factura correspondiente a la ${count}º prestación asociada a la solicitud`,\n    severity: 'info',\n  }),\n  onFinish: {\n    title: 'Proceso finalizado',\n    message: 'Solicitud completa, puede ver un resumen de los datos ingresados a continuación',\n    severity: 'info',\n  },\n};\n\nconst CONFIRM_DIALOG = {\n  title: 'Confirmar',\n  accept: 'Aceptar',\n  cancel: 'Cancelar',\n};\nconst NAVBAR = {\n  home: 'Inicio',\n  accounts: 'Cuentas Especiales',\n  config: 'Configuración',\n};\n\nexport {\n  CONFIRM_DIALOG,\n  STEPPER_SOLICITUDES,\n  FORM_BUILDER,\n  USERS,\n  TABLE,\n  TABLE_FILTER,\n  NOMENCLADOR,\n  MAIN_ENTITIES,\n  ADMIN_ENTITIES,\n  APP_NAME,\n  DATE_FORMAT,\n  LOADING,\n  ERRORS,\n  ACTIONS,\n  SOLICITUDES,\n  LOGIN,\n  INFO,\n  PRESTACIONES,\n  CAPITULO,\n  CUENTAS_TERCEROS,\n  CUENTAS_JUDICIALES,\n  AUDITORIAS,\n  //Used by generator, dont remove this line #exportconsts\n  CUPONES,\n  LOTES,\n  DELEGACIONES,\n  AFILIADOS,\n  PRESTADORES,\n  ACCOUNTS_ENTITIES,\n  NAVBAR,\n};\n"]},"metadata":{},"sourceType":"module"}