{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react'; //TODO esta es una solucion para que la tabla renderice los iconos de material https://github.com/mbrn/material-table no es muy elgente, deberiamos revisarla\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport { forwardRef } from 'react';\nimport ArrowDownward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport Sort from '@material-ui/icons/Sort';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { IconButton, makeStyles } from '@material-ui/core';\nimport { TABLE } from '../../labels';\nimport ActionBar from './ActionBar';\nconst useStyles = makeStyles(theme => ({\n  tableHeaderActions: {\n    margin: 0,\n    '&>.MuiBox-root': {\n      margin: 0\n    },\n    '&>button': {\n      backgroundColor: '#616161',\n      color: '#E0E0E0',\n      textTransform: 'initial'\n    }\n  }\n}));\n\nconst Table = props => {\n  var _props$pageSize, _props$paging, _props$pagination;\n\n  const {\n    0: windowLoaded,\n    1: setWindowLoaded\n  } = useState(false);\n  const classes = useStyles();\n  const tableIcons = {\n    Add: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(AddBox, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Check: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Check, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Clear: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Clear, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Delete: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(DeleteOutline, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    DetailPanel: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ChevronRight, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Edit: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Edit, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Export: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(SaveAlt, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Filter: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(FilterList, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    FirstPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(FirstPage, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    LastPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(LastPage, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    NextPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ChevronRight, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    PreviousPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ChevronLeft, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    ResetSearch: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Clear, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Search: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Search, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    SortArrow: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ArrowDownward, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Remove, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    ViewColumn: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ViewColumn, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })))\n  };\n\n  const op = _objectSpread(_objectSpread({}, props.options), {}, {\n    pageSize: (_props$pageSize = props.pageSize) !== null && _props$pageSize !== void 0 ? _props$pageSize : 20,\n    pageSizeOptions: [10, 20, 50],\n    paging: (_props$paging = props.paging) !== null && _props$paging !== void 0 ? _props$paging : true,\n    emptyRowsWhenPaging: false,\n    showTextRowsSelected: false,\n    grouping: false,\n    rowStyle: rowData => ({\n      whiteSpace: 'nowrap',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      backgroundColor: rowData.active === false ? 'rgba(255,0,0,0.2)' : '#EEE'\n    }),\n    headerStyle: {\n      fontWeight: 'bold',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      flexDirection: 'column'\n    }\n  });\n\n  if (props.totalCount > 50) {\n    op.pageSizeOptions.push(props.totalCount);\n  }\n\n  useEffect(() => {\n    setWindowLoaded(true);\n  });\n  return windowLoaded ? /*#__PURE__*/_jsx(MaterialTable, {\n    icons: tableIcons,\n    columns: props.columns,\n    data: props.data,\n    totalCount: props.totalCount,\n    page: (_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : _props$pagination.page,\n    title: /*#__PURE__*/_jsxs(_Fragment, {\n      children: [\"Listado de \", props.title, props.onFilterClick && /*#__PURE__*/_jsx(IconButton, {\n        onClick: props.onFilterClick,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(Sort, {})\n      })]\n    }),\n    options: op,\n    localization: {\n      pagination: {\n        labelRowsSelect: TABLE.labelRowsSelect,\n        labelDisplayedRows: TABLE.labelDisplayedRows,\n        labelRowsPerPage: TABLE.labelRowsPerPage,\n        firstAriaLabel: TABLE.firstAriaLabel,\n        firstTooltip: TABLE.firstTooltip,\n        previousAriaLabel: TABLE.previousAriaLabel,\n        previousTooltip: TABLE.previousTooltip,\n        nextAriaLabel: TABLE.nextAriaLabel,\n        nextTooltip: TABLE.nextTooltip,\n        lastAriaLabel: TABLE.lastAriaLabel,\n        lastTooltip: TABLE.lastTooltip\n      },\n      header: {\n        actions: TABLE.actions\n      }\n    },\n    actions: props.actions,\n    detailPanel: props.detailPanel,\n    onRowClick: props.onRowClick,\n    onChangePage: props.onPageChange,\n    onChangeRowsPerPage: props.onChangeRowsPerPage,\n    editable: props.editable,\n    onSelectionChange: rows => {\n      props.onSelectionChange(rows);\n    },\n    components: {\n      Toolbar: p => /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(MTableToolbar, _objectSpread({}, p)), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            padding: '0px 10px'\n          },\n          children: props.headerActions && /*#__PURE__*/_jsx(ActionBar, {\n            className: classes.tableHeaderActions,\n            actions: props.headerActions\n          })\n        })]\n      })\n    }\n  }) : /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}