{"ast":null,"code":"import _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _user$delegaciones;\n\nimport { CUENTAS_JUDICIALES } from '../../../labels';\nimport { get, send } from '../../api-call/service';\nimport { FieldType } from '../../builder/FormField';\nimport Cookies from 'universal-cookie';\nvar cookies = new Cookies();\nvar user = cookies.get('user');\nvar configCuentasJudiciales = [{\n  name: 'afiliado',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields['afiliado'],\n  options: function () {\n    var _options = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(form) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get('api/afiliados');\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent.data.results.map(function (d) {\n                return {\n                  value: d.id,\n                  label: d.nombre + ' ' + d.apellido + ' ' + d.numeroAfiliado\n                };\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function options(_x) {\n      return _options.apply(this, arguments);\n    }\n\n    return options;\n  }(),\n  onUpdate: function () {\n    var _onUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, form) {\n      var regex, isValid;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              regex = /^[0-9]{2}-[0-9]{8}\\/[0-9]{2}$/;\n              isValid = value.match(regex);\n\n              if (!isValid) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return send({\n                url: \"api/verificar/afiliado\",\n                data: {\n                  afiliado: value\n                },\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 6:\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 8]]);\n    }));\n\n    function onUpdate(_x2, _x3) {\n      return _onUpdate.apply(this, arguments);\n    }\n\n    return onUpdate;\n  }(),\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'delegacion',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields.delegacion,\n  options: user === null || user === void 0 ? void 0 : (_user$delegaciones = user.delegaciones) === null || _user$delegaciones === void 0 ? void 0 : _user$delegaciones.map(function (d) {\n    return {\n      value: d.id,\n      label: d.nombre\n    };\n  }),\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'informacionAdicional',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['informacionAdicional'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: false\n  }\n}, // {\n//   name: 'responsableDeCarga',\n//   type: FieldType.options,\n//   label: CUENTAS_JUDICIALES.fields['responsableDeCarga'],\n//   options: async () => {\n//     return (await get('api/usuarios')).data.results.map((d) => ({\n//       value: d.id,\n//       label: d.first_name + ' ' + d.last_name,\n//     }));\n//   },\n//   styling: {\n//     columns: 4,\n//   },\n//   rules: {\n//     required: true,\n//   },\n// },\n{\n  name: 'oficioJudicial',\n  type: FieldType.file,\n  label: CUENTAS_JUDICIALES.fields.oficioJudicial,\n  styling: {\n    columns: 12\n  },\n  rules: {\n    required: true\n  },\n  multiple: true\n}];\nexport default configCuentasJudiciales;","map":null,"metadata":{},"sourceType":"module"}