{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/solicitudes/prestaciones/FormEditPrestaciones.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { NOMENCLADOR, PRESTACIONES } from '../../../labels';\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport Form, { FieldType } from '../../builder';\nimport { parseISO, subDays } from 'date-fns';\nimport { get } from '../../api-call/service';\nexport const FormEditPrestaciones = ({\n  prestacion,\n  submit,\n  onCancel\n}) => {\n  const {\n    0: fechaDesde,\n    1: setFechaDesde\n  } = useState(new Date());\n  const {\n    0: isDateRange,\n    1: setIsDateRange\n  } = useState(prestacion.isDateRange === 'range');\n  const {\n    0: fechaVigenciaHastaLiminit,\n    1: setFechaVigenciaHastaLimit\n  } = useState(null);\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    0: solicitud,\n    1: setSolicitud\n  } = useState({\n    prestaciones: []\n  });\n  const {\n    0: nomenclador,\n    1: setNomenclador\n  } = useState({});\n  let prestadores = [];\n  const configPrestaciones = [{\n    name: 'capitulo',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.capitulo,\n    options: async () => {\n      return [{\n        value: prestacion.capitulo.value,\n        label: prestacion.capitulo.label\n      }];\n    },\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'nomenclador',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.nomenclador,\n    options: async (form, query) => {\n      return [{\n        value: prestacion.nomenclador.value,\n        label: prestacion.nomenclador.label\n      }];\n    },\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'isDateRange',\n    type: FieldType.options,\n    label: 'Fecha / Rango',\n    options: PRESTACIONES.optionsDate,\n    styling: {\n      columns: 6\n    },\n    onChange: (val, form) => {\n      setIsDateRange(val === 'range');\n    }\n  }, {\n    name: 'fechaPractica',\n    type: FieldType.date,\n    label: PRESTACIONES.fields.fechaPractica,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true,\n      min: subDays(new Date(), 60).toString(),\n      max: new Date().toString()\n    },\n    onChange: (val, form) => {\n      setFechaDesde(val);\n    }\n  }, {\n    name: 'fechaPracticaHasta',\n    type: FieldType.date,\n    label: PRESTACIONES.fields.fechaPracticaHasta,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true,\n      min: fechaDesde.toString(),\n      max: fechaVigenciaHastaLiminit\n    },\n    disabled: !isDateRange\n  }, {\n    name: 'modalidad',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.modalidad,\n    options: NOMENCLADOR.optionsModalidadPresentacion,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'cobertura',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.cobertura,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"%\"\n    }, void 0, false)\n  }, {\n    name: 'estadoActual',\n    type: FieldType.options,\n    label: PRESTACIONES.fields['estadoActual'],\n    options: PRESTACIONES.optionsEstadoActual,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'prestador',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.prestador,\n    options: async () => {\n      return prestadores;\n    },\n    onUpdate: async (val, form) => {\n      if (val === '') {\n        prestadores = [];\n        return;\n      }\n\n      prestadores = (await get(`api/prestadores/?profEstado=alta&matricula=${val}`)).data.results.map(p => ({\n        value: p.id,\n        label: `${p.matricula} - ${p.nombre} ${p.apellido}`\n      }));\n    },\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    help: 'Si no encuentra el prestador, solicite el alta al Administrador del sistema.'\n  }, {\n    name: 'br',\n    type: FieldType.br,\n    label: ''\n  }, {\n    name: 'valorIprossNomenclador',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.valorIprossNomenclador,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsxDEV(AttachMoneyOutlinedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }, this)\n  }, {\n    name: 'montoTotal',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.montoTotal,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      min: 1,\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'valorPrestacion',\n    type: FieldType.float,\n    label: PRESTACIONES.fields.valorPrestacion,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    prefix: /*#__PURE__*/_jsxDEV(AttachMoneyOutlinedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }, this)\n  }, {\n    name: 'montoReintegrar',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.montoReintegrar,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsxDEV(AttachMoneyOutlinedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }, this)\n  }, {\n    name: 'cantidad',\n    type: FieldType.int,\n    label: PRESTACIONES.fields.cantidad,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      min: 1,\n      required: true\n    },\n    onChange: (val, form) => {\n      const valorIpross = form.getValues()['valorIprossNomenclador'];\n      const montoTotal = valorIpross * val;\n      form.setValue('montoTotal', montoTotal.toFixed(2));\n      const cobertura = form.getValues()['cobertura'];\n      const montoReintegrar = (valorIpross * val * (parseInt(cobertura) / 100)).toFixed(2);\n      form.setValue('montoReintegrar', montoReintegrar);\n    }\n  }, {\n    name: 'periodo',\n    type: FieldType.options,\n    options: NOMENCLADOR.optionsPeriodoTope,\n    label: PRESTACIONES.fields.periodo,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    }\n  }];\n\n  const handleCancelPrestacion = () => {\n    onCancel();\n  };\n\n  const handleSubmitPrestacion = data => {\n    submit(_objectSpread({\n      id: prestacion.id\n    }, data));\n  };\n\n  useEffect(() => {\n    console.log({\n      prestacion\n    });\n\n    if (!loaded) {\n      get(`api/solicitudes/${prestacion.solicitud.id}`).then(response => {\n        setSolicitud(response.data);\n      });\n      get(`api/nomenclador/${prestacion.nomenclador.value}`).then(response => {\n        var _response$data, _response$data2;\n\n        setNomenclador(response === null || response === void 0 ? void 0 : response.data);\n        setFechaVigenciaHastaLimit(response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.fechaVigenciaHasta ? parseISO(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.fechaVigenciaHasta) : null);\n        console.log({\n          nomenclador: response.data\n        });\n      });\n      setLoaded(true);\n    }\n  }, [prestacion]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    margin: 3,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      config: configPrestaciones,\n      data: prestacion,\n      onSubmit: handleSubmitPrestacion,\n      onCancel: () => {\n        handleCancelPrestacion();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/solicitudes/prestaciones/FormEditPrestaciones.tsx"],"names":["Box","React","useEffect","useState","NOMENCLADOR","PRESTACIONES","AttachMoneyOutlinedIcon","Form","FieldType","parseISO","subDays","get","FormEditPrestaciones","prestacion","submit","onCancel","fechaDesde","setFechaDesde","Date","isDateRange","setIsDateRange","fechaVigenciaHastaLiminit","setFechaVigenciaHastaLimit","loaded","setLoaded","solicitud","setSolicitud","prestaciones","nomenclador","setNomenclador","prestadores","configPrestaciones","name","type","options","label","fields","capitulo","value","styling","columns","rules","required","disabled","form","query","optionsDate","onChange","val","date","fechaPractica","min","toString","max","fechaPracticaHasta","modalidad","optionsModalidadPresentacion","string","cobertura","prefix","optionsEstadoActual","prestador","onUpdate","data","results","map","p","id","matricula","nombre","apellido","help","br","valorIprossNomenclador","montoTotal","float","valorPrestacion","montoReintegrar","int","cantidad","valorIpross","getValues","setValue","toFixed","parseInt","optionsPeriodoTope","periodo","handleCancelPrestacion","handleSubmitPrestacion","console","log","then","response","fechaVigenciaHasta"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { NOMENCLADOR, PRESTACIONES } from '../../../labels';\nimport { FormConfig } from '../../builder/FormConfig';\nimport { FormDataPrestaciones } from './types';\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport Form, { FieldType } from '../../builder';\nimport { parseISO, subDays } from 'date-fns';\nimport { get } from '../../api-call/service';\n\nexport const FormEditPrestaciones = ({ prestacion, submit, onCancel }) => {\n  const [fechaDesde, setFechaDesde] = useState(new Date());\n  const [isDateRange, setIsDateRange] = useState(prestacion.isDateRange === 'range');\n  const [fechaVigenciaHastaLiminit, setFechaVigenciaHastaLimit] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [solicitud, setSolicitud] = useState({ prestaciones: [] });\n  const [nomenclador, setNomenclador] = useState({});\n\n  let prestadores = [];\n  const configPrestaciones: FormConfig<FormDataPrestaciones> = [\n    {\n      name: 'capitulo',\n      type: FieldType.options,\n      label: PRESTACIONES.fields.capitulo,\n      options: async () => {\n        return [\n          {\n            value: prestacion.capitulo.value,\n            label: prestacion.capitulo.label,\n          },\n        ];\n      },\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n    },\n    {\n      name: 'nomenclador',\n      type: FieldType.options,\n      label: PRESTACIONES.fields.nomenclador,\n      options: async (form, query) => {\n        return [\n          {\n            value: prestacion.nomenclador.value,\n            label: prestacion.nomenclador.label,\n          },\n        ];\n      },\n      styling: {\n        columns: 12,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n    },\n    {\n      name: 'isDateRange',\n      type: FieldType.options,\n      label: 'Fecha / Rango',\n      options: PRESTACIONES.optionsDate,\n      styling: {\n        columns: 6,\n      },\n      onChange: (val, form) => {\n        setIsDateRange(val === 'range');\n      },\n    },\n    {\n      name: 'fechaPractica',\n      type: FieldType.date,\n      label: PRESTACIONES.fields.fechaPractica,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n        min: subDays(new Date(), 60).toString(),\n        max: new Date().toString(),\n      },\n      onChange: (val, form) => {\n        setFechaDesde(val);\n      },\n    },\n    {\n      name: 'fechaPracticaHasta',\n      type: FieldType.date,\n      label: PRESTACIONES.fields.fechaPracticaHasta,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n        min: fechaDesde.toString(),\n        max: fechaVigenciaHastaLiminit,\n      },\n      disabled: !isDateRange,\n    },\n    {\n      name: 'modalidad',\n      type: FieldType.options,\n      label: PRESTACIONES.fields.modalidad,\n      options: NOMENCLADOR.optionsModalidadPresentacion,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n    },\n    {\n      name: 'cobertura',\n      type: FieldType.string,\n      label: PRESTACIONES.fields.cobertura,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n      prefix: <>%</>,\n    },\n    {\n      name: 'estadoActual',\n      type: FieldType.options,\n      label: PRESTACIONES.fields['estadoActual'],\n      options: PRESTACIONES.optionsEstadoActual,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n    },\n    {\n      name: 'prestador',\n      type: FieldType.options,\n      label: PRESTACIONES.fields.prestador,\n      options: async () => {\n        return prestadores;\n      },\n      onUpdate: async (val, form) => {\n        if (val === '') {\n          prestadores = [];\n          return;\n        }\n        prestadores = (\n          await get(`api/prestadores/?profEstado=alta&matricula=${val}`)\n        ).data.results.map((p) => ({\n          value: p.id,\n          label: `${p.matricula} - ${p.nombre} ${p.apellido}`,\n        }));\n      },\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n      },\n      help: 'Si no encuentra el prestador, solicite el alta al Administrador del sistema.',\n    },\n    {\n      name: 'br',\n      type: FieldType.br,\n      label: '',\n    },\n    {\n      name: 'valorIprossNomenclador',\n      type: FieldType.string,\n      label: PRESTACIONES.fields.valorIprossNomenclador,\n      styling: {\n        columns: 3,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n      prefix: <AttachMoneyOutlinedIcon />,\n    },\n    {\n      name: 'montoTotal',\n      type: FieldType.string,\n      label: PRESTACIONES.fields.montoTotal,\n      styling: {\n        columns: 3,\n      },\n      rules: {\n        min: 1,\n        required: true,\n      },\n      disabled: true,\n    },\n    {\n      name: 'valorPrestacion',\n      type: FieldType.float,\n      label: PRESTACIONES.fields.valorPrestacion,\n      styling: {\n        columns: 3,\n      },\n      rules: {\n        required: true,\n      },\n      prefix: <AttachMoneyOutlinedIcon />,\n    },\n    {\n      name: 'montoReintegrar',\n      type: FieldType.string,\n      label: PRESTACIONES.fields.montoReintegrar,\n      styling: {\n        columns: 3,\n      },\n      rules: {\n        required: true,\n      },\n      disabled: true,\n      prefix: <AttachMoneyOutlinedIcon />,\n    },\n    {\n      name: 'cantidad',\n      type: FieldType.int,\n      label: PRESTACIONES.fields.cantidad,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        min: 1,\n        required: true,\n      },\n      onChange: (val, form) => {\n        const valorIpross = form.getValues()['valorIprossNomenclador'];\n        const montoTotal = valorIpross * val;\n        form.setValue('montoTotal', montoTotal.toFixed(2));\n        const cobertura = form.getValues()['cobertura'];\n\n        const montoReintegrar = (valorIpross * val * (parseInt(cobertura) / 100)).toFixed(2);\n\n        form.setValue('montoReintegrar', montoReintegrar);\n      },\n    },\n    {\n      name: 'periodo',\n      type: FieldType.options,\n      options: NOMENCLADOR.optionsPeriodoTope,\n      label: PRESTACIONES.fields.periodo,\n      styling: {\n        columns: 6,\n      },\n      rules: {\n        required: true,\n      },\n    },\n  ];\n\n  const handleCancelPrestacion = () => {\n    onCancel();\n  };\n\n  const handleSubmitPrestacion = (data) => {\n    submit({\n      id: prestacion.id,\n      ...data,\n    });\n  };\n\n  useEffect(() => {\n    console.log({ prestacion });\n    if (!loaded) {\n      get(`api/solicitudes/${prestacion.solicitud.id}`).then((response) => {\n        setSolicitud(response.data);\n      });\n      get(`api/nomenclador/${prestacion.nomenclador.value}`).then((response) => {\n        setNomenclador(response?.data);\n        setFechaVigenciaHastaLimit(\n          response?.data?.fechaVigenciaHasta ? parseISO(response?.data?.fechaVigenciaHasta) : null,\n        );\n        console.log({ nomenclador: response.data });\n      });\n      setLoaded(true);\n    }\n  }, [prestacion]);\n\n  return (\n    <Box margin={3}>\n      <Form\n        config={configPrestaciones}\n        data={prestacion}\n        onSubmit={handleSubmitPrestacion}\n        onCancel={() => {\n          handleCancelPrestacion();\n        }}\n      />\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}