{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Login from '../components/login/login';\nimport { post } from '../components/api-call/service';\nimport Cookies from 'universal-cookie';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nexport default function LoginPage() {\n  var _useState = useState(null),\n      error = _useState[0],\n      seterror = _useState[1];\n\n  var router = useRouter();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n      var res, _res$data, access, refresh, user, cookies, _res$data2, _error$response, _error$response$data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return post('api/usuarios/login/', {\n                username: username,\n                password: password\n              });\n\n            case 3:\n              res = _context.sent;\n              _res$data = res.data, access = _res$data.access, refresh = _res$data.refresh, user = _res$data.user;\n\n              if (access) {\n                cookies = new Cookies();\n                cookies.set('access', access, {\n                  path: '/'\n                });\n                cookies.set('refresh', refresh, {\n                  path: '/'\n                });\n                cookies.set('username', username, {\n                  path: '/'\n                });\n                cookies.set('user', JSON.stringify(user), {\n                  path: '/'\n                });\n                router.push('solicitudes');\n              } else {\n                seterror((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.code);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              seterror((_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.code);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Login, {\n    onSubmit: handleSubmit,\n    error: error\n  });\n}","map":null,"metadata":{},"sourceType":"module"}