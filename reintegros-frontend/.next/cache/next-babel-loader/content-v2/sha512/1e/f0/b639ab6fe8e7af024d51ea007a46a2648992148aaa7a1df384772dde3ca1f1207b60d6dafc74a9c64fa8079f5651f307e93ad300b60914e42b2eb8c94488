{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Button, Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport FieldRender from './FieldRender';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    background: '#FFFFFF',\n    borderRadius: '6px',\n    boxShadow: '0px 0px 4px rgba(0, 0, 0, 0.25)',\n    padding: '25px 35px',\n    margin: '0 0 30px'\n  },\n  buttonsWrapper: {\n    marginLeft: 'auto'\n  },\n  submitBtn: {\n    marginLeft: '15px',\n    backgroundColor: '#E0E0E0',\n    color: '#616161'\n  },\n  cancelBtn: {\n    marginLeft: '15px',\n    backgroundColor: '#D5D5D5',\n    color: '#AAAAAA'\n  }\n}));\nexport default function Form(props) {\n  var _props$buttonsWidth, _props$submitButton, _props$cancelButton;\n\n  const defaultValues = props.data || {};\n  const form = useForm({\n    defaultValues\n  });\n  const {\n    handleSubmit,\n    control,\n    errors,\n    setValue\n  } = form;\n  const classes = useStyles();\n\n  const transformAndSubmit = data => {\n    // Removes empty keys\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] === null) {\n        delete data[key];\n      }\n    });\n    props.onSubmit(data);\n    props.afterSubmit && props.afterSubmit();\n  };\n\n  const handleCancel = () => {\n    form.reset();\n    props.onCancel();\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: handleSubmit(transformAndSubmit),\n    autoComplete: \"off\",\n    className: classes.form,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [props.config.map((field, index) => {\n        var _field$styling;\n\n        return /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          md: ((_field$styling = field.styling) === null || _field$styling === void 0 ? void 0 : _field$styling.columns) || 12,\n          children: /*#__PURE__*/_jsx(FieldRender, {\n            field: field,\n            form: form,\n            data: defaultValues\n          })\n        }, index);\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: Number((_props$buttonsWidth = props.buttonsWidth) !== null && _props$buttonsWidth !== void 0 ? _props$buttonsWidth : 4),\n          className: classes.buttonsWrapper,\n          children: /*#__PURE__*/_jsxs(Box, {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            children: [(_props$submitButton = props.submitButton) !== null && _props$submitButton !== void 0 ? _props$submitButton : /*#__PURE__*/_jsx(Button, {\n              className: classes.submitBtn,\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Aceptar\"\n            }), (_props$cancelButton = props.cancelButton) !== null && _props$cancelButton !== void 0 ? _props$cancelButton : /*#__PURE__*/_jsx(Button, {\n              className: classes.cancelBtn,\n              color: \"secondary\",\n              onClick: handleCancel,\n              children: \"Cancelar\"\n            })]\n          })\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}