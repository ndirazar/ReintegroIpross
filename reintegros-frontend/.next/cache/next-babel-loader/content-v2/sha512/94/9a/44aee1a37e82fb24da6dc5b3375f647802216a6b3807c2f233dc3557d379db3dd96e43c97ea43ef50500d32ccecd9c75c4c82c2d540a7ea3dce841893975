{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Grid, Button, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { NOMENCLADOR, PRESTACIONES, STEPPER_SOLICITUDES } from '../../../labels';\nimport FieldRender from '../../builder/FieldRender'; // import configPrestaciones from './FormConfig';\n\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport useStyles from '../Stepper.styles';\nimport { ListaPrestacion } from './ListaPrestaciones';\nimport { FieldType } from '../../builder';\nimport { subDays, format } from 'date-fns';\nimport { get } from '../../api-call/service';\nexport var FormPrestaciones = function FormPrestaciones(_ref) {\n  var formContent = _ref.formContent,\n      step = _ref.step,\n      addPrestacion = _ref.addPrestacion,\n      prestaciones = _ref.prestaciones,\n      removePrestacion = _ref.removePrestacion;\n\n  var _useState = useState(true),\n      continuar = _useState[0],\n      setContinuar = _useState[1];\n\n  var methods = useFormContext();\n  var reset = methods.reset,\n      register = methods.register,\n      watch = methods.watch,\n      setError = methods.setError,\n      setValue = methods.setValue,\n      clearErrors = methods.clearErrors;\n  var form = watch();\n\n  var _useState2 = useState(methods.getValues()),\n      defaultValues = _useState2[0],\n      setDefaultValues = _useState2[1];\n\n  var classes = useStyles();\n\n  var _useState3 = useState(new Date()),\n      fechaDesde = _useState3[0],\n      setFechaDesde = _useState3[1];\n\n  var nomenclador = [];\n  var prestadores = [];\n  var configPrestaciones = [{\n    name: 'capitulo',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.capitulo,\n    options: function () {\n      var _options = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return get('api/capitulos/');\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent.data.results.map(function (c) {\n                  return {\n                    value: c.capitulo,\n                    label: \"\".concat(c.capitulo, \" - \").concat(c.descripcion)\n                  };\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function options() {\n        return _options.apply(this, arguments);\n      }\n\n      return options;\n    }(),\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    onChange: function onChange(val, form) {\n      form.setValue('capitulo', val);\n      form.setValue('nomenclador', '');\n      form.setValue('modalidad', '');\n      form.setValue('cobertura', '');\n      form.setValue('estadoActual', '');\n      form.setValue('prestador', '');\n      form.setValue('valorIprossNomenclador', '');\n      form.setValue('montoTotal', '');\n      form.setValue('valorPrestacion', '');\n      form.setValue('montoReintegrar', '');\n      form.setValue('cantidad', ''); // form.setValue('unidad', '');\n      // form.setValue('periodo', '');\n      // form.setValue('fechaPractica', '');\n      // form.setValue('fechaPracticaHasta', '');\n    }\n  }, {\n    name: 'nomenclador',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.nomenclador,\n    options: function () {\n      var _options2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(form, query) {\n        var cap, fechaPractica, fechaPracticaHasta;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                cap = form.getValues()['capitulo'] || '';\n\n                if (cap) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", []);\n\n              case 3:\n                cap = cap.value || cap;\n                fechaPractica = form.getValues()['fechaPractica'] || '';\n\n                if (fechaPractica) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", []);\n\n              case 7:\n                fechaPractica = format(fechaPractica, 'yyyy-MM-dd');\n                fechaPracticaHasta = form.getValues()['fechaPracticaHasta'] || '';\n                fechaPracticaHasta = fechaPracticaHasta ? format(fechaPracticaHasta, 'yyyy-MM-dd') : '';\n                _context2.next = 12;\n                return get('/api/nomenclador/?estado=activo&capitulo=' + cap + '&fecha_vigencia__lt=' + fechaPractica + '&fecha_vigencia_hasta_gt=' + fechaPracticaHasta);\n\n              case 12:\n                nomenclador = _context2.sent.data.results;\n                return _context2.abrupt(\"return\", nomenclador.map(function (n) {\n                  var _n$capitulo, _n$capitulo2;\n\n                  return {\n                    value: n.id,\n                    label: \"\".concat(n.codigo, \"-\").concat(n.descripcion, \" (\").concat((_n$capitulo = n.capitulo) === null || _n$capitulo === void 0 ? void 0 : _n$capitulo.capitulo, \"-\").concat((_n$capitulo2 = n.capitulo) === null || _n$capitulo2 === void 0 ? void 0 : _n$capitulo2.descripcion, \")\")\n                  };\n                }));\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function options(_x, _x2) {\n        return _options2.apply(this, arguments);\n      }\n\n      return options;\n    }(),\n    onChange: function onChange(value, form) {\n      form.setValue('nomenclador', value);\n      var item = nomenclador.find(function (elem) {\n        return elem.id === parseInt(value === null || value === void 0 ? void 0 : value.value);\n      });\n\n      if (nomenclador.length && item) {\n        form.setValue('valorIprossNomenclador', item === null || item === void 0 ? void 0 : item.valorIpross);\n        var capitulo = form.getValues()['capitulo'];\n        var cobertura = 0;\n\n        if (capitulo === 40 || capitulo === 41 || capitulo === 43) {\n          cobertura = 90;\n        } else {\n          var isFullCobertura = prestaciones.find(function (p) {\n            return p.capitulo === 40 || p.capitulo === 41 || p.capitulo === 43;\n          });\n\n          if (isFullCobertura) {\n            cobertura = 100;\n          } else {\n            cobertura = item.modalidadPrestacion === 'ambulatorio' ? 80 : 90;\n          }\n        }\n\n        var montoTotal = parseFloat(item === null || item === void 0 ? void 0 : item.valorIpross);\n        var montoReintegrar = (parseFloat(item === null || item === void 0 ? void 0 : item.valorIpross) * (cobertura / 100)).toFixed(2);\n        form.setValue('montoReintegrar', montoReintegrar, {\n          shouldValidate: true,\n          shouldDirty: true\n        });\n        form.setValue('modalidad', item.modalidadPrestacion, {\n          shouldValidate: true,\n          shouldDirty: true\n        });\n        form.setValue('cobertura', cobertura, {\n          shouldValidate: true,\n          shouldDirty: true\n        });\n        form.setValue('estadoActual', 'enCurso');\n        form.setValue('cantidad', 1); // form.setValue('unidad', item?.unidad || 'unidades');\n\n        form.setValue('montoTotal', montoTotal.toFixed(2));\n      }\n    },\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    }\n  }, {\n    name: 'modalidad',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.modalidad,\n    options: NOMENCLADOR.optionsModalidadPresentacion,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'cobertura',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.cobertura,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(_Fragment, {\n      children: \"%\"\n    })\n  }, {\n    name: 'estadoActual',\n    type: FieldType.options,\n    label: PRESTACIONES.fields['estadoActual'],\n    options: PRESTACIONES.optionsEstadoActual,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'prestador',\n    type: FieldType.options,\n    label: PRESTACIONES.fields.prestador,\n    options: function () {\n      var _options3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", prestadores);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function options() {\n        return _options3.apply(this, arguments);\n      }\n\n      return options;\n    }(),\n    onUpdate: function () {\n      var _onUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(val, form) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(val === '')) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                prestadores = [];\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                _context4.next = 5;\n                return get(\"api/prestadores/?profEstado=alta&matricula=\".concat(val));\n\n              case 5:\n                prestadores = _context4.sent.data.results.map(function (p) {\n                  return {\n                    value: p.id,\n                    label: \"\".concat(p.matricula, \" - \").concat(p.nombre, \" \").concat(p.apellido)\n                  };\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function onUpdate(_x3, _x4) {\n        return _onUpdate.apply(this, arguments);\n      }\n\n      return onUpdate;\n    }(),\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    },\n    tooltip: 'Si no encuentra el prestador, solicite el alta al Administrador del sistema.'\n  }, {\n    name: 'br',\n    type: FieldType.br,\n    label: ''\n  }, {\n    name: 'valorIprossNomenclador',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.valorIprossNomenclador,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(AttachMoneyOutlinedIcon, {})\n  }, {\n    name: 'montoTotal',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.montoTotal,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      min: 1,\n      required: true\n    },\n    disabled: true\n  }, {\n    name: 'valorPrestacion',\n    type: FieldType[\"float\"],\n    label: PRESTACIONES.fields.valorPrestacion,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    prefix: /*#__PURE__*/_jsx(AttachMoneyOutlinedIcon, {})\n  }, {\n    name: 'montoReintegrar',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.montoReintegrar,\n    styling: {\n      columns: 3\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(AttachMoneyOutlinedIcon, {})\n  }, {\n    name: 'cantidad',\n    type: FieldType[\"int\"],\n    label: PRESTACIONES.fields.cantidad,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      min: 1,\n      required: true\n    },\n    onChange: function onChange(val, form) {\n      var valorIpross = form.getValues()['valorIprossNomenclador'];\n      var montoTotal = valorIpross * val;\n      form.setValue('montoTotal', montoTotal.toFixed(2));\n      var cobertura = form.getValues()['cobertura'];\n      var montoReintegrar = (valorIpross * val * (parseInt(cobertura) / 100)).toFixed(2);\n      form.setValue('montoReintegrar', montoReintegrar);\n    }\n  }, {\n    name: 'periodo',\n    type: FieldType.options,\n    options: NOMENCLADOR.optionsPeriodoTope,\n    label: PRESTACIONES.fields.periodo,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true\n    }\n  }];\n\n  var _useState4 = useState(configPrestaciones),\n      formConfig = _useState4[0],\n      setFormConfig = _useState4[1];\n\n  useEffect(function () {\n    reset(_objectSpread({}, formContent.two), {\n      errors: true\n    });\n  }, []);\n  var fechaField = {\n    name: 'fechaPractica',\n    type: FieldType.date,\n    label: PRESTACIONES.fields.fechaPractica,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true,\n      min: subDays(new Date(), 60).toString(),\n      max: new Date().toString()\n    },\n    onChange: function onChange(val, form) {\n      setFechaDesde(val);\n    }\n  };\n  var fechaHastaField = {\n    name: 'fechaPracticaHasta',\n    type: FieldType.date,\n    label: PRESTACIONES.fields.fechaPracticaHasta,\n    styling: {\n      columns: 6\n    },\n    rules: {\n      required: true,\n      min: fechaDesde.toString() // max: addDays(fechaDesde, 60).toString(),\n\n    }\n  };\n  var dateSelect = {\n    name: 'isDateRange',\n    type: FieldType.options,\n    label: 'Fecha / Rango',\n    options: PRESTACIONES.optionsDate,\n    styling: {\n      columns: 6\n    },\n    onChange: function onChange(val, form) {\n      var c = [];\n\n      if (methods.getValues()['isDateRange'] === 'range') {\n        c = [dateSelect, fechaField, fechaHastaField];\n      } else {\n        c = [dateSelect, fechaField];\n      }\n\n      setFormConfig([].concat(_toConsumableArray(c), configPrestaciones));\n    }\n  };\n  useEffect(function () {\n    var conf = [dateSelect].concat(_toConsumableArray(formConfig));\n    setFormConfig(conf);\n  }, [formContent, setFormConfig]);\n  useEffect(function () {\n    var c = [];\n\n    if (methods.getValues()['isDateRange'] === 'range') {\n      c = [dateSelect, fechaField, fechaHastaField];\n    } else {\n      c = [dateSelect, fechaField];\n    }\n\n    setFormConfig([].concat(_toConsumableArray(c), configPrestaciones));\n  }, [fechaDesde]);\n\n  var validatePrestacion = function validatePrestacion() {\n    var isValid = true;\n    var errors = [];\n    clearErrors();\n    formConfig.map(function (field) {\n      var _field$rules;\n\n      if (field !== null && field !== void 0 && (_field$rules = field.rules) !== null && _field$rules !== void 0 && _field$rules.required && !methods.getValues()[field.name]) {\n        errors.push(field.name);\n        setError(field.name, {\n          type: 'required'\n        });\n        isValid = false;\n      }\n    });\n    return isValid;\n  };\n\n  var handleAddPrestacion = function handleAddPrestacion() {\n    var continuar = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var isValid = validatePrestacion();\n\n    if (!isValid) {\n      return false;\n    }\n\n    addPrestacion();\n    clearForm();\n    setContinuar(continuar);\n    window.scrollTo(0, 0);\n  };\n\n  var handleCancelPrestacion = function handleCancelPrestacion() {\n    clearForm();\n    setContinuar(false);\n  };\n\n  var clearForm = function clearForm() {\n    var newData = {};\n    formConfig.forEach(function (field) {\n      newData[field.name] = '';\n    });\n    setDefaultValues(newData);\n    reset(newData);\n  };\n\n  return /*#__PURE__*/_jsxs(Box, {\n    margin: 3,\n    children: [/*#__PURE__*/_jsx(ListaPrestacion, {\n      prestaciones: prestaciones,\n      buttons: [{\n        action: removePrestacion,\n        icon: /*#__PURE__*/_jsx(DeleteIcon, {})\n      }]\n    }), continuar && /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsxs(Box, {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxs(Box, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: step.title\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: step.description\n          })]\n        }), /*#__PURE__*/_jsx(\"form\", {\n          children: /*#__PURE__*/_jsx(\"fieldset\", {\n            children: /*#__PURE__*/_jsxs(Grid, {\n              container: true,\n              spacing: 2,\n              children: [formConfig.map(function (field, index) {\n                var _field$styling;\n\n                return /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: ((_field$styling = field.styling) === null || _field$styling === void 0 ? void 0 : _field$styling.columns) || 12,\n                  children: /*#__PURE__*/_jsx(FieldRender, {\n                    field: field,\n                    form: methods,\n                    data: defaultValues\n                  })\n                }, index);\n              }), /*#__PURE__*/_jsxs(Grid, {\n                item: true,\n                md: 12,\n                children: [/*#__PURE__*/_jsx(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: function onClick() {\n                    handleAddPrestacion(true);\n                  },\n                  className: classes.button,\n                  children: STEPPER_SOLICITUDES.saveAndContinue\n                }), /*#__PURE__*/_jsx(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: function onClick() {\n                    handleAddPrestacion(false);\n                  },\n                  className: classes.button,\n                  children: STEPPER_SOLICITUDES.save\n                }), /*#__PURE__*/_jsx(Button, {\n                  variant: \"contained\",\n                  color: \"default\",\n                  onClick: function onClick() {\n                    handleCancelPrestacion();\n                  },\n                  className: classes.button,\n                  children: STEPPER_SOLICITUDES.cancel\n                })]\n              })]\n            })\n          })\n        })]\n      })\n    }), !continuar && /*#__PURE__*/_jsx(Box, {\n      children: /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          md: 12,\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: function onClick() {\n              clearForm();\n              setContinuar(true);\n            },\n            className: classes.button,\n            children: STEPPER_SOLICITUDES.addPrestacion\n          })\n        })\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}