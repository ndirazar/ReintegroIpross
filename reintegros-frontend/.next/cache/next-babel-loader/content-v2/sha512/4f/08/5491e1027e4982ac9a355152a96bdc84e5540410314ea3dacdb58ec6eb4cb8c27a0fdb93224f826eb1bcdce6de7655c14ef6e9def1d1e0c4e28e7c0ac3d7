{"ast":null,"code":"import _defineProperty from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { FieldType } from '../builder';\nimport Form from '../builder/Form';\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport { PRESTACIONES } from '../../labels';\nexport default function AuditoriasForm(_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      data = _ref.data,\n      handleCancel = _ref.handleCancel;\n\n  var _useState = useState(false),\n      rechazado = _useState[0],\n      setRechazado = _useState[1];\n\n  var _useState2 = useState(true),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState({}),\n      currentData = _useState3[0],\n      setCurrentData = _useState3[1];\n\n  var config = [{\n    name: 'valorIprossNomenclador',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.valorIprossNomenclador,\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(AttachMoneyOutlinedIcon, {})\n  }, {\n    name: 'coseguroNomenclador',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.coseguroNomenclador,\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(\"i\", {\n      className: \"material-icons\",\n      children: \"%\"\n    })\n  }, {\n    name: 'cobertura',\n    type: FieldType[\"int\"],\n    label: PRESTACIONES.fields.cobertura,\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true,\n      min: 0,\n      max: 100\n    },\n    prefix: /*#__PURE__*/_jsx(\"i\", {\n      className: \"material-icons\",\n      children: \"%\"\n    }),\n    onChange: function onChange(value, form) {\n      var aux = 1;\n      var val = parseInt(value);\n\n      if (value !== '' && !isNaN(val) && val > 0) {\n        aux = val / 100;\n      }\n\n      var monto = (parseFloat(form.getValues().valorIprossNomenclador) * aux).toFixed(2);\n      form.setValue('montoReintegrar', monto);\n    }\n  }, {\n    name: 'valorPrestacion',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.valorPrestacion,\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(AttachMoneyOutlinedIcon, {})\n  }, {\n    name: 'montoReintegrar',\n    type: FieldType.string,\n    label: PRESTACIONES.fields.montoReintegrar,\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: false\n    },\n    disabled: true,\n    prefix: /*#__PURE__*/_jsx(AttachMoneyOutlinedIcon, {})\n  }, {\n    name: 'estadoActual',\n    type: FieldType.radio,\n    label: 'Estado',\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: true\n    },\n    options: [// { value: 'enCurso', label: 'En Curso' },\n    {\n      value: 'aceptado',\n      label: 'Aceptado'\n    }, {\n      value: 'rechazado',\n      label: 'Rechazado'\n    } // { value: 'cerrado', label: 'Cerrado' },\n    ],\n    onChange: function onChange(value, form) {\n      setRechazado(value === 'rechazado' ? true : false);\n    }\n  }, {\n    name: 'motivoDeRechazo',\n    type: FieldType.options,\n    label: 'Motivo rechazo',\n    options: [{\n      value: 'faltaDocumentacion',\n      label: 'Falta documentación'\n    }, {\n      value: 'prestacionNoEstaEnMenuPrestacional',\n      label: 'Prestación no está en menú prestacional'\n    }, {\n      value: 'noTieneAutorizacionPrevia',\n      label: 'No tiene autorización previa'\n    }, {\n      value: 'noCorrespondeCoberturaPorReintegro',\n      label: 'No corresponde cobertura por reintegro'\n    }],\n    styling: {\n      columns: 12\n    },\n    rules: {\n      required: false\n    },\n    disabled: !rechazado\n  }];\n  return /*#__PURE__*/_jsx(Box, {\n    p: 2,\n    m: 1,\n    children: /*#__PURE__*/_jsx(Form, {\n      config: config,\n      data: _objectSpread({}, data),\n      onSubmit: handleSubmit,\n      onCancel: handleCancel\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}