{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/common/providers/Loading/index.tsx\";\nimport React, { useState, useCallback } from 'react';\nexport const LoadingContext = /*#__PURE__*/React.createContext({\n  loading: false,\n  isLoading: () => {},\n  unsetLoading: () => {}\n});\nexport default function LoadingProvider({\n  children\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const unsetLoading = () => setLoading(false);\n\n  const isLoading = () => setLoading(true);\n\n  const contextValue = {\n    loading,\n    isLoading: useCallback(() => isLoading(), []),\n    unsetLoading: useCallback(() => unsetLoading(), [])\n  };\n  return /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/common/providers/Loading/index.tsx"],"names":["React","useState","useCallback","LoadingContext","createContext","loading","isLoading","unsetLoading","LoadingProvider","children","setLoading","contextValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAO,MAAMC,cAAc,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AAChDC,EAAAA,OAAO,EAAE,KADuC;AAEhDC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAF6B;AAGhDC,EAAAA,YAAY,EAAE,MAAM,CAAE;AAH0B,CAApB,CAAvB;AAMP,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACpD,QAAM;AAAA,OAACJ,OAAD;AAAA,OAAUK;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMM,YAAY,GAAG,MAAMG,UAAU,CAAC,KAAD,CAArC;;AAEA,QAAMJ,SAAS,GAAG,MAAMI,UAAU,CAAC,IAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAG;AACnBN,IAAAA,OADmB;AAEnBC,IAAAA,SAAS,EAAEJ,WAAW,CAAC,MAAMI,SAAS,EAAhB,EAAoB,EAApB,CAFH;AAGnBC,IAAAA,YAAY,EAAEL,WAAW,CAAC,MAAMK,YAAY,EAAnB,EAAuB,EAAvB;AAHN,GAArB;AAMA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEI,YAAhC;AAAA,cAA+CF;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nexport const LoadingContext = React.createContext({\n  loading: false,\n  isLoading: () => {},\n  unsetLoading: () => {},\n});\n\nexport default function LoadingProvider({ children }) {\n  const [loading, setLoading] = useState(false);\n\n  const unsetLoading = () => setLoading(false);\n\n  const isLoading = () => setLoading(true);\n\n  const contextValue = {\n    loading,\n    isLoading: useCallback(() => isLoading(), []),\n    unsetLoading: useCallback(() => unsetLoading(), []),\n  };\n\n  return <LoadingContext.Provider value={contextValue}>{children}</LoadingContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}