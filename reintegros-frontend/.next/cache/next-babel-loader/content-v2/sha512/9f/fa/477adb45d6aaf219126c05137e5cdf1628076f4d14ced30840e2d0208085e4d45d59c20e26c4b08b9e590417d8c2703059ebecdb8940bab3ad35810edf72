{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport { Box } from '@material-ui/core'; //App imports\n\nimport SolicitudesList from './SolicitudesList';\nimport { remove } from '../api-call/service';\nimport useLoading from '../common/hooks/Loading';\nimport useAlert from '../common/hooks/Alert';\nimport { FormStepper } from './Stepper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { ERRORS, SOLICITUDES } from '../../labels';\nimport TableFilters from '../common/TableFilters';\nimport filterConfig from './FiltersConfig';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst user = cookies.get('user');\n\nconst objToQueryString = obj => {\n  var str = '';\n\n  for (var key in obj) {\n    if (str != '') {\n      str += '&';\n    }\n\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n\n  return str;\n};\n\nconst formatDate = date => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  let year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n};\n\nexport default function Solicitudes() {\n  var _user$delegacionPrinc;\n\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(20);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    delegacion: user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id,\n    fechaDesde: '',\n    fechaHasta: ''\n  });\n  const {\n    data,\n    error: errorGet,\n    mutate\n  } = useSWR(`${SOLICITUDES.route}?page=${page}&size=${pageSize}&` + objToQueryString(filters));\n  const {\n    0: error,\n    1: setError\n  } = useState(errorGet);\n  const [showStepper, setShowStepper] = React.useState(false);\n  const methods = useForm({\n    mode: 'onBlur'\n  });\n  const {\n    isLoading,\n    unsetLoading\n  } = useLoading();\n  const {\n    addAlert,\n    removeAlert\n  } = useAlert();\n  useEffect(() => {\n    if (!data) {\n      if (errorGet) {\n        unsetLoading();\n        addAlert(ERRORS.onGet(SOLICITUDES.name), 'error');\n      } else {\n        isLoading();\n      }\n    } else {\n      unsetLoading();\n\n      if (!error) {\n        removeAlert();\n      } else {\n        addAlert(error, 'error');\n      }\n    }\n  }, [data, errorGet, error]);\n\n  const handleDelete = async id => {\n    try {\n      await remove(`${SOLICITUDES.route}`, id);\n    } catch (error) {\n      setError(ERRORS.onDeactivate(SOLICITUDES.name));\n    }\n\n    mutate(`${SOLICITUDES.route}?page=${page}&size=${pageSize}`);\n  };\n\n  const handleShowStepper = () => {\n    window.scrollTo(0, 0);\n    setShowStepper(true);\n  };\n\n  const onEdit = async data => {//TODO\n  };\n\n  const handleFinished = () => {\n    mutate(`${SOLICITUDES.route}?page=${page}&size=${pageSize}`);\n  };\n\n  const handleChangePagination = pagination => {\n    setPage(pagination.page);\n    setPageSize(pagination.pageSize);\n  };\n\n  const handleFilter = filters => {\n    console.log({\n      filters\n    });\n\n    if (filters.fechaDesde) {\n      filters.fechaDesde = formatDate(filters.fechaDesde);\n    } else {\n      delete filters.fechaDesde;\n    }\n\n    if (filters.fechaHasta) {\n      filters.fechaHasta = formatDate(filters.fechaHasta);\n    } else {\n      delete filters.fechaHasta;\n    }\n\n    setFilters(filters);\n  };\n\n  useEffect(() => {\n    console.log(objToQueryString(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxs(Box, {\n    children: [showStepper && /*#__PURE__*/_jsx(FormProvider, _objectSpread(_objectSpread({}, methods), {}, {\n      children: /*#__PURE__*/_jsx(FormStepper, {\n        setShowStepper: setShowStepper,\n        onFinished: handleFinished\n      })\n    })), /*#__PURE__*/_jsx(TableFilters, {\n      title: \"Solicitudes\",\n      config: filterConfig,\n      onSubmit: handleFilter,\n      data: filters\n    }), /*#__PURE__*/_jsx(SolicitudesList, {\n      data: data,\n      handleDelete: handleDelete,\n      onEdit: onEdit,\n      onShowStepper: handleShowStepper,\n      onPaginationChange: handleChangePagination\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}