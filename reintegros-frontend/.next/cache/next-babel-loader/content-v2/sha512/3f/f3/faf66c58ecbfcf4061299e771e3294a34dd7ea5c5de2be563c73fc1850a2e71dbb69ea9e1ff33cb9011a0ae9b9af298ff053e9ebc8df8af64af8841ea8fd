{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport useSWR from 'swr';\nimport AuditoriasForm from './AuditoriasForm';\nimport AuditoriasList from './AuditoriasList';\nimport { post, remove } from '../api-call/service';\nimport Loading from '../common/Loading';\nimport { ERRORS, LOADING, AUDITORIAS, PRESTACIONES } from '../../labels';\nimport Alert from '../common/Alert';\nimport Modal from '../common/Modal';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst user = cookies.get('user');\nexport default function Auditorias() {\n  const {\n    data,\n    error: errotOnGet,\n    mutate\n  } = useSWR(PRESTACIONES.route);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n\n  const handleSubmit = async data => {\n    try {\n      await post(AUDITORIAS.route, {\n        prestacion: currentData === null || currentData === void 0 ? void 0 : currentData.id,\n        auditorAsignado: user === null || user === void 0 ? void 0 : user.id,\n        actualizadoPor: user === null || user === void 0 ? void 0 : user.id,\n        motivoDeRechazo: data.motivoDeRechazo,\n        porcentajeDeCobertura: parseInt(data.cobertura),\n        montoAReintegrar: parseFloat(data.montoReintegrar)\n      });\n    } catch (error) {\n      //TODO handle error\n      setError('onAudit');\n      console.dir(error.response.statusText);\n    }\n\n    console.log({\n      errotOnGet\n    });\n    setCurrentData(null);\n    setOpenForm(false);\n    mutate();\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await remove(`api/${AUDITORIAS.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onAudit = async data => {\n    setOpenForm(false); // Calculate montoAReintegrar\n\n    setCurrentData(data);\n    setOpenForm(true);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsxs(Modal, {\n        customClasses: {},\n        open: true,\n        onClose: () => setOpenForm(false),\n        title: 'Auditar prestaci√≥n',\n        breadcrumbs: '',\n        subTitle: false,\n        actions: false,\n        onAcept: null,\n        onCancel: null,\n        maxWidth: 'sm',\n        children: [/*#__PURE__*/_jsxs(Box, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Verifica la documentaci\\xF3n requerida y cobertura definida\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Factura\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Historia clinica\"\n          })]\n        }), /*#__PURE__*/_jsx(AuditoriasForm, {\n          data: currentData,\n          handleSubmit: handleSubmit,\n          handleCancel: handleCancel\n        })]\n      }), data && /*#__PURE__*/_jsx(AuditoriasList, {\n        data: data,\n        handleDelete: handleDelete,\n        onAudit: onAudit\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(AUDITORIAS.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errotOnGet || error,\n      severity: \"error\",\n      message: error ? ERRORS[error](AUDITORIAS.name) : ERRORS.onGet(AUDITORIAS.name)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}