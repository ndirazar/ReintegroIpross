{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/builder/Form.tsx\";\nimport { Box, Button, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport FieldRender from './FieldRender';\nexport default function Form(props) {\n  var _props$buttonsWidth, _props$submitButton, _props$cancelButton;\n\n  const defaultValues = props.data || {};\n  const form = useForm({\n    defaultValues\n  });\n  const {\n    handleSubmit,\n    control,\n    errors,\n    setValue\n  } = form;\n\n  const transformAndSubmit = data => {\n    // Removes empty keys\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] === null) {\n        delete data[key];\n      }\n    });\n    props.onSubmit(data);\n    props.afterSubmit && props.afterSubmit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(transformAndSubmit),\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [props.config.map((field, index) => {\n        var _field$styling;\n\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: ((_field$styling = field.styling) === null || _field$styling === void 0 ? void 0 : _field$styling.columns) || 12,\n          children: /*#__PURE__*/_jsxDEV(FieldRender, {\n            field: field,\n            form: form,\n            data: defaultValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: (_props$buttonsWidth = props.buttonsWidth) !== null && _props$buttonsWidth !== void 0 ? _props$buttonsWidth : 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          children: [(_props$submitButton = props.submitButton) !== null && _props$submitButton !== void 0 ? _props$submitButton : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            fullWidth: true,\n            children: \"Aceptar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), (_props$cancelButton = props.cancelButton) !== null && _props$cancelButton !== void 0 ? _props$cancelButton : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: () => console.log('TODO'),\n            fullWidth: true,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/builder/Form.tsx"],"names":["Box","Button","Grid","React","useForm","FieldRender","Form","props","defaultValues","data","form","handleSubmit","control","errors","setValue","transformAndSubmit","Object","keys","forEach","key","onSubmit","afterSubmit","config","map","field","index","styling","columns","buttonsWidth","submitButton","cancelButton","console","log"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,mBAAlC;AAEA,OAAOC,KAAP,MAA2C,OAA3C;AACA,SAAwBC,OAAxB,QAAuC,iBAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAeA,eAAe,SAASC,IAAT,CAAiBC,KAAjB,EAAkC;AAAA;;AAC/C,QAAMC,aAAa,GAAGD,KAAK,CAACE,IAAN,IAAc,EAApC;AACA,QAAMC,IAAI,GAAGN,OAAO,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAApB;AACA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA;AAAjC,MAA8CJ,IAApD;;AAEA,QAAMK,kBAAkB,GAAIN,IAAD,IAAe;AACxC;AACAO,IAAAA,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,OAAlB,CAA2BC,GAAD,IAAS;AACjC,UAAIV,IAAI,CAACU,GAAD,CAAJ,KAAc,EAAd,IAAoBV,IAAI,CAACU,GAAD,CAAJ,KAAc,IAAtC,EAA4C;AAC1C,eAAOV,IAAI,CAACU,GAAD,CAAX;AACD;AACF,KAJD;AAKAZ,IAAAA,KAAK,CAACa,QAAN,CAAeX,IAAf;AACAF,IAAAA,KAAK,CAACc,WAAN,IAAqBd,KAAK,CAACc,WAAN,EAArB;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEV,YAAY,CAACI,kBAAD,CAA5B;AAAkD,IAAA,YAAY,EAAC,KAA/D;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,iBACGR,KAAK,CAACe,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR;AAAA;;AAAA,4BAChB,QAAC,IAAD;AAAkB,UAAA,IAAI,MAAtB;AAAuB,UAAA,EAAE,EAAE,mBAACD,KAAK,CAACE,OAAP,mDAAC,eAAeC,OAAhB,KAAmC,EAA9D;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,KAAK,EAAEH,KAApB;AAA2B,YAAA,IAAI,EAAEd,IAAjC;AAAuC,YAAA,IAAI,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,WAAWiB,KAAX;AAAA;AAAA;AAAA;AAAA,gBADgB;AAAA,OAAjB,CADH,eAME,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,yBAAElB,KAAK,CAACqB,YAAR,qEAAwB,EAArC;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,cAAc,EAAC,eAAnC;AAAA,4CACGrB,KAAK,CAACsB,YADT,kFAEI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAsC,YAAA,SAAS,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,yBAMGtB,KAAK,CAACuB,YANT,kFAOI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,WAAd;AAA0B,YAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAzC;AAA8D,YAAA,SAAS,EAAE,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD","sourcesContent":["import { Box, Button, Grid } from '@material-ui/core';\n\nimport React, { ReactNode, useState } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport FieldRender from './FieldRender';\n\nimport { FormConfig } from './FormConfig';\n\ntype Props<T> = {\n  config: FormConfig<T>;\n  data: T;\n  onSubmit: (data: SubmitHandler<T>) => void;\n  onCancel?: () => void;\n  submitButton?: ReactNode;\n  cancelButton?: ReactNode;\n  afterSubmit?: () => void;\n  buttonsWidth?: number;\n};\n\nexport default function Form<T>(props: Props<T>) {\n  const defaultValues = props.data || {};\n  const form = useForm({ defaultValues });\n  const { handleSubmit, control, errors, setValue } = form;\n\n  const transformAndSubmit = (data: any) => {\n    // Removes empty keys\n    Object.keys(data).forEach((key) => {\n      if (data[key] === '' || data[key] === null) {\n        delete data[key];\n      }\n    });\n    props.onSubmit(data);\n    props.afterSubmit && props.afterSubmit();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(transformAndSubmit)} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        {props.config.map((field, index) => (\n          <Grid key={index} item md={(field.styling?.columns as any) || 12}>\n            <FieldRender field={field} form={form} data={defaultValues} />\n          </Grid>\n        ))}\n        <Grid item xs={props.buttonsWidth ?? 12}>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {props.submitButton ?? (\n              <Button color=\"primary\" type=\"submit\" fullWidth={true}>\n                Aceptar\n              </Button>\n            )}\n            {props.cancelButton ?? (\n              <Button color=\"secondary\" onClick={() => console.log('TODO')} fullWidth={true}>\n                Cancelar\n              </Button>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}