{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport FieldRender from './FieldRender';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      background: '#FFFFFF',\n      borderRadius: '6px',\n      boxShadow: '0px 0px 4px rgba(0, 0, 0, 0.25)',\n      padding: '25px 35px',\n      margin: '0 0 30px'\n    },\n    formTitle: {\n      fontSize: '20px',\n      marginTop: '15px'\n    },\n    buttonsWrapper: {\n      marginLeft: 'auto'\n    },\n    submitBtn: {\n      marginLeft: '15px'\n    },\n    cancelBtn: {\n      marginLeft: '15px'\n    },\n    br: {\n      height: 10,\n      padding: 0\n    }\n  };\n});\nexport default function Form(props) {\n  var _props$buttonsWidth, _props$cancelButton, _props$submitButton;\n\n  var defaultValues = props.data || {};\n  var form = useForm({\n    defaultValues: defaultValues\n  });\n  var handleSubmit = form.handleSubmit,\n      control = form.control,\n      errors = form.errors,\n      setValue = form.setValue;\n  var classes = useStyles();\n\n  var transformAndSubmit = function transformAndSubmit(data) {\n    // Removes empty keys\n    Object.keys(data).forEach(function (key) {\n      if (data[key] === '' || data[key] === null) {\n        delete data[key];\n      }\n    });\n    props.onSubmit(data, form);\n    props.afterSubmit && props.afterSubmit();\n  };\n\n  var handleCancel = function handleCancel() {\n    form.reset();\n    props.onCancel && props.onCancel();\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: handleSubmit(transformAndSubmit),\n    autoComplete: \"off\",\n    className: classes.form,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [props.title && /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        md: 12,\n        children: /*#__PURE__*/_jsx(Typography, {\n          component: \"h6\",\n          className: classes.formTitle,\n          children: props.title\n        })\n      }), props.config.map(function (field, index) {\n        var _field$styling;\n\n        return /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          md: ((_field$styling = field.styling) === null || _field$styling === void 0 ? void 0 : _field$styling.columns) || 12,\n          className: field.type === 'br' ? classes.br : '',\n          style: {\n            paddingTop: 0\n          },\n          children: /*#__PURE__*/_jsx(FieldRender, {\n            field: field,\n            form: form,\n            data: defaultValues\n          })\n        }, index);\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: Number((_props$buttonsWidth = props.buttonsWidth) !== null && _props$buttonsWidth !== void 0 ? _props$buttonsWidth : 4),\n          className: classes.buttonsWrapper,\n          children: /*#__PURE__*/_jsxs(Box, {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            children: [(_props$cancelButton = props.cancelButton) !== null && _props$cancelButton !== void 0 ? _props$cancelButton : /*#__PURE__*/_jsx(Button, {\n              className: classes.cancelBtn,\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: handleCancel,\n              children: props.cancelText || 'Cancelar'\n            }), (_props$submitButton = props.submitButton) !== null && _props$submitButton !== void 0 ? _props$submitButton : /*#__PURE__*/_jsx(Button, {\n              className: classes.submitBtn,\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"Aceptar\"\n            })]\n          })\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}