{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport useSWR from 'swr';\nimport { ERRORS, LOADING, CUENTAS_JUDICIALES } from '../../../labels';\nimport CuentasJudicialesList from './CuentasJudicialesList';\nimport CuentasJudicialesForm from './CuentasJudicialesForm';\nimport { remove, send } from '../../api-call/service';\nimport Alert from '../../common/Alert';\nimport Loading from '../../common/Loading';\nimport { getUser, isUserAdmin, isUserContaduria, objToQueryString } from '../../common/helpers';\nimport TableFilters from '../../common/TableFilters';\nimport filterConfig from './FiltersConfig';\nimport ConfirmDialog from '../../common/ConfirmDialog';\nexport default function CuentasJudiciales() {\n  var _user$delegacionPrinc;\n\n  const user = getUser();\n  const INITIAL_FILTER = {\n    page: 1,\n    size: 20,\n    delegacion: isUserAdmin() || isUserContaduria() ? '' : (user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id) || ''\n  };\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(_objectSpread({}, INITIAL_FILTER));\n  const {\n    0: filterQueryStr,\n    1: setFilterQueryStr\n  } = useState(objToQueryString(filters));\n  const {\n    data,\n    error: errorOnGet,\n    mutate\n  } = useSWR(`${CUENTAS_JUDICIALES.route}?` + filterQueryStr);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState(null);\n  const {\n    0: showFilters,\n    1: setShowFilters\n  } = useState(false);\n  const {\n    0: showConfirmDialog,\n    1: setShowConfirmDialog\n  } = useState(false);\n  const {\n    0: idToDelete,\n    1: setIdToDelete\n  } = useState(null);\n\n  const handleCreate = () => {\n    var _user$delegacionPrinc2;\n\n    setCurrentData({\n      afiliado: '',\n      nombre: '',\n      apellido: '',\n      cuitCuil: '',\n      cbu: '',\n      delegacion: user === null || user === void 0 ? void 0 : (_user$delegacionPrinc2 = user.delegacionPrincipal) === null || _user$delegacionPrinc2 === void 0 ? void 0 : _user$delegacionPrinc2.id,\n      informacionAdicional: '',\n      oficioJudicial: '',\n      responsableDeCarga: {\n        label: user.first_name + ' ' + user.last_name,\n        value: user.id\n      },\n      estado: 'activa'\n    });\n    setOpenForm(true);\n    window.scrollTo(0, 0);\n  };\n\n  const handleSubmit = async (data, form) => {\n    const formData = new FormData();\n    formData.append('afiliado', data.afiliado.value);\n    formData.append('nombre', data.nombre);\n    formData.append('apellido', data.apellido);\n    formData.append('delegacion', data.delegacion);\n    formData.append('responsableDeCarga', user.id);\n    formData.append('informacionAdicional', data.informacionAdicional || '');\n    formData.append('cuitCuil', data.cuitCuil || '');\n    formData.append('cbu', data.cbu || '');\n    formData.append('estado', data.estado || 'activa');\n\n    if (data.oficioJudicial && typeof data.oficioJudicial !== 'string') {\n      formData.append('oficioJudicial', data.oficioJudicial[0]);\n    }\n\n    try {\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        await send({\n          url: `${CUENTAS_JUDICIALES.route}/${currentData === null || currentData === void 0 ? void 0 : currentData.id}/`,\n          data: formData,\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        await send({\n          url: `${CUENTAS_JUDICIALES.route}/`,\n          data: formData,\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        });\n      }\n\n      setError(null);\n      handleCancel();\n      mutate();\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2;\n\n      let errMsg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || '';\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        setError('onUpdate');\n      } else {\n        setError('onCreate');\n      }\n\n      Object.keys(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data).map(key => {\n        const errMsg = error.response.data[key][0];\n\n        if (errMsg === 'This field must be unique.') {\n          form.setError(key, {\n            type: 'unique'\n          });\n        }\n      });\n    }\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    setShowConfirmDialog(true);\n    setIdToDelete(id);\n  };\n\n  const handleConfirmDelete = async () => {\n    try {\n      await remove(`${CUENTAS_JUDICIALES.route}`, idToDelete);\n      mutate();\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    setShowConfirmDialog(false);\n    setIdToDelete(null);\n  };\n\n  const onEdit = async data => {\n    var _data$afiliado, _data$afiliado2, _data$afiliado3, _data$afiliado4, _data$delegacion, _data$responsableDeCa, _data$responsableDeCa2, _data$responsableDeCa3;\n\n    setOpenForm(false);\n\n    const editData = _objectSpread(_objectSpread({}, data), {}, {\n      afiliado: {\n        label: ((_data$afiliado = data.afiliado) === null || _data$afiliado === void 0 ? void 0 : _data$afiliado.numeroAfiliado) + ' ' + ((_data$afiliado2 = data.afiliado) === null || _data$afiliado2 === void 0 ? void 0 : _data$afiliado2.nombre) + ' ' + ((_data$afiliado3 = data.afiliado) === null || _data$afiliado3 === void 0 ? void 0 : _data$afiliado3.apellido),\n        value: (_data$afiliado4 = data.afiliado) === null || _data$afiliado4 === void 0 ? void 0 : _data$afiliado4.id\n      },\n      cuitCuil: (data === null || data === void 0 ? void 0 : data.cuitCuil) || '',\n      cbu: (data === null || data === void 0 ? void 0 : data.cbu) || '',\n      delegacion: (_data$delegacion = data.delegacion) === null || _data$delegacion === void 0 ? void 0 : _data$delegacion.id,\n      nombre: (data === null || data === void 0 ? void 0 : data.nombre) || '',\n      apellido: (data === null || data === void 0 ? void 0 : data.apellido) || '',\n      responsableDeCarga: {\n        label: ((_data$responsableDeCa = data.responsableDeCarga) === null || _data$responsableDeCa === void 0 ? void 0 : _data$responsableDeCa.first_name) + ' ' + ((_data$responsableDeCa2 = data.responsableDeCarga) === null || _data$responsableDeCa2 === void 0 ? void 0 : _data$responsableDeCa2.last_name),\n        value: (_data$responsableDeCa3 = data.responsableDeCarga) === null || _data$responsableDeCa3 === void 0 ? void 0 : _data$responsableDeCa3.id\n      }\n    });\n\n    setCurrentData(editData);\n    setOpenForm(true);\n    window.scrollTo(0, 0);\n  };\n\n  const handleChangePagination = pagination => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      page: pagination.page,\n      size: pagination.pageSize\n    }));\n  };\n\n  const handleFilter = newFilters => {\n    setFilters(newFilters);\n    setShowFilters(false);\n  };\n\n  const handleCancelFilter = () => {\n    setFilters(_objectSpread({}, INITIAL_FILTER));\n    setShowFilters(false);\n  };\n\n  useEffect(() => {\n    setFilterQueryStr(objToQueryString(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      style: {\n        position: 'relative'\n      },\n      children: [openForm && /*#__PURE__*/_jsx(CuentasJudicialesForm, {\n        data: currentData,\n        handleSubmit: handleSubmit,\n        handleCancel: handleCancel\n      }), /*#__PURE__*/_jsx(CuentasJudicialesList, {\n        data: data,\n        handleDelete: handleDelete,\n        onEdit: onEdit,\n        onCreate: handleCreate,\n        onPaginationChange: handleChangePagination,\n        onFilter: () => {\n          setShowFilters(!showFilters);\n        }\n      }), /*#__PURE__*/_jsx(TableFilters, {\n        config: filterConfig,\n        data: filters,\n        onSubmit: handleFilter,\n        onCancel: handleCancelFilter,\n        show: showFilters\n      })]\n    }), /*#__PURE__*/_jsx(ConfirmDialog, {\n      open: showConfirmDialog,\n      onConfirm: handleConfirmDelete,\n      onClose: () => {\n        setIdToDelete(null);\n        setShowConfirmDialog(false);\n      },\n      message: CUENTAS_JUDICIALES.deleteMessage\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(CUENTAS_JUDICIALES.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errorOnGet || !!error,\n      onClose: () => {\n        setError(null);\n      },\n      severity: \"error\",\n      message: !!error ? ERRORS[error](CUENTAS_JUDICIALES.name) : ERRORS.onGet(CUENTAS_JUDICIALES.name)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}