{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport useSWR from 'swr';\nimport { ERRORS, LOADING, CUENTAS_JUDICIALES } from '../../../labels';\nimport CuentasJudicialesList from './CuentasJudicialesList';\nimport CuentasJudicialesForm from './CuentasJudicialesForm';\nimport { remove, send } from '../../api-call/service';\nimport Alert from '../../common/Alert';\nimport Loading from '../../common/Loading';\nexport default function CuentasJudiciales() {\n  const {\n    data,\n    error: errotOnGet,\n    mutate\n  } = useSWR(`api/${CUENTAS_JUDICIALES.route}/`);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const handleCreate = () => {\n    setCurrentData({});\n    setOpenForm(true);\n  };\n\n  const handleSubmit = async data => {\n    const formData = new FormData();\n    formData.append('delegacion', data.delegacion);\n    formData.append('responsableDeCarga', data.responsableDeCarga);\n    formData.append('oficioJudicial', data.oficioJudicial[0]);\n    formData.append('informacionAdicional', data.informacionAdicional);\n\n    try {\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        // await put(`api/${CUENTAS_JUDICIALES.route}`, { ...data }, currentData?.id);\n        await send({\n          url: `api/${CUENTAS_JUDICIALES.route}/currentData?.id`,\n          data: formData,\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // await post(`api/${CUENTAS_JUDICIALES.route}`, { ...data });\n        await send({\n          url: `api/${CUENTAS_JUDICIALES.route}/`,\n          data: formData,\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        });\n      }\n\n      setError(null);\n      handleCancel();\n      mutate();\n    } catch (error) {\n      console.log(error);\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        setError('onEdit');\n      } else {\n        setError('onCreate');\n      }\n    }\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    console.log('handleDelete', id);\n\n    try {\n      await remove(`api/${CUENTAS_JUDICIALES.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onEdit = async data => {\n    setCurrentData(data);\n    setOpenForm(true);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsx(CuentasJudicialesForm, {\n        data: currentData,\n        handleSubmit: handleSubmit,\n        handleCancel: handleCancel\n      }), data && /*#__PURE__*/_jsx(CuentasJudicialesList, {\n        data: data,\n        handleDelete: handleDelete,\n        onEdit: onEdit,\n        onCreate: handleCreate\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(CUENTAS_JUDICIALES.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errotOnGet || error,\n      severity: \"error\",\n      message: error ? ERRORS[error](CUENTAS_JUDICIALES.name) : ERRORS.onGet(CUENTAS_JUDICIALES.name)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}