{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/reintegros/reintegros-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/common/FileInput.tsx\",\n    _s = $RefreshSig$();\n\n// Third-party imports\nimport { IconButton, InputLabel, Link, makeStyles, Typography } from '@material-ui/core';\nimport { Cancel } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport { getFileName } from '../common/helpers';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    helpText: {\n      fontSize: '12px'\n    },\n    fileLink: {\n      fontSize: '16px'\n    }\n  };\n}); // Component\n\nexport default function FileInput(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      clear = _useState[0],\n      setClear = _useState[1]; // const [fileName, setFileName] = useState('');\n  // const [fileContent, setFileContent] = useState<File | string | File[] | string[]>(null);\n\n\n  var _useState2 = useState(props.value || []),\n      fileList = _useState2[0],\n      setFileList = _useState2[1];\n\n  var _useState3 = useState(true),\n      showInput = _useState3[0],\n      setShowInput = _useState3[1];\n\n  var classes = useStyles(); // const { reset, register, watch, setError, setValue, clearErrors } = methods;\n\n  var changeHandler = function changeHandler(event) {\n    var target = event.target;\n    setClear(false);\n\n    try {\n      if (!props.multiple) {\n        var _props$methods;\n\n        var reader = new FileReader();\n        var file = target.files[0]; // setFileName(file.name);\n\n        reader.onload = function () {\n          props.onReadData && props.onReadData({\n            result: reader.result.toString(),\n            file: file\n          });\n        }; // setFileContent(file);\n\n\n        reader.readAsText(file);\n        setFileList([file.name]);\n        (_props$methods = props.methods) === null || _props$methods === void 0 ? void 0 : _props$methods.setValue(props.name, [file]);\n        props.onChange && props.onChange(file, props.methods);\n      } else {\n        var _props$methods2;\n\n        var faux = [];\n        var list = [];\n        Array.from(target.files).forEach(function (file) {\n          var reader = new FileReader();\n\n          reader.onload = function () {\n            props.onReadData && props.onReadData({\n              result: reader.result.toString(),\n              file: file\n            });\n          };\n\n          reader.readAsText(file);\n          faux.push(file);\n          list.push(file.name);\n        }); // setFileContent(faux);\n\n        setFileList([].concat(_toConsumableArray(fileList), list));\n        (_props$methods2 = props.methods) === null || _props$methods2 === void 0 ? void 0 : _props$methods2.setValue(props.name, faux);\n        props.onChange && props.onChange(faux);\n      }\n    } catch (e) {//TODO some thing\n    }\n  };\n\n  var removeFile = function removeFile(file) {\n    if (typeof fileList === 'string') {\n      setFileList([]);\n    } else {\n      var files = fileList.filter(function (f) {\n        return f !== file;\n      });\n      setFileList(files);\n    } // setFileName(null);\n    // setFileContent(null);\n    // setClear(true);\n\n\n    props.onRemove && props.onRemove(file);\n  };\n\n  var getFileListItem = function getFileListItem(file) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.fileLink,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: file,\n        target: \"_blank\",\n        children: getFileName(file)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: function onClick() {\n          removeFile(file);\n        },\n        color: \"default\",\n        children: /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var getFileList = function getFileList() {\n    if (typeof fileList === 'string') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: getFileListItem(fileList)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, _this);\n    }\n\n    return fileList.map(function (file, i) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: getFileListItem(file)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, _this);\n    });\n  }; // useEffect(() => {\n  //   if () {\n  //     let files = props.value || [];\n  //     if (props.value && typeof props.value === 'string') {\n  //       files = [files];\n  //     }\n  //     setFileList(files);\n  //   }\n  // }, [props, fileList, setFileList]);\n\n\n  useEffect(function () {\n    setShowInput(!props.multiple && fileList.length <= 0 || props.multiple && props.max && fileList.length < props.max);\n  }, [props, fileList, setShowInput]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.label && /*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: 'file-input',\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }, this), showInput && /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: props.accept,\n      id: \"file-input\",\n      multiple: props.multiple,\n      type: \"file\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), props.accept && /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.helpText,\n      color: \"textPrimary\",\n      variant: \"caption\",\n      display: \"block\",\n      gutterBottom: true,\n      children: [\"Archivos aceptados: \", props.accept]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), props.error && /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      color: \"error\",\n      children: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), getFileList()]\n  }, void 0, true);\n}\n\n_s(FileInput, \"AxVa9n9JRl3FTIqcWTSb+foQjxw=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/common/FileInput.tsx"],"names":["IconButton","InputLabel","Link","makeStyles","Typography","Cancel","React","useEffect","useState","getFileName","useStyles","theme","helpText","fontSize","fileLink","FileInput","props","clear","setClear","value","fileList","setFileList","showInput","setShowInput","classes","changeHandler","event","target","multiple","reader","FileReader","file","files","onload","onReadData","result","toString","readAsText","name","methods","setValue","onChange","faux","list","Array","from","forEach","push","e","removeFile","filter","f","onRemove","getFileListItem","getFileList","map","i","length","max","label","accept","error"],"mappings":"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","sourcesContent":["// Third-party imports\nimport { IconButton, InputLabel, Link, makeStyles, Typography } from '@material-ui/core';\nimport { Cancel } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport { getFileName } from '../common/helpers';\nimport { useFormContext } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  helpText: {\n    fontSize: '12px',\n  },\n  fileLink: {\n    fontSize: '16px',\n  },\n}));\n// Component\nexport default function FileInput(props) {\n  const [clear, setClear] = useState(false);\n  // const [fileName, setFileName] = useState('');\n  // const [fileContent, setFileContent] = useState<File | string | File[] | string[]>(null);\n  const [fileList, setFileList] = useState(props.value || []);\n  const [showInput, setShowInput] = useState(true);\n  const classes = useStyles();\n  // const { reset, register, watch, setError, setValue, clearErrors } = methods;\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target;\n    setClear(false);\n    try {\n      if (!props.multiple) {\n        const reader = new FileReader();\n        const file = target.files[0];\n        // setFileName(file.name);\n        reader.onload = () => {\n          props.onReadData && props.onReadData({ result: reader.result.toString(), file });\n        };\n        // setFileContent(file);\n        reader.readAsText(file);\n        setFileList([file.name]);\n        props.methods?.setValue(props.name, [file]);\n        props.onChange && props.onChange(file, props.methods);\n      } else {\n        const faux = [];\n        const list = [];\n        Array.from(target.files).forEach((file) => {\n          const reader = new FileReader();\n          reader.onload = () => {\n            props.onReadData && props.onReadData({ result: reader.result.toString(), file });\n          };\n\n          reader.readAsText(file);\n          faux.push(file);\n          list.push(file.name);\n        });\n        // setFileContent(faux);\n        setFileList([...fileList, ...list]);\n        props.methods?.setValue(props.name, faux);\n        props.onChange && props.onChange(faux);\n      }\n    } catch (e) {\n      //TODO some thing\n    }\n  };\n\n  const removeFile = (file) => {\n    if (typeof fileList === 'string') {\n      setFileList([]);\n    } else {\n      const files = fileList.filter((f) => f !== file);\n      setFileList(files);\n    }\n    // setFileName(null);\n    // setFileContent(null);\n    // setClear(true);\n    props.onRemove && props.onRemove(file);\n  };\n\n  const getFileListItem = (file) => {\n    return (\n      <Typography className={classes.fileLink}>\n        <Link href={file} target=\"_blank\">\n          {getFileName(file)}\n        </Link>\n        <IconButton\n          onClick={() => {\n            removeFile(file);\n          }}\n          color=\"default\"\n        >\n          <Cancel />\n        </IconButton>\n      </Typography>\n    );\n  };\n\n  const getFileList = () => {\n    if (typeof fileList === 'string') {\n      return <span>{getFileListItem(fileList)}</span>;\n    }\n    return fileList.map((file, i) => {\n      return <span key={i}>{getFileListItem(file)}</span>;\n    });\n  };\n\n  // useEffect(() => {\n  //   if () {\n  //     let files = props.value || [];\n  //     if (props.value && typeof props.value === 'string') {\n  //       files = [files];\n  //     }\n  //     setFileList(files);\n  //   }\n  // }, [props, fileList, setFileList]);\n\n  useEffect(() => {\n    setShowInput(\n      (!props.multiple && fileList.length <= 0) ||\n        (props.multiple && props.max && fileList.length < props.max),\n    );\n  }, [props, fileList, setShowInput]);\n\n  return (\n    <>\n      {props.label && <InputLabel htmlFor={'file-input'}>{props.label}</InputLabel>}\n      {showInput && (\n        <input\n          accept={props.accept}\n          id=\"file-input\"\n          multiple={props.multiple}\n          type=\"file\"\n          onChange={changeHandler}\n        />\n      )}\n      {props.accept && (\n        <Typography\n          className={classes.helpText}\n          color=\"textPrimary\"\n          variant=\"caption\"\n          display=\"block\"\n          gutterBottom\n        >\n          Archivos aceptados: {props.accept}\n        </Typography>\n      )}\n      {props.error && (\n        <Typography component=\"p\" color=\"error\">\n          {props.error}\n        </Typography>\n      )}\n      {getFileList()}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}