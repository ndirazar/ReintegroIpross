{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// Third-party imports\nimport React, { useEffect, useState } from 'react';\n// Component\nexport default function FileInput(props) {\n  const {\n    0: clear,\n    1: setClear\n  } = useState(false);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState('');\n  const {\n    0: fileContent,\n    1: setFileContent\n  } = useState(null);\n\n  const changeHandler = event => {\n    const target = event.target;\n    setClear(false);\n\n    try {\n      if (!props.multiple) {\n        const reader = new FileReader();\n        const file = target.files[0];\n        setFileName(file.name);\n\n        reader.onload = () => {\n          props.onReadData && props.onReadData({\n            result: reader.result.toString(),\n            file\n          });\n        };\n\n        setFileContent(file);\n        reader.readAsText(file);\n      } else {\n        const faux = [];\n        Array.from(target.files).forEach(file => {\n          const reader = new FileReader();\n\n          reader.onload = () => {\n            props.onReadData && props.onReadData({\n              result: reader.result.toString(),\n              file\n            });\n          };\n\n          reader.readAsText(file);\n          faux.push(file);\n        });\n        setFileContent(faux);\n      }\n    } catch (e) {//TODO some thing\n    }\n  };\n\n  const removeFile = () => {\n    setFileName(null);\n    setFileContent(null);\n    setClear(true);\n    props.onRemove && props.onRemove();\n  };\n\n  useEffect(() => {\n    if (props.previousFile && !fileName && !clear) {\n      setFileName(props.previousFile);\n    }\n  }, [props]);\n  useEffect(() => {\n    if (fileContent && fileContent !== '') {\n      props.onChange && props.onChange(fileContent);\n    }\n  }, [fileContent]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    children: /*#__PURE__*/_jsx(\"input\", {\n      accept: props.accept,\n      id: \"file-input\",\n      multiple: props.multiple,\n      type: \"file\",\n      onChange: changeHandler\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}