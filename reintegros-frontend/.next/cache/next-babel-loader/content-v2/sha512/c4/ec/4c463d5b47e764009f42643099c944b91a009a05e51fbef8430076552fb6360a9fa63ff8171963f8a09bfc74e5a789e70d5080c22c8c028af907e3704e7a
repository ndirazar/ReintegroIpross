{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/login/login.tsx\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { APP_NAME, ERRORS, LOGIN } from '../../labels';\nimport Alert from '../common/Alert';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  logo: {\n    margin: '60px 0'\n  },\n  title: {\n    fontSize: '1.375rem',\n    fontWeight: 600\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& input': {\n      height: '55px'\n    }\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Login({\n  onSubmit,\n  error\n}) {\n  var _ERRORS$error;\n\n  const classes = useStyles();\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: recovery,\n    1: setRecovery\n  } = useState(null);\n\n  const handleSubmit = async event => {\n    onSubmit(username, password);\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/logo-ipross.png\",\n        alt: APP_NAME,\n        width: 143,\n        height: 63,\n        className: classes.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        className: classes.title,\n        children: APP_NAME\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"Nombre de usuario\",\n          name: \"username\",\n          autoComplete: \"username\",\n          autoFocus: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: LOGIN.password,\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", (_ERRORS$error = ERRORS[error]) !== null && _ERRORS$error !== void 0 ? _ERRORS$error : ERRORS.unknown, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: LOGIN.signIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              variant: \"body2\",\n              onClick: () => setRecovery(LOGIN.passwordRecoveryMessage),\n              children: LOGIN.passwordRecoveryButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      open: recovery,\n      severity: \"warning\",\n      message: recovery,\n      autoHideAfter: 3000,\n      onClose: () => setRecovery(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/login/login.tsx"],"names":["React","useState","Button","CssBaseline","TextField","Link","Grid","Typography","makeStyles","Container","APP_NAME","ERRORS","LOGIN","Alert","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","logo","margin","title","fontSize","fontWeight","form","width","height","submit","Login","onSubmit","error","classes","username","setUsername","password","setPassword","recovery","setRecovery","handleSubmit","event","preventDefault","e","target","value","unknown","signIn","passwordRecoveryMessage","passwordRecoveryButton"],"mappings":"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","sourcesContent":["import React, { FormEvent, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { APP_NAME, ERRORS, LOGIN } from '../../labels';\nimport Alert from '../common/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  logo: {\n    margin: '60px 0',\n  },\n  title: {\n    fontSize: '1.375rem',\n    fontWeight: 600,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& input': {\n      height: '55px',\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nexport default function Login({ onSubmit, error }) {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [recovery, setRecovery] = useState(null);\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    onSubmit(username, password);\n    event.preventDefault();\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <span className={classes.paper}>\n        <img\n          src=\"/images/logo-ipross.png\"\n          alt={APP_NAME}\n          width={143}\n          height={63}\n          className={classes.logo}\n        />\n        <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n          {APP_NAME}\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Nombre de usuario\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <TextField\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label={LOGIN.password}\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {error && <Typography> {ERRORS[error] ?? ERRORS.unknown} </Typography>}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {LOGIN.signIn}\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link variant=\"body2\" onClick={() => setRecovery(LOGIN.passwordRecoveryMessage)}>\n                {LOGIN.passwordRecoveryButton}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </span>\n      <Alert\n        open={recovery}\n        severity=\"warning\"\n        message={recovery}\n        autoHideAfter={3000}\n        onClose={() => setRecovery(null)}\n      />\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}