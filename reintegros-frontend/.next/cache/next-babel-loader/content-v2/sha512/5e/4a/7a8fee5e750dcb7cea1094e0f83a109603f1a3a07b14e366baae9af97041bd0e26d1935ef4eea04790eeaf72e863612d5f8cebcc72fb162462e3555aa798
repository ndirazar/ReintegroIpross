{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport CuponesForm from './CuponesForm';\nimport CuponesList from './CuponesList';\nimport { post, put, remove } from '../api-call/service';\nimport Loading from '../common/Loading';\nimport { ACTIONS, ERRORS, LOADING, CUPONES } from '../../labels';\nimport Alert from '../common/Alert';\nimport ActionBar from '../common/ActionBar';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableFilters from '../common/TableFilters';\nimport filterConfig from './FiltersConfig';\nimport { objToQueryString, formatDate } from '../common/helpers';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst user = cookies.get('user');\nexport default function Cupones() {\n  var _user$delegacionPrinc;\n\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    page: 1,\n    size: 20,\n    delegacion: user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id,\n    fecha_alta__gt: '',\n    fecha_alta__lt: ''\n  });\n  const {\n    0: filterQueryStr,\n    1: setFilterQueryStr\n  } = useState(objToQueryString(filters));\n  const {\n    data,\n    error: errorGet,\n    mutate\n  } = useSWR(`${CUPONES.route}/?${filterQueryStr}`);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n  const cuponesActions = [{\n    label: ACTIONS.crete(CUPONES.name),\n    onClick: () => setOpenForm(!openForm),\n    icon: /*#__PURE__*/_jsx(SaveIcon, {})\n  }];\n\n  const handleSubmit = async data => {\n    try {\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        await put(CUPONES.route, _objectSpread({}, data), currentData === null || currentData === void 0 ? void 0 : currentData.id);\n      } else {\n        await post(CUPONES.route, _objectSpread({}, data));\n      }\n\n      setError(null);\n    } catch (error) {\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        setError('onEdit');\n      } else {\n        setError('onCreate');\n      }\n    }\n\n    setCurrentData(null);\n    setOpenForm(false);\n    mutate();\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await remove(`${CUPONES.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onEdit = async data => {\n    setOpenForm(false);\n    setCurrentData(data);\n    setOpenForm(true);\n  };\n\n  const handleChangePagination = pagination => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      page: pagination.page,\n      size: pagination.pageSize\n    }));\n  };\n\n  const handleFilter = filters => {\n    if (filters.fecha_alta__gt) {\n      filters.fecha_alta__gt = formatDate(filters.fecha_alta__gt);\n    } else {\n      delete filters.fecha_alta__gt;\n    }\n\n    if (filters.fecha_alta__lt) {\n      filters.fecha_alta__lt = formatDate(filters.fecha_alta__lt);\n    } else {\n      delete filters.fecha_alta__lt;\n    }\n\n    setFilters(filters);\n  };\n\n  useEffect(() => {\n    setFilterQueryStr(objToQueryString(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ActionBar, {\n      actions: []\n    }), /*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsx(CuponesForm, {\n        data: currentData,\n        handleSubmit: handleSubmit,\n        handleCancel: handleCancel\n      }), /*#__PURE__*/_jsx(TableFilters, {\n        title: \"Cupones\",\n        config: filterConfig,\n        onSubmit: handleFilter,\n        data: filters\n      }), /*#__PURE__*/_jsx(CuponesList, {\n        data: data,\n        handleDelete: handleDelete,\n        onEdit: onEdit,\n        onPaginationChange: handleChangePagination\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(CUPONES.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errorGet || error,\n      severity: \"error\",\n      message: error ? ERRORS[error](CUPONES.name) : ERRORS.onGet(CUPONES.name)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}