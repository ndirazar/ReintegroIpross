{"ast":null,"code":"import { format, parseISO } from 'date-fns';\nconst APP_NAME = 'Reintegros';\nconst DATE_FORMAT = 'dd/MM/yyyy';\nconst FORM_BUILDER = {\n  required: 'Campo requerido ',\n  min: 'El valor debe ser superior a ',\n  minLength: 'Longitud debe ser de al menos ',\n  max: 'El valor debe ser inferior a ',\n  maxLength: 'Longitud debe ser a lo sumo de ',\n  pattern: 'El formato no es válido',\n  default: 'Error desconocido'\n};\nconst USERS = {\n  name: 'Usuarios',\n  route: 'usuarios',\n  page: 'usuarios',\n  fields: {\n    username: 'Nombre de usuario',\n    email: 'Mail',\n    first_name: 'Nombre',\n    last_name: 'Apellido',\n    is_active: 'Activo',\n    groups: 'Roles',\n    delegaciones: 'Delegaciones'\n  },\n  renders: {\n    is_active: rowData => rowData ? 'Si' : 'No',\n    groups: rowData => rowData.groups.map(elem => elem.name).join(', '),\n    delegaciones: rowData => rowData.delegaciones.map(elem => elem.nombre).join(', ')\n  },\n  customActions: {\n    sync: 'Sincronizar Usuarios'\n  }\n};\nconst PRESTACIONES = {\n  name: 'Prestaciones',\n  route: 'api/prestaciones',\n  fields: {\n    auditor: 'Auditor',\n    cantidad: 'Cantidad',\n    categoria: 'Categoria',\n    prestador: 'Prestador',\n    nomenclador: 'Item',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado actual',\n    factura: 'Factura',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    periodo: 'Periodo',\n    adjuntos: 'Adjuntos'\n  },\n  optionsEstadoActual: [{\n    label: 'En curso',\n    value: 'enCurso'\n  }, {\n    label: 'Aceptado',\n    value: 'aceptado'\n  }, {\n    label: 'Rechazado',\n    value: 'rechazado'\n  }],\n  renders: {\n    categoria: rowData => rowData.categoria.nombre,\n    prestador: rowData => rowData.prestador.matricula,\n    nomenclador: rowData => rowData.nomenclador.descripcion,\n    factura: rowData => rowData.factura.archivo,\n    estadoActual: rowData => {\n      var _PRESTACIONES$options;\n\n      return (_PRESTACIONES$options = PRESTACIONES.optionsEstadoActual.find(elem => elem.value === rowData.estadoActual)) === null || _PRESTACIONES$options === void 0 ? void 0 : _PRESTACIONES$options.label;\n    },\n    fechaPractica: rowData => format(parseISO(rowData.fechaPractica), DATE_FORMAT)\n  }\n};\nconst NOMENCLADOR = {\n  name: 'Nomenclador',\n  route: 'nomenclador',\n  page: 'nomenclador',\n  fields: {\n    areaCubrir: 'Área a Cubrir',\n    capitulo: 'Capítulo',\n    codigo: 'Código',\n    complejidadPractica: 'Nivel de complejidad',\n    descripcion: 'Descripción',\n    fechaNorma: 'Fecha de la norma',\n    modalidadPresentacion: 'Modalidad de Prestación ',\n    montoFijoMensual: 'Monto Fijo Mensual ',\n    numeroNormaRespaldatoria: 'Nº Norma respaldatoria',\n    periodoTope: 'Periodo del tope',\n    programaSanitario: 'Programa sanitario',\n    topesCoberturaPeriodo: 'Topes de cobertura por período',\n    valorIpross: 'Valor IPROSS'\n  },\n  optionsModalidadPresentacion: [{\n    label: 'Ambulatoria',\n    value: 'ambulatoria'\n  }, {\n    label: 'Internación',\n    value: 'internacion'\n  }],\n  optionsPeriodoTope: [{\n    label: 'Día',\n    value: 'dia'\n  }, {\n    label: 'Mes',\n    value: 'mes'\n  }, {\n    label: 'Trimestre',\n    value: 'trimestre'\n  }, {\n    label: 'Año',\n    value: 'anio'\n  }],\n  renders: {\n    capitulo: rowData => `${rowData.capitulo.capitulo}-${rowData.capitulo.descripcion}`,\n    fechaNorma: rowData => format(parseISO(rowData.fechaNorma), DATE_FORMAT),\n    modalidadPresentacion: rowData => {\n      var _NOMENCLADOR$optionsM;\n\n      return (_NOMENCLADOR$optionsM = NOMENCLADOR.optionsModalidadPresentacion.find(elem => elem.value === rowData.modalidadPresentacion)) === null || _NOMENCLADOR$optionsM === void 0 ? void 0 : _NOMENCLADOR$optionsM.label;\n    },\n    periodoTope: rowData => {\n      var _NOMENCLADOR$optionsP;\n\n      return (_NOMENCLADOR$optionsP = NOMENCLADOR.optionsPeriodoTope.find(elem => elem.value === rowData.periodoTope)) === null || _NOMENCLADOR$optionsP === void 0 ? void 0 : _NOMENCLADOR$optionsP.label;\n    }\n  }\n};\nconst CAPITULO = {\n  name: 'Capitulo',\n  route: 'capitulo',\n  page: 'capitulo',\n  fields: {\n    coseguro: 'Coseguro',\n    capitulo: 'Capítulo',\n    descripción: 'Descripción'\n  },\n  renders: {}\n}; //Used by generator, dont remove this line #entitiesobject\n\nconst TABLE = {\n  labelRowsSelect: 'filas',\n  labelDisplayedRows: '{from}-{to} de {count}',\n  labelRowsPerPage: 'Filas por página',\n  firstAriaLabel: 'Primera página',\n  firstTooltip: 'Primera página',\n  previousAriaLabel: 'Anterior',\n  previousTooltip: 'Anterior',\n  nextAriaLabel: 'Siguiente',\n  nextTooltip: 'Siguiente',\n  lastAriaLabel: 'Última página',\n  lastTooltip: 'Última página',\n  actions: 'Acciones'\n};\nconst LOGIN = {\n  passwordRecoveryMessage: 'Contacte al administrador de LDAP: adminldap@dominio.com',\n  passwordRecoveryButton: 'Olvide mi contraseña',\n  signIn: 'Entrar',\n  logout: 'Salir'\n};\nconst SOLICITUDES = {\n  name: 'Solicitudes',\n  route: 'api/solicitudes',\n  page: 'solicitudes',\n  fields: {\n    estadoActual: 'Estado actual',\n    fechaAlta: 'Fecha de alta',\n    'delegacion.nombre': 'Delegación',\n    'afiliado.codigo': 'Afiliado'\n  },\n  renders: {\n    estadoActual: rowData => {\n      var _SOLICITUDES$optionsE;\n\n      return (_SOLICITUDES$optionsE = SOLICITUDES.optionsEstadoActual.find(elem => elem.value === rowData.estadoActual)) === null || _SOLICITUDES$optionsE === void 0 ? void 0 : _SOLICITUDES$optionsE.label;\n    },\n    fechaAlta: rowData => format(parseISO(rowData.fechaAlta), DATE_FORMAT)\n  },\n  optionsEstadoActual: [{\n    label: 'Sin pagos realizados',\n    value: 'sinPagos'\n  }, {\n    label: 'Pago parcial',\n    value: 'pagoParcial'\n  }, {\n    label: 'Pago total',\n    value: 'pagoTotal'\n  }],\n  customActions: {\n    addPresentacion: 'Agregar prestacion'\n  }\n};\nconst MAIN_ENTITIES = [USERS, NOMENCLADOR, //Used by generator, dont remove this line #addtomenu\nSOLICITUDES];\n\nconst LOADING = entity => `Cargando ${entity}`;\n\nconst ERRORS = {\n  unknown: 'Error desconocido',\n  onGet: entity => `Error al obtener ${entity}`,\n  onCreate: entity => `Error al crear ${entity}`,\n  onDelete: entity => `Error al eliminar ${entity}`,\n  onUpdate: entity => `Error al actualizar ${entity}`,\n  onSync: entity => `Error al sincronizar ${entity}`,\n  onDeactivate: entity => `Error al desactivar ${entity}`,\n  onSetGroups: entity => `Error al modificar los roles del usuario`,\n  onSetDelegaciones: entity => 'Error al modificar las delegaciones del usuario',\n  inactiveUser: 'Tu cuenta está inactiva. Contactar al administrador: admin@dominio.com',\n  invalidLdap: 'Usuario o contraseña incorrecta. Contacte al administrador de LDAP: adminldap@dominio.com'\n};\nconst INFO = {\n  onSync: (entity, count) => {\n    count === 0 ? 'Todos los usuarios ya estan sincronizados' : `Se sincronizaron ${count} ${entity}`;\n  },\n  setGroups: `Se actualizo correctamente el usuario`,\n  setDelegaciones: `Se actualizo correctamente el usuario`,\n  //Spinner message\n  working: 'Por favor espere...'\n};\nconst ACTIONS = {\n  crete: entity => `Crear ${entity}`,\n  delete: entity => `Eliminar ${entity}`,\n  update: entity => `Actualizar ${entity}`\n};\nconst STEPPER_SOLICITUDES = {\n  add: 'Agregar solicitud',\n  end: 'Solicitud cargada, presione cerrar para terminar',\n  steps: [{\n    title: 'Crear solicitud',\n    description: 'Complete los siguientes campos con la información de la solicitud:'\n  }, {\n    title: 'Agregar prestaciones',\n    description: 'Sube la factura para agregar la prestación. Una vez subida, completa el formulario'\n  }, {\n    title: 'Guardar',\n    description: 'Confirma los datos para guardar la solicitud'\n  }, {\n    title: 'Agregar adjuntos(opcional)',\n    description: 'Agrega archivos adjuntos a las prestaciones de la lista'\n  }],\n  back: 'Atras',\n  next: 'Siguiente',\n  finish: 'Finalizar',\n  cancel: 'Cancelar',\n  close: 'Cerrar',\n  save: 'Guardar y terminar',\n  saveAndContinue: 'Guardar y agregar otra',\n  onSubmitSolicitud: {\n    title: 'Solicitud creada!',\n    message: 'Se creo nueva solicitud',\n    severity: 'success'\n  },\n  onSubmitFactura: {\n    title: 'Factura guardada!',\n    message: 'Se guardo la factura, completa los datos de la prestacion para continuar. Luego elige siguiente para terminar o guardar y agregar para seguir cargando prestaciones',\n    severity: 'success'\n  },\n  onSubmitPrestacion: count => ({\n    title: `${count}º Prestacion creada`,\n    message: `Se creo la ${count}º prestación`,\n    severity: 'success'\n  }),\n  onNewPrestacion: count => ({\n    title: 'Detalles prestación',\n    message: `Complete formulario con los detalles de la ${count}º prestación asociada a la solicitud`,\n    severity: 'info'\n  }),\n  onNewFactura: count => ({\n    title: 'Cargar factura',\n    message: `Suba el archivo de la factura correspondiente a la ${count}º prestación asociada a la solicitud`,\n    severity: 'info'\n  }),\n  onFinish: {\n    title: 'Proceso finalizado',\n    message: 'Solicitud completa, puede ver un resumen de los datos ingresados a continuación',\n    severity: 'info'\n  }\n};\nexport { STEPPER_SOLICITUDES, FORM_BUILDER, USERS, TABLE, NOMENCLADOR, MAIN_ENTITIES, APP_NAME, DATE_FORMAT, LOADING, ERRORS, ACTIONS, SOLICITUDES, LOGIN, INFO, PRESTACIONES, CAPITULO };","map":{"version":3,"sources":["/reintegros/reintegros-frontend/labels.ts"],"names":["format","parseISO","APP_NAME","DATE_FORMAT","FORM_BUILDER","required","min","minLength","max","maxLength","pattern","default","USERS","name","route","page","fields","username","email","first_name","last_name","is_active","groups","delegaciones","renders","rowData","map","elem","join","nombre","customActions","sync","PRESTACIONES","auditor","cantidad","categoria","prestador","nomenclador","coseguroNomenclador","valorIprossNomenclador","valorPrestacion","montoReintegrar","estadoActual","factura","cobertura","fechaPractica","periodo","adjuntos","optionsEstadoActual","label","value","matricula","descripcion","archivo","find","NOMENCLADOR","areaCubrir","capitulo","codigo","complejidadPractica","fechaNorma","modalidadPresentacion","montoFijoMensual","numeroNormaRespaldatoria","periodoTope","programaSanitario","topesCoberturaPeriodo","valorIpross","optionsModalidadPresentacion","optionsPeriodoTope","CAPITULO","coseguro","descripción","TABLE","labelRowsSelect","labelDisplayedRows","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","actions","LOGIN","passwordRecoveryMessage","passwordRecoveryButton","signIn","logout","SOLICITUDES","fechaAlta","addPresentacion","MAIN_ENTITIES","LOADING","entity","ERRORS","unknown","onGet","onCreate","onDelete","onUpdate","onSync","onDeactivate","onSetGroups","onSetDelegaciones","inactiveUser","invalidLdap","INFO","count","setGroups","setDelegaciones","working","ACTIONS","crete","delete","update","STEPPER_SOLICITUDES","add","end","steps","title","description","back","next","finish","cancel","close","save","saveAndContinue","onSubmitSolicitud","message","severity","onSubmitFactura","onSubmitPrestacion","onNewPrestacion","onNewFactura","onFinish"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AAEA,MAAMC,QAAQ,GAAG,YAAjB;AAEA,MAAMC,WAAW,GAAG,YAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,kBADS;AAEnBC,EAAAA,GAAG,EAAE,+BAFc;AAGnBC,EAAAA,SAAS,EAAE,gCAHQ;AAInBC,EAAAA,GAAG,EAAE,+BAJc;AAKnBC,EAAAA,SAAS,EAAE,iCALQ;AAMnBC,EAAAA,OAAO,EAAE,yBANU;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB;AAUA,MAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,UADM;AAEZC,EAAAA,KAAK,EAAE,UAFK;AAGZC,EAAAA,IAAI,EAAE,UAHM;AAIZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,mBADJ;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,SAAS,EAAE,UAJL;AAKNC,IAAAA,SAAS,EAAE,QALL;AAMNC,IAAAA,MAAM,EAAE,OANF;AAONC,IAAAA,YAAY,EAAE;AAPR,GAJI;AAaZC,EAAAA,OAAO,EAAE;AACPH,IAAAA,SAAS,EAAGI,OAAD,IAAcA,OAAO,GAAG,IAAH,GAAU,IADnC;AAEPH,IAAAA,MAAM,EAAGG,OAAD,IAAaA,OAAO,CAACH,MAAR,CAAeI,GAAf,CAAoBC,IAAD,IAAUA,IAAI,CAACd,IAAlC,EAAwCe,IAAxC,CAA6C,IAA7C,CAFd;AAGPL,IAAAA,YAAY,EAAGE,OAAD,IAAaA,OAAO,CAACF,YAAR,CAAqBG,GAArB,CAA0BC,IAAD,IAAUA,IAAI,CAACE,MAAxC,EAAgDD,IAAhD,CAAqD,IAArD;AAHpB,GAbG;AAkBZE,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAE;AADO;AAlBH,CAAd;AAuBA,MAAMC,YAAY,GAAG;AACnBnB,EAAAA,IAAI,EAAE,cADa;AAEnBC,EAAAA,KAAK,EAAE,kBAFY;AAInBE,EAAAA,MAAM,EAAE;AACNiB,IAAAA,OAAO,EAAE,SADH;AAENC,IAAAA,QAAQ,EAAE,UAFJ;AAGNC,IAAAA,SAAS,EAAE,WAHL;AAINC,IAAAA,SAAS,EAAE,WAJL;AAKNC,IAAAA,WAAW,EAAE,MALP;AAMNC,IAAAA,mBAAmB,EAAE,UANf;AAONC,IAAAA,sBAAsB,EAAE,cAPlB;AAQNC,IAAAA,eAAe,EAAE,cARX;AASNC,IAAAA,eAAe,EAAE,oBATX;AAUNC,IAAAA,YAAY,EAAE,eAVR;AAWNC,IAAAA,OAAO,EAAE,SAXH;AAYNC,IAAAA,SAAS,EAAE,WAZL;AAaNC,IAAAA,aAAa,EAAE,mBAbT;AAcNC,IAAAA,OAAO,EAAE,SAdH;AAeNC,IAAAA,QAAQ,EAAE;AAfJ,GAJW;AAsBnBC,EAAAA,mBAAmB,EAAE,CACnB;AAAEC,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GADmB,EAEnB;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAFmB,EAGnB;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAHmB,CAtBF;AA2BnB1B,EAAAA,OAAO,EAAE;AACPW,IAAAA,SAAS,EAAGV,OAAD,IAAaA,OAAO,CAACU,SAAR,CAAkBN,MADnC;AAEPO,IAAAA,SAAS,EAAGX,OAAD,IAAaA,OAAO,CAACW,SAAR,CAAkBe,SAFnC;AAGPd,IAAAA,WAAW,EAAGZ,OAAD,IAAaA,OAAO,CAACY,WAAR,CAAoBe,WAHvC;AAIPT,IAAAA,OAAO,EAAGlB,OAAD,IAAaA,OAAO,CAACkB,OAAR,CAAgBU,OAJ/B;AAKPX,IAAAA,YAAY,EAAGjB,OAAD;AAAA;;AAAA,sCACZO,YAAY,CAACgB,mBAAb,CAAiCM,IAAjC,CAAuC3B,IAAD,IAAUA,IAAI,CAACuB,KAAL,KAAezB,OAAO,CAACiB,YAAvE,CADY,0DACZ,sBAAsFO,KAD1E;AAAA,KALP;AAOPJ,IAAAA,aAAa,EAAGpB,OAAD,IAAazB,MAAM,CAACC,QAAQ,CAACwB,OAAO,CAACoB,aAAT,CAAT,EAAkC1C,WAAlC;AAP3B;AA3BU,CAArB;AAqCA,MAAMoD,WAAW,GAAG;AAClB1C,EAAAA,IAAI,EAAE,aADY;AAElBC,EAAAA,KAAK,EAAE,aAFW;AAGlBC,EAAAA,IAAI,EAAE,aAHY;AAIlBC,EAAAA,MAAM,EAAE;AACNwC,IAAAA,UAAU,EAAE,eADN;AAENC,IAAAA,QAAQ,EAAE,UAFJ;AAINC,IAAAA,MAAM,EAAE,QAJF;AAKNC,IAAAA,mBAAmB,EAAE,sBALf;AAMNP,IAAAA,WAAW,EAAE,aANP;AAONQ,IAAAA,UAAU,EAAE,mBAPN;AAQNC,IAAAA,qBAAqB,EAAE,0BARjB;AASNC,IAAAA,gBAAgB,EAAE,qBATZ;AAUNC,IAAAA,wBAAwB,EAAE,wBAVpB;AAWNC,IAAAA,WAAW,EAAE,kBAXP;AAYNC,IAAAA,iBAAiB,EAAE,oBAZb;AAaNC,IAAAA,qBAAqB,EAAE,gCAbjB;AAeNC,IAAAA,WAAW,EAAE;AAfP,GAJU;AAqBlBC,EAAAA,4BAA4B,EAAE,CAC5B;AAAEnB,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAD4B,EAE5B;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAF4B,CArBZ;AAyBlBmB,EAAAA,kBAAkB,EAAE,CAClB;AAAEpB,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADkB,EAElB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFkB,EAGlB;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAHkB,EAIlB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJkB,CAzBF;AAgClB1B,EAAAA,OAAO,EAAE;AACPiC,IAAAA,QAAQ,EAAGhC,OAAD,IAAc,GAAEA,OAAO,CAACgC,QAAR,CAAiBA,QAAS,IAAGhC,OAAO,CAACgC,QAAR,CAAiBL,WAAY,EAD7E;AAEPQ,IAAAA,UAAU,EAAGnC,OAAD,IAAazB,MAAM,CAACC,QAAQ,CAACwB,OAAO,CAACmC,UAAT,CAAT,EAA+BzD,WAA/B,CAFxB;AAGP0D,IAAAA,qBAAqB,EAAGpC,OAAD;AAAA;;AAAA,sCACrB8B,WAAW,CAACa,4BAAZ,CAAyCd,IAAzC,CACG3B,IAAD,IAAUA,IAAI,CAACuB,KAAL,KAAezB,OAAO,CAACoC,qBADnC,CADqB,0DACrB,sBAEGZ,KAHkB;AAAA,KAHhB;AAOPe,IAAAA,WAAW,EAAGvC,OAAD;AAAA;;AAAA,sCACX8B,WAAW,CAACc,kBAAZ,CAA+Bf,IAA/B,CAAqC3B,IAAD,IAAUA,IAAI,CAACuB,KAAL,KAAezB,OAAO,CAACuC,WAArE,CADW,0DACX,sBAAmFf,KADxE;AAAA;AAPN;AAhCS,CAApB;AA2CA,MAAMqB,QAAQ,GAAG;AACfzD,EAAAA,IAAI,EAAE,UADS;AAEfC,EAAAA,KAAK,EAAE,UAFQ;AAGfC,EAAAA,IAAI,EAAE,UAHS;AAIfC,EAAAA,MAAM,EAAE;AACNuD,IAAAA,QAAQ,EAAE,UADJ;AAENd,IAAAA,QAAQ,EAAE,UAFJ;AAINe,IAAAA,WAAW,EAAE;AAJP,GAJO;AAWfhD,EAAAA,OAAO,EAAE;AAXM,CAAjB,C,CAaA;;AAEA,MAAMiD,KAAK,GAAG;AACZC,EAAAA,eAAe,EAAE,OADL;AAEZC,EAAAA,kBAAkB,EAAE,wBAFR;AAGZC,EAAAA,gBAAgB,EAAE,kBAHN;AAIZC,EAAAA,cAAc,EAAE,gBAJJ;AAKZC,EAAAA,YAAY,EAAE,gBALF;AAMZC,EAAAA,iBAAiB,EAAE,UANP;AAOZC,EAAAA,eAAe,EAAE,UAPL;AAQZC,EAAAA,aAAa,EAAE,WARH;AASZC,EAAAA,WAAW,EAAE,WATD;AAUZC,EAAAA,aAAa,EAAE,eAVH;AAWZC,EAAAA,WAAW,EAAE,eAXD;AAYZC,EAAAA,OAAO,EAAE;AAZG,CAAd;AAcA,MAAMC,KAAK,GAAG;AACZC,EAAAA,uBAAuB,EAAE,0DADb;AAEZC,EAAAA,sBAAsB,EAAE,sBAFZ;AAGZC,EAAAA,MAAM,EAAE,QAHI;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAd;AAMA,MAAMC,WAAW,GAAG;AAClB9E,EAAAA,IAAI,EAAE,aADY;AAElBC,EAAAA,KAAK,EAAE,iBAFW;AAGlBC,EAAAA,IAAI,EAAE,aAHY;AAIlBC,EAAAA,MAAM,EAAE;AACN0B,IAAAA,YAAY,EAAE,eADR;AAENkD,IAAAA,SAAS,EAAE,eAFL;AAGN,yBAAqB,YAHf;AAIN,uBAAmB;AAJb,GAJU;AAUlBpE,EAAAA,OAAO,EAAE;AACPkB,IAAAA,YAAY,EAAGjB,OAAD;AAAA;;AAAA,sCACZkE,WAAW,CAAC3C,mBAAZ,CAAgCM,IAAhC,CAAsC3B,IAAD,IAAUA,IAAI,CAACuB,KAAL,KAAezB,OAAO,CAACiB,YAAtE,CADY,0DACZ,sBAAqFO,KADzE;AAAA,KADP;AAGP2C,IAAAA,SAAS,EAAGnE,OAAD,IAAazB,MAAM,CAACC,QAAQ,CAACwB,OAAO,CAACmE,SAAT,CAAT,EAA8BzF,WAA9B;AAHvB,GAVS;AAelB6C,EAAAA,mBAAmB,EAAE,CACnB;AAAEC,IAAAA,KAAK,EAAE,sBAAT;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADmB,EAEnB;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAFmB,EAGnB;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHmB,CAfH;AAoBlBpB,EAAAA,aAAa,EAAE;AACb+D,IAAAA,eAAe,EAAE;AADJ;AApBG,CAApB;AAyBA,MAAMC,aAAa,GAAG,CACpBlF,KADoB,EAEpB2C,WAFoB,EAGpB;AACAoC,WAJoB,CAAtB;;AAOA,MAAMI,OAAO,GAAIC,MAAD,IAAa,YAAWA,MAAO,EAA/C;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,mBADI;AAEbC,EAAAA,KAAK,EAAGH,MAAD,IAAa,oBAAmBA,MAAO,EAFjC;AAGbI,EAAAA,QAAQ,EAAGJ,MAAD,IAAa,kBAAiBA,MAAO,EAHlC;AAIbK,EAAAA,QAAQ,EAAGL,MAAD,IAAa,qBAAoBA,MAAO,EAJrC;AAKbM,EAAAA,QAAQ,EAAGN,MAAD,IAAa,uBAAsBA,MAAO,EALvC;AAMbO,EAAAA,MAAM,EAAGP,MAAD,IAAa,wBAAuBA,MAAO,EANtC;AAObQ,EAAAA,YAAY,EAAGR,MAAD,IAAa,uBAAsBA,MAAO,EAP3C;AAQbS,EAAAA,WAAW,EAAGT,MAAD,IAAa,0CARb;AASbU,EAAAA,iBAAiB,EAAGV,MAAD,IAAY,iDATlB;AAUbW,EAAAA,YAAY,EAAE,wEAVD;AAWbC,EAAAA,WAAW,EACT;AAZW,CAAf;AAeA,MAAMC,IAAI,GAAG;AACXN,EAAAA,MAAM,EAAE,CAACP,MAAD,EAASc,KAAT,KAAmB;AACzBA,IAAAA,KAAK,KAAK,CAAV,GACI,2CADJ,GAEK,oBAAmBA,KAAM,IAAGd,MAAO,EAFxC;AAGD,GALU;AAMXe,EAAAA,SAAS,EAAG,uCAND;AAOXC,EAAAA,eAAe,EAAG,uCAPP;AAQX;AACAC,EAAAA,OAAO,EAAE;AATE,CAAb;AAYA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAGnB,MAAD,IAAa,SAAQA,MAAO,EADrB;AAEdoB,EAAAA,MAAM,EAAGpB,MAAD,IAAa,YAAWA,MAAO,EAFzB;AAGdqB,EAAAA,MAAM,EAAGrB,MAAD,IAAa,cAAaA,MAAO;AAH3B,CAAhB;AAMA,MAAMsB,mBAAmB,GAAG;AAC1BC,EAAAA,GAAG,EAAE,mBADqB;AAE1BC,EAAAA,GAAG,EAAE,kDAFqB;AAG1BC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADK,EAKL;AACED,IAAAA,KAAK,EAAE,sBADT;AAEEC,IAAAA,WAAW,EACT;AAHJ,GALK,EAWL;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,WAAW,EAAE;AAAjC,GAXK,EAYL;AACED,IAAAA,KAAK,EAAE,4BADT;AAEEC,IAAAA,WAAW,EAAE;AAFf,GAZK,CAHmB;AAoB1BC,EAAAA,IAAI,EAAE,OApBoB;AAqB1BC,EAAAA,IAAI,EAAE,WArBoB;AAsB1BC,EAAAA,MAAM,EAAE,WAtBkB;AAuB1BC,EAAAA,MAAM,EAAE,UAvBkB;AAwB1BC,EAAAA,KAAK,EAAE,QAxBmB;AAyB1BC,EAAAA,IAAI,EAAE,oBAzBoB;AA0B1BC,EAAAA,eAAe,EAAE,wBA1BS;AA2B1BC,EAAAA,iBAAiB,EAAE;AACjBT,IAAAA,KAAK,EAAE,mBADU;AAEjBU,IAAAA,OAAO,EAAE,yBAFQ;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GA3BO;AAgC1BC,EAAAA,eAAe,EAAE;AACfZ,IAAAA,KAAK,EAAE,mBADQ;AAEfU,IAAAA,OAAO,EACL,qKAHa;AAIfC,IAAAA,QAAQ,EAAE;AAJK,GAhCS;AAsC1BE,EAAAA,kBAAkB,EAAGzB,KAAD,KAAY;AAC9BY,IAAAA,KAAK,EAAG,GAAEZ,KAAM,qBADc;AAE9BsB,IAAAA,OAAO,EAAG,cAAatB,KAAM,cAFC;AAG9BuB,IAAAA,QAAQ,EAAE;AAHoB,GAAZ,CAtCM;AA2C1BG,EAAAA,eAAe,EAAG1B,KAAD,KAAY;AAC3BY,IAAAA,KAAK,EAAE,qBADoB;AAE3BU,IAAAA,OAAO,EAAG,8CAA6CtB,KAAM,sCAFlC;AAG3BuB,IAAAA,QAAQ,EAAE;AAHiB,GAAZ,CA3CS;AAgD1BI,EAAAA,YAAY,EAAG3B,KAAD,KAAY;AACxBY,IAAAA,KAAK,EAAE,gBADiB;AAExBU,IAAAA,OAAO,EAAG,sDAAqDtB,KAAM,sCAF7C;AAGxBuB,IAAAA,QAAQ,EAAE;AAHc,GAAZ,CAhDY;AAqD1BK,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,KAAK,EAAE,oBADC;AAERU,IAAAA,OAAO,EAAE,iFAFD;AAGRC,IAAAA,QAAQ,EAAE;AAHF;AArDgB,CAA5B;AA2DA,SACEf,mBADF,EAEElH,YAFF,EAGEQ,KAHF,EAIE6D,KAJF,EAKElB,WALF,EAMEuC,aANF,EAOE5F,QAPF,EAQEC,WARF,EASE4F,OATF,EAUEE,MAVF,EAWEiB,OAXF,EAYEvB,WAZF,EAaEL,KAbF,EAcEuB,IAdF,EAeE7E,YAfF,EAgBEsC,QAhBF","sourcesContent":["import { format, parseISO } from 'date-fns';\n\nconst APP_NAME = 'Reintegros';\n\nconst DATE_FORMAT = 'dd/MM/yyyy';\nconst FORM_BUILDER = {\n  required: 'Campo requerido ',\n  min: 'El valor debe ser superior a ',\n  minLength: 'Longitud debe ser de al menos ',\n  max: 'El valor debe ser inferior a ',\n  maxLength: 'Longitud debe ser a lo sumo de ',\n  pattern: 'El formato no es válido',\n  default: 'Error desconocido',\n};\n\nconst USERS = {\n  name: 'Usuarios',\n  route: 'usuarios',\n  page: 'usuarios',\n  fields: {\n    username: 'Nombre de usuario',\n    email: 'Mail',\n    first_name: 'Nombre',\n    last_name: 'Apellido',\n    is_active: 'Activo',\n    groups: 'Roles',\n    delegaciones: 'Delegaciones',\n  },\n  renders: {\n    is_active: (rowData) => (rowData ? 'Si' : 'No'),\n    groups: (rowData) => rowData.groups.map((elem) => elem.name).join(', '),\n    delegaciones: (rowData) => rowData.delegaciones.map((elem) => elem.nombre).join(', '),\n  },\n  customActions: {\n    sync: 'Sincronizar Usuarios',\n  },\n};\n\nconst PRESTACIONES = {\n  name: 'Prestaciones',\n  route: 'api/prestaciones',\n\n  fields: {\n    auditor: 'Auditor',\n    cantidad: 'Cantidad',\n    categoria: 'Categoria',\n    prestador: 'Prestador',\n    nomenclador: 'Item',\n    coseguroNomenclador: 'Coseguro',\n    valorIprossNomenclador: 'Valor IPROSS',\n    valorPrestacion: 'Monto pagado',\n    montoReintegrar: 'Monto a reintegrar',\n    estadoActual: 'Estado actual',\n    factura: 'Factura',\n    cobertura: 'Cobertura',\n    fechaPractica: 'Fecha de práctica',\n    periodo: 'Periodo',\n    adjuntos: 'Adjuntos',\n  },\n\n  optionsEstadoActual: [\n    { label: 'En curso', value: 'enCurso' },\n    { label: 'Aceptado', value: 'aceptado' },\n    { label: 'Rechazado', value: 'rechazado' },\n  ],\n  renders: {\n    categoria: (rowData) => rowData.categoria.nombre,\n    prestador: (rowData) => rowData.prestador.matricula,\n    nomenclador: (rowData) => rowData.nomenclador.descripcion,\n    factura: (rowData) => rowData.factura.archivo,\n    estadoActual: (rowData) =>\n      PRESTACIONES.optionsEstadoActual.find((elem) => elem.value === rowData.estadoActual)?.label,\n    fechaPractica: (rowData) => format(parseISO(rowData.fechaPractica), DATE_FORMAT),\n  },\n};\nconst NOMENCLADOR = {\n  name: 'Nomenclador',\n  route: 'nomenclador',\n  page: 'nomenclador',\n  fields: {\n    areaCubrir: 'Área a Cubrir',\n    capitulo: 'Capítulo',\n\n    codigo: 'Código',\n    complejidadPractica: 'Nivel de complejidad',\n    descripcion: 'Descripción',\n    fechaNorma: 'Fecha de la norma',\n    modalidadPresentacion: 'Modalidad de Prestación ',\n    montoFijoMensual: 'Monto Fijo Mensual ',\n    numeroNormaRespaldatoria: 'Nº Norma respaldatoria',\n    periodoTope: 'Periodo del tope',\n    programaSanitario: 'Programa sanitario',\n    topesCoberturaPeriodo: 'Topes de cobertura por período',\n\n    valorIpross: 'Valor IPROSS',\n  },\n  optionsModalidadPresentacion: [\n    { label: 'Ambulatoria', value: 'ambulatoria' },\n    { label: 'Internación', value: 'internacion' },\n  ],\n  optionsPeriodoTope: [\n    { label: 'Día', value: 'dia' },\n    { label: 'Mes', value: 'mes' },\n    { label: 'Trimestre', value: 'trimestre' },\n    { label: 'Año', value: 'anio' },\n  ],\n\n  renders: {\n    capitulo: (rowData) => `${rowData.capitulo.capitulo}-${rowData.capitulo.descripcion}`,\n    fechaNorma: (rowData) => format(parseISO(rowData.fechaNorma), DATE_FORMAT),\n    modalidadPresentacion: (rowData) =>\n      NOMENCLADOR.optionsModalidadPresentacion.find(\n        (elem) => elem.value === rowData.modalidadPresentacion,\n      )?.label,\n    periodoTope: (rowData) =>\n      NOMENCLADOR.optionsPeriodoTope.find((elem) => elem.value === rowData.periodoTope)?.label,\n  },\n};\nconst CAPITULO = {\n  name: 'Capitulo',\n  route: 'capitulo',\n  page: 'capitulo',\n  fields: {\n    coseguro: 'Coseguro',\n    capitulo: 'Capítulo',\n\n    descripción: 'Descripción',\n  },\n\n  renders: {},\n};\n//Used by generator, dont remove this line #entitiesobject\n\nconst TABLE = {\n  labelRowsSelect: 'filas',\n  labelDisplayedRows: '{from}-{to} de {count}',\n  labelRowsPerPage: 'Filas por página',\n  firstAriaLabel: 'Primera página',\n  firstTooltip: 'Primera página',\n  previousAriaLabel: 'Anterior',\n  previousTooltip: 'Anterior',\n  nextAriaLabel: 'Siguiente',\n  nextTooltip: 'Siguiente',\n  lastAriaLabel: 'Última página',\n  lastTooltip: 'Última página',\n  actions: 'Acciones',\n};\nconst LOGIN = {\n  passwordRecoveryMessage: 'Contacte al administrador de LDAP: adminldap@dominio.com',\n  passwordRecoveryButton: 'Olvide mi contraseña',\n  signIn: 'Entrar',\n  logout: 'Salir',\n};\nconst SOLICITUDES = {\n  name: 'Solicitudes',\n  route: 'api/solicitudes',\n  page: 'solicitudes',\n  fields: {\n    estadoActual: 'Estado actual',\n    fechaAlta: 'Fecha de alta',\n    'delegacion.nombre': 'Delegación',\n    'afiliado.codigo': 'Afiliado',\n  },\n  renders: {\n    estadoActual: (rowData) =>\n      SOLICITUDES.optionsEstadoActual.find((elem) => elem.value === rowData.estadoActual)?.label,\n    fechaAlta: (rowData) => format(parseISO(rowData.fechaAlta), DATE_FORMAT),\n  },\n  optionsEstadoActual: [\n    { label: 'Sin pagos realizados', value: 'sinPagos' },\n    { label: 'Pago parcial', value: 'pagoParcial' },\n    { label: 'Pago total', value: 'pagoTotal' },\n  ],\n  customActions: {\n    addPresentacion: 'Agregar prestacion',\n  },\n};\n\nconst MAIN_ENTITIES = [\n  USERS,\n  NOMENCLADOR,\n  //Used by generator, dont remove this line #addtomenu\n  SOLICITUDES,\n];\n\nconst LOADING = (entity) => `Cargando ${entity}`;\n\nconst ERRORS = {\n  unknown: 'Error desconocido',\n  onGet: (entity) => `Error al obtener ${entity}`,\n  onCreate: (entity) => `Error al crear ${entity}`,\n  onDelete: (entity) => `Error al eliminar ${entity}`,\n  onUpdate: (entity) => `Error al actualizar ${entity}`,\n  onSync: (entity) => `Error al sincronizar ${entity}`,\n  onDeactivate: (entity) => `Error al desactivar ${entity}`,\n  onSetGroups: (entity) => `Error al modificar los roles del usuario`,\n  onSetDelegaciones: (entity) => 'Error al modificar las delegaciones del usuario',\n  inactiveUser: 'Tu cuenta está inactiva. Contactar al administrador: admin@dominio.com',\n  invalidLdap:\n    'Usuario o contraseña incorrecta. Contacte al administrador de LDAP: adminldap@dominio.com',\n};\n\nconst INFO = {\n  onSync: (entity, count) => {\n    count === 0\n      ? 'Todos los usuarios ya estan sincronizados'\n      : `Se sincronizaron ${count} ${entity}`;\n  },\n  setGroups: `Se actualizo correctamente el usuario`,\n  setDelegaciones: `Se actualizo correctamente el usuario`,\n  //Spinner message\n  working: 'Por favor espere...',\n};\n\nconst ACTIONS = {\n  crete: (entity) => `Crear ${entity}`,\n  delete: (entity) => `Eliminar ${entity}`,\n  update: (entity) => `Actualizar ${entity}`,\n};\n\nconst STEPPER_SOLICITUDES = {\n  add: 'Agregar solicitud',\n  end: 'Solicitud cargada, presione cerrar para terminar',\n  steps: [\n    {\n      title: 'Crear solicitud',\n      description: 'Complete los siguientes campos con la información de la solicitud:',\n    },\n    {\n      title: 'Agregar prestaciones',\n      description:\n        'Sube la factura para agregar la prestación. Una vez subida, completa el formulario',\n    },\n\n    { title: 'Guardar', description: 'Confirma los datos para guardar la solicitud' },\n    {\n      title: 'Agregar adjuntos(opcional)',\n      description: 'Agrega archivos adjuntos a las prestaciones de la lista',\n    },\n  ],\n  back: 'Atras',\n  next: 'Siguiente',\n  finish: 'Finalizar',\n  cancel: 'Cancelar',\n  close: 'Cerrar',\n  save: 'Guardar y terminar',\n  saveAndContinue: 'Guardar y agregar otra',\n  onSubmitSolicitud: {\n    title: 'Solicitud creada!',\n    message: 'Se creo nueva solicitud',\n    severity: 'success',\n  },\n  onSubmitFactura: {\n    title: 'Factura guardada!',\n    message:\n      'Se guardo la factura, completa los datos de la prestacion para continuar. Luego elige siguiente para terminar o guardar y agregar para seguir cargando prestaciones',\n    severity: 'success',\n  },\n  onSubmitPrestacion: (count) => ({\n    title: `${count}º Prestacion creada`,\n    message: `Se creo la ${count}º prestación`,\n    severity: 'success',\n  }),\n  onNewPrestacion: (count) => ({\n    title: 'Detalles prestación',\n    message: `Complete formulario con los detalles de la ${count}º prestación asociada a la solicitud`,\n    severity: 'info',\n  }),\n  onNewFactura: (count) => ({\n    title: 'Cargar factura',\n    message: `Suba el archivo de la factura correspondiente a la ${count}º prestación asociada a la solicitud`,\n    severity: 'info',\n  }),\n  onFinish: {\n    title: 'Proceso finalizado',\n    message: 'Solicitud completa, puede ver un resumen de los datos ingresados a continuación',\n    severity: 'info',\n  },\n};\nexport {\n  STEPPER_SOLICITUDES,\n  FORM_BUILDER,\n  USERS,\n  TABLE,\n  NOMENCLADOR,\n  MAIN_ENTITIES,\n  APP_NAME,\n  DATE_FORMAT,\n  LOADING,\n  ERRORS,\n  ACTIONS,\n  SOLICITUDES,\n  LOGIN,\n  INFO,\n  PRESTACIONES,\n  CAPITULO,\n\n  //Used by generator, dont remove this line #exportconsts\n};\n"]},"metadata":{},"sourceType":"module"}