{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Box, Button, Toolbar, Container, Typography, Grid } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { APP_NAME, LOGIN, MAIN_ENTITIES, ADMIN_ENTITIES, ACCOUNTS_ENTITIES } from '../../../labels';\nimport Cookies from 'universal-cookie';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleRoundedIcon from '@material-ui/icons/PeopleRounded';\nimport { Apartment, Contacts, FindInPage, Receipt } from '@material-ui/icons';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport Gavel from '@material-ui/icons/Gavel';\nimport PeopleOutline from '@material-ui/icons/PeopleOutline';\nimport PeopleAlt from '@material-ui/icons/PeopleAlt';\nimport Dns from '@material-ui/icons/Dns';\nimport Notifications from '@material-ui/icons/Notifications';\nimport ViewList from '@material-ui/icons/ViewList';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport useStyles from './NavbarStyle';\nexport default function NavBar() {\n  const router = useRouter();\n  const cookies = new Cookies();\n  const classes = useStyles();\n  const {\n    0: activeSections,\n    1: setActiveSections\n  } = useState([]);\n  const {\n    0: active,\n    1: setActive\n  } = useState('solicitudes');\n  const {\n    0: userName,\n    1: setUserName\n  } = useState('');\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: delegaciones,\n    1: setDelegaciones\n  } = useState([]);\n  const {\n    0: delegacion,\n    1: setDelegacion\n  } = useState('');\n  const NAV_BUTTONS = [{\n    label: 'Inicio',\n    action: () => {\n      router.push('solicitudes');\n    },\n    permissions: ['Administrador', 'AuditoriaAdministrativa', 'AuditoriaCentral', 'AuditoriaMedica', 'Contaduria', 'Delegado', 'Presidencia', 'Reintegro', 'SoloLectura', 'Tesoreria']\n  }, {\n    label: 'Cuentas Especiales',\n    action: () => {\n      router.push('cuentas_terceros');\n    },\n    permissions: ['Administrador', 'Reintegro', 'Delegado']\n  }, {\n    label: 'Configuracion',\n    action: () => {\n      router.push('nomenclador');\n    },\n    permissions: ['Administrador', 'Presidencia']\n  }];\n\n  const changeDelegacion = event => {\n    setDelegacion(event.target.value);\n  };\n\n  const showNotifications = () => {\n    console.log('Show notifications');\n  };\n\n  const sectionIcons = [{\n    section: 'solicitudes',\n    icon: /*#__PURE__*/_jsx(PeopleRoundedIcon, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'auditorias',\n    icon: /*#__PURE__*/_jsx(FindInPage, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'lotes',\n    icon: /*#__PURE__*/_jsx(ViewList, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'cuentas_terceros',\n    icon: /*#__PURE__*/_jsx(AccountBalance, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'cuentas_judiciales',\n    icon: /*#__PURE__*/_jsx(Gavel, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'usuarios',\n    icon: /*#__PURE__*/_jsx(PeopleAlt, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'afiliados',\n    icon: /*#__PURE__*/_jsx(PeopleOutline, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'nomenclador',\n    icon: /*#__PURE__*/_jsx(Dns, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'cupones',\n    icon: /*#__PURE__*/_jsx(Receipt, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'delegaciones',\n    icon: /*#__PURE__*/_jsx(Apartment, {\n      className: classes.sectionIcon\n    })\n  }, {\n    section: 'prestadores',\n    icon: /*#__PURE__*/_jsx(Contacts, {\n      className: classes.sectionIcon\n    })\n  }];\n\n  const getButtonIcon = section => {\n    const icon = sectionIcons.find(s => s.section === section);\n    return icon ? icon.icon : /*#__PURE__*/_jsx(_Fragment, {});\n  };\n\n  useEffect(() => {\n    // Active tabs\n    const currentRoute = router.route.replace('/', '');\n    const isAdminRoute = ADMIN_ENTITIES.find(e => e.page === currentRoute);\n    const isAccountRoute = ACCOUNTS_ENTITIES.find(e => e.page === currentRoute);\n    setActive(currentRoute);\n\n    if (isAdminRoute) {\n      setActiveSections(ADMIN_ENTITIES);\n    } else if (isAccountRoute) {\n      setActiveSections(ACCOUNTS_ENTITIES);\n    } else {\n      setActiveSections(MAIN_ENTITIES);\n    }\n\n    if (cookies.get('user')) {\n      setUser(cookies.get('user'));\n    }\n\n    if (cookies.get('username')) {\n      setUserName(cookies.get('username'));\n    }\n  }, [router.route]);\n  useEffect(() => {\n    if (user) {\n      var _user$delegaciones, _user$delegacionPrinc;\n\n      const delegaciones = (_user$delegaciones = user.delegaciones) === null || _user$delegaciones === void 0 ? void 0 : _user$delegaciones.map(d => {\n        return {\n          value: d.id,\n          label: d.nombre\n        };\n      });\n      setDelegaciones(delegaciones);\n      setDelegacion(user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id);\n    }\n  }, [user]);\n\n  const logout = () => {\n    cookies.remove('access');\n    cookies.remove('refresh');\n    cookies.remove('username');\n    cookies.remove('user');\n    router.push('login');\n  };\n\n  const hasUserPermissions = sectionPermissions => {\n    var hasPermissions = false;\n    user === null || user === void 0 ? void 0 : user.groups.forEach(group => {\n      if (sectionPermissions !== null && sectionPermissions !== void 0 && sectionPermissions.includes(group.name)) {\n        hasPermissions = true;\n      }\n    });\n    return hasPermissions;\n  };\n\n  return /*#__PURE__*/_jsxs(Grid, {\n    children: [/*#__PURE__*/_jsx(AppBar, {\n      className: classes.appMenu,\n      children: /*#__PURE__*/_jsxs(Toolbar, {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          src: \"/images/logo-ipross.png\",\n          alt: APP_NAME,\n          width: 143,\n          height: 63\n        }), /*#__PURE__*/_jsx(Box, {\n          display: \"flex\",\n          flexGrow: 1\n        }), NAV_BUTTONS.map((btn, i) => {\n          if (hasUserPermissions(btn.permissions)) {\n            return /*#__PURE__*/_jsx(Button, {\n              className: classes.menuBtn,\n              onClick: btn.action,\n              children: btn.label\n            }, i);\n          }\n        }), user !== null && user !== void 0 && user.casaCentral ? /*#__PURE__*/_jsxs(Box, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsx(HomeIcon, {\n            className: classes.delegacionPrincipal\n          }), /*#__PURE__*/_jsx(Typography, {\n            className: classes.delegacionPrincipal,\n            children: \"Casa Central\"\n          })]\n        }) : /*#__PURE__*/_jsx(FormControl, {\n          children: /*#__PURE__*/_jsx(Select, {\n            id: \"delegacion-select\",\n            className: classes.delegacionSelect,\n            value: delegacion,\n            onChange: changeDelegacion,\n            title: \"Delegaci\\xF3n\",\n            children: delegaciones.map((del, i) => {\n              return /*#__PURE__*/_jsx(MenuItem, {\n                className: classes.delegacionSelectItem,\n                value: del.value,\n                children: del.label\n              }, i);\n            })\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          className: classes.menuBtn,\n          onClick: showNotifications,\n          children: /*#__PURE__*/_jsx(Notifications, {})\n        }), /*#__PURE__*/_jsxs(Button, {\n          className: classes.menuBtn,\n          onClick: logout,\n          children: [LOGIN.logout, \" (\", userName, \")\"]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Container, {\n      children: /*#__PURE__*/_jsx(Box, {\n        className: classes.sectionsMenu,\n        children: activeSections.map((me, i) => {\n          if (hasUserPermissions(me.tabPermissions)) {\n            return /*#__PURE__*/_jsxs(Button, {\n              className: `${classes.sectionBtn} ${me.page === active ? 'active' : ''}`,\n              color: \"inherit\",\n              onClick: () => router.push(me.page),\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                className: classes.sectionIconWrapper,\n                children: getButtonIcon(me.page)\n              }), /*#__PURE__*/_jsx(\"span\", {\n                className: classes.sectionName,\n                children: me.name\n              })]\n            }, i);\n          }\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}