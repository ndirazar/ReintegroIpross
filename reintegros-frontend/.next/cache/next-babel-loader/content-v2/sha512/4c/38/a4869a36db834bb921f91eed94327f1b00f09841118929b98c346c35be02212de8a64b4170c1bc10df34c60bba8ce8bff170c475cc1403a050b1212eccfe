{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport useSWR from 'swr';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ActionBar from '../../common/ActionBar';\nimport { ACTIONS, ERRORS, LOADING, CUENTAS_TERCEROS } from '../../../labels';\nimport CuentasTercerosList from './CuentasTercerosList';\nimport CuentasTercerosForm from './CuentasTercerosForm';\nimport { remove, send } from '../../api-call/service';\nimport Alert from '../../common/Alert';\nimport Loading from '../../common/Loading';\nexport default function CuentasTerceros() {\n  const {\n    data,\n    error: errotOnGet,\n    mutate\n  } = useSWR(`api/${CUENTAS_TERCEROS.route}/`);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const cuentasactions = [{\n    label: ACTIONS.crete(CUENTAS_TERCEROS.name),\n    onClick: () => {\n      setCurrentData({});\n      setOpenForm(!openForm);\n    },\n    icon: /*#__PURE__*/_jsx(SaveIcon, {})\n  }];\n\n  const handleSubmit = async data => {\n    console.log('ACA2');\n    const formData = new FormData();\n    console.log('handleSubmit', {\n      data\n    }); // return false\n\n    formData.append('apellido', data.apellido);\n    formData.append('nombre', data.nombre);\n    formData.append('cbu', data.cbu);\n    formData.append('cuitCuil', data.cuitCuil);\n    formData.append('delegacion', data.delegacion);\n    formData.append('responsableDeCarga', data.responsableDeCarga);\n\n    if (data.adjuntos.length > 1) {\n      for (var x = 0; x < data.adjuntos.length; x++) {\n        formData.append('adjuntos', data.adjuntos[x]);\n      }\n    } else {\n      formData.append('adjuntos', data.adjuntos);\n    }\n\n    try {\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        // await put(`api/${CUENTAS_TERCEROS.route}`, formData, currentData?.id);\n        await send({\n          url: `api/${CUENTAS_TERCEROS.route}/${currentData === null || currentData === void 0 ? void 0 : currentData.id}/`,\n          data: formData,\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        await send({\n          url: `api/${CUENTAS_TERCEROS.route}/`,\n          data: formData,\n          method: 'POST',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }); // await post(`api/${CUENTAS_TERCEROS.route}`, formData);\n      }\n\n      setError(null);\n      handleCancel();\n      mutate();\n    } catch (error) {\n      console.log(error);\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        setError('onUpdate');\n      } else {\n        setError('onCreate');\n      }\n    }\n  };\n\n  const handleCancel = async () => {\n    console.log('ACA');\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    console.log('handleDelete', id);\n\n    try {\n      await remove(`api/${CUENTAS_TERCEROS.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onEdit = async data => {\n    var _data$responsableDeCa, _data$delegacion;\n\n    console.log('onEdit');\n    setOpenForm(false);\n    setCurrentData({\n      id: data.id,\n      nombre: data.nombre,\n      apellido: data.apellido,\n      cbu: data.cbu,\n      cuitCuil: data.cuitCuil,\n      autorizacionFinal: data.autorizacionFinal,\n      responsableDeCarga: String((_data$responsableDeCa = data.responsableDeCarga) === null || _data$responsableDeCa === void 0 ? void 0 : _data$responsableDeCa.id),\n      delegacion: String((_data$delegacion = data.delegacion) === null || _data$delegacion === void 0 ? void 0 : _data$delegacion.id),\n      adjuntos: null\n    });\n    setOpenForm(true);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ActionBar, {\n      actions: cuentasactions\n    }), /*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsx(CuentasTercerosForm, {\n        data: currentData,\n        handleSubmit: handleSubmit,\n        handleCancel: handleCancel\n      }), data && /*#__PURE__*/_jsx(CuentasTercerosList, {\n        data: data,\n        handleDelete: handleDelete,\n        onEdit: onEdit\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(CUENTAS_TERCEROS.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errotOnGet || error,\n      severity: \"error\",\n      message: error ? ERRORS[error](CUENTAS_TERCEROS.name) : ERRORS.onGet(CUENTAS_TERCEROS.name)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}