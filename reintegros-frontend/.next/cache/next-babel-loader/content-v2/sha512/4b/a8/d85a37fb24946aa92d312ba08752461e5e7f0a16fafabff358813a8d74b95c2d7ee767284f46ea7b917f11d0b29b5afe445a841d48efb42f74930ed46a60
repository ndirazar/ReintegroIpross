{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Form from '../../builder/Form';\nimport configCuentasTerceros from './FormConfig';\nimport { CUENTAS_TERCEROS } from '../../../labels';\nimport { FieldType } from '../../builder/FormField';\nimport { get, send } from '../../api-call/service';\nexport default function CuentasTercerosForm({\n  handleSubmit,\n  data,\n  handleCancel,\n  handleSetAfiliado\n}) {\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(data);\n  const {\n    0: showForm,\n    1: setShowForm\n  } = useState(true);\n  const {\n    0: afiliados,\n    1: setAfiliados\n  } = useState([]);\n  const conf = [{\n    name: 'afiliado',\n    type: FieldType.options,\n    label: CUENTAS_TERCEROS.fields['afiliado'],\n    options: async () => {\n      return (await get('api/afiliados')).data.results.map(d => ({\n        value: d.id,\n        label: d.numeroAfiliado + ' ' + d.nombre + ' ' + d.apellido\n      }));\n    },\n    onUpdate: async (value, form) => {\n      const regex = /^[0-9]{2}-[0-9]{8}\\/[0-9]{2}$/;\n      const isValid = value.match(regex);\n\n      if (isValid) {\n        console.log('Get afiliado');\n\n        try {\n          const val = await send({\n            url: `api/verificar/afiliado`,\n            data: {\n              afiliado: value\n            },\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n          const nc = _objectSpread(_objectSpread({}, data), {}, {\n            afiliado: val.data.afiliado.id,\n            nombre: val.data.afiliado.nombre,\n            apellido: val.data.afiliado.apellido\n          });\n\n          console.log('sendAfiliado', nc); // form.setValue('afiliado', val.data.afiliado.id);\n\n          setShowForm(false);\n          setCurrentData(nc);\n          setShowForm(true); // setAfiliado(response.data.afiliado.id);\n          // setNombre(response.data.afiliado.nombre);\n          // setApellido(response.data.afiliado.apellido);\n        } catch (error) {\n          // alert(error.data.message);\n          console.log(error);\n        } // form.setValue('afiliado' as any, val.data.afiliado.id);\n        // form.setValue('nombre' as any, val.data.afiliado.nombre);\n        // form.setValue('apellido' as any, val.data.afiliado.apellido);\n        // console.log({ afiliado: val.data.afiliado });\n        // console.log(form.getValues()['afiliado']);\n        // console.log({ value });\n        // value = 'sarasa';\n\n      } // // const val = await post('api/verificar/afiliado', { afiliado: value });\n      // console.log({ val });\n      // return false;\n\n    },\n    styling: {\n      columns: 4\n    },\n    rules: {\n      required: true\n    }\n  }, ...configCuentasTerceros];\n  return /*#__PURE__*/_jsx(Box, {\n    children: showForm && /*#__PURE__*/_jsx(Form, {\n      config: conf,\n      data: currentData,\n      onSubmit: handleSubmit,\n      onCancel: handleCancel\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}