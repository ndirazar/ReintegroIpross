{"ast":null,"code":"import { CUENTAS_TERCEROS } from '../../../labels';\nimport { get } from '../../api-call/service';\nimport { FieldType } from '../../builder/FormField';\nconst configCuentasTerceros = [{\n  name: 'nombre',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['nombre'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'apellido',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['apellido'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'cuitCuil',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['cuitCuil'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 11\n  }\n}, {\n  name: 'cbu',\n  type: FieldType.string,\n  label: CUENTAS_TERCEROS.fields['cbu'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 22\n  }\n}, {\n  name: 'responsableDeCarga',\n  type: FieldType.options,\n  label: CUENTAS_TERCEROS.fields['responsableDeCarga'],\n  options: async () => {\n    return (await get('api/usuarios')).data.results.map(d => ({\n      value: d.id,\n      label: d.first_name + ' ' + d.last_name\n    }));\n  },\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'delegacion',\n  type: FieldType.options,\n  label: CUENTAS_TERCEROS.fields.delegacion,\n  options: async () => {\n    return (await get('api/delegaciones')).data.results.map(d => ({\n      value: d.id,\n      label: d.nombre\n    }));\n  },\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'adjuntos',\n  type: FieldType.file,\n  label: CUENTAS_TERCEROS.fields.adjuntos,\n  styling: {\n    columns: 3\n  },\n  rules: {\n    required: true\n  },\n  multiple: true\n}];\nexport default configCuentasTerceros;","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/cuentas/terceros/FormConfig.ts"],"names":["CUENTAS_TERCEROS","get","FieldType","configCuentasTerceros","name","type","string","label","fields","styling","columns","rules","required","minLength","options","data","results","map","d","value","id","first_name","last_name","delegacion","nombre","file","adjuntos","multiple"],"mappings":"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","sourcesContent":["import { CUENTAS_TERCEROS } from '../../../labels';\nimport { get } from '../../api-call/service';\nimport { FormConfig } from '../../builder/FormConfig';\nimport { FieldType } from '../../builder/FormField';\nimport { FormDataCuentasTerceros } from './types';\n\nconst configCuentasTerceros: FormConfig<FormDataCuentasTerceros> = [\n  {\n    name: 'nombre',\n    type: FieldType.string,\n    label: CUENTAS_TERCEROS.fields['nombre'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'apellido',\n    type: FieldType.string,\n    label: CUENTAS_TERCEROS.fields['apellido'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'cuitCuil',\n    type: FieldType.string,\n    label: CUENTAS_TERCEROS.fields['cuitCuil'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n      minLength: 11,\n    },\n  },\n  {\n    name: 'cbu',\n    type: FieldType.string,\n    label: CUENTAS_TERCEROS.fields['cbu'],\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n      minLength: 22,\n    },\n  },\n  {\n    name: 'responsableDeCarga',\n    type: FieldType.options,\n    label: CUENTAS_TERCEROS.fields['responsableDeCarga'],\n    options: async () => {\n      return (await get('api/usuarios')).data.results.map((d) => ({\n        value: d.id,\n        label: d.first_name + ' ' + d.last_name,\n      }));\n    },\n    styling: {\n      columns: 4,\n    },\n    rules: {\n      required: true,\n    },\n  },\n  {\n    name: 'delegacion',\n    type: FieldType.options,\n    label: CUENTAS_TERCEROS.fields.delegacion,\n    options: async () => {\n      return (await get('api/delegaciones')).data.results.map((d) => ({\n        value: d.id,\n        label: d.nombre,\n      }));\n    },\n    styling: {\n      columns: 4,\n    },\n  },\n  {\n    name: 'adjuntos',\n    type: FieldType.file,\n    label: CUENTAS_TERCEROS.fields.adjuntos,\n    styling: {\n      columns: 3,\n    },\n    rules: {\n      required: true,\n    },\n    multiple: true,\n  },\n];\n\nexport default configCuentasTerceros;\n"]},"metadata":{},"sourceType":"module"}