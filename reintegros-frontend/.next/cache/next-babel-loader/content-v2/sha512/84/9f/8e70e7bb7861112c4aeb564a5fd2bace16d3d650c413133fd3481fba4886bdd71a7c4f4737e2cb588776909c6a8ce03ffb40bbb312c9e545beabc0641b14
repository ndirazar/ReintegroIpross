{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Divider, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport useSWR from 'swr';\nimport NomencladorForm from './NomencladorForm';\nimport NomencladorImportForm from './NomencladorImportForm';\nimport NomencladorList from './NomencladorList';\nimport { post, put, remove, send } from '../api-call/service';\nimport { format } from 'date-fns';\nimport Loading from '../common/Loading';\nimport { ERRORS, LOADING, NOMENCLADOR } from '../../labels';\nimport Alert from '../common/Alert';\nimport Modal from '../common/Modal';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport SubTitleImportModal from './SubTitleImportModal';\nexport default function Nomenclador() {\n  const {\n    data,\n    error: errotOnGet,\n    mutate\n  } = useSWR(`api/${NOMENCLADOR.route}/`);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n  const {\n    0: openFormImport,\n    1: setOpenFormImport\n  } = useState(false);\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(false);\n  const {\n    0: dataPreview,\n    1: setDataPreview\n  } = useState([]);\n  const {\n    0: attachedFile,\n    1: setAttachedFile\n  } = useState(null);\n  const {\n    0: info,\n    1: setInfo\n  } = useState(null);\n  const {\n    0: processing,\n    1: setProcessing\n  } = useState(false);\n\n  const handleSubmit = async data => {\n    try {\n      data.fechaNorma = format(data.fechaNorma, 'yyyy-MM-dd');\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        await put(`api/${NOMENCLADOR.route}/`, _objectSpread({}, data), currentData === null || currentData === void 0 ? void 0 : currentData.id);\n      } else {\n        console.log(data);\n        await post(`api/${NOMENCLADOR.route}`, _objectSpread({}, data));\n      }\n\n      setError(null);\n    } catch (error) {\n      console.log(error);\n\n      if (currentData !== null && currentData !== void 0 && currentData.id) {\n        setError('onEdit');\n      } else {\n        setError('onCreate');\n      }\n    }\n\n    handleCancel();\n    mutate();\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await remove(`api/${NOMENCLADOR.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onEdit = async data => {\n    setCurrentData(data);\n    setOpenForm(true);\n  };\n\n  const handleCancelImport = async () => {\n    setOpenFormImport(false);\n    setOpenModal(false);\n  };\n\n  const handleSubmitImport = async data => {\n    const formData = new FormData();\n    formData.append('nomenclador', data.archivoAdjunto);\n    setAttachedFile(data.archivoAdjunto);\n    setOpenModal(!openModal);\n    const preview = await send({\n      url: `api/verificador-nomenclador`,\n      data: formData,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    console.log(preview.data);\n    setDataPreview(preview.data);\n  };\n\n  const handleConfirmImportModal = async () => {\n    const formData = new FormData();\n    formData.append('nomenclador', attachedFile);\n    setProcessing(true);\n    await send({\n      url: `api/importar-nomenclador`,\n      data: formData,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setProcessing(false);\n    setInfo(NOMENCLADOR.messages.successfulImportNomenclador);\n    setOpenModal(false);\n    setOpenFormImport(false);\n  };\n\n  const openCreateModal = () => {\n    setOpenForm(!openForm);\n    setOpenFormImport(false);\n  };\n\n  const openImportModal = () => {\n    setOpenFormImport(!openFormImport);\n    setOpenForm(false);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsx(NomencladorForm, {\n        data: currentData,\n        handleSubmit: handleSubmit,\n        handleCancel: handleCancel\n      }), openFormImport && /*#__PURE__*/_jsx(NomencladorImportForm, {\n        data: {},\n        handleSubmit: handleSubmitImport,\n        handleCancel: handleCancelImport\n      }), data && /*#__PURE__*/_jsx(NomencladorList, {\n        data: data,\n        handleDelete: handleDelete,\n        onEdit: onEdit,\n        onCreate: openCreateModal,\n        onImportNomenclador: openImportModal\n      })]\n    }), openModal && /*#__PURE__*/_jsxs(Modal, {\n      customClasses: {},\n      open: true,\n      onClose: () => setOpenModal(!openModal),\n      title: NOMENCLADOR.modalImportNomenclador,\n      breadcrumbs: '',\n      subTitle: /*#__PURE__*/_jsx(SubTitleImportModal, {\n        data: dataPreview\n      }),\n      actions: true,\n      onAcept: handleConfirmImportModal,\n      onCancel: handleCancelImport,\n      maxWidth: 'md',\n      children: [/*#__PURE__*/_jsx(List, {\n        children: dataPreview.map((item, index) => {\n          if (!item.is_valid) {\n            return /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsxs(Box, {\n                  children: [/*#__PURE__*/_jsx(Box, {\n                    fontWeight: \"fontWeightBold\",\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: /*#__PURE__*/_jsx(Box, {\n                        fontWeight: \"fontWeightBold\",\n                        children: `Fila: ${index + 1}`\n                      })\n                    })\n                  }), /*#__PURE__*/_jsxs(Box, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    ml: 5,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(ListItemText, {\n                        primary: \"No es v\\xE1lido\",\n                        secondary: /*#__PURE__*/_jsx(Typography, {\n                          color: \"error\",\n                          children: \"Errores:\"\n                        })\n                      })\n                    }), /*#__PURE__*/_jsx(Box, {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      children: item.errors.map(item => {\n                        return /*#__PURE__*/_jsx(ListItemText, {\n                          children: `- ${item}`\n                        });\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Divider, {})]\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsx(Loading, {\n        loading: dataPreview.length == 0 || processing,\n        message: NOMENCLADOR.messages.processingFileMessage\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(NOMENCLADOR.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errotOnGet || error || info,\n      severity: info ? 'success' : 'error',\n      message: info ? info : error ? ERRORS[error](NOMENCLADOR.name) : ERRORS.onGet(NOMENCLADOR.name),\n      autoHideAfter: 5500,\n      onClose: () => {\n        setError(null);\n        setInfo(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}