{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, List, ListItem, ListItemText, Typography, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport useSWR from 'swr';\nimport AuditoriasForm from './AuditoriasForm';\nimport AuditoriasList from './AuditoriasList';\nimport { post, remove } from '../api-call/service';\nimport Loading from '../common/Loading';\nimport { ERRORS, LOADING, AUDITORIAS, PRESTACIONES } from '../../labels';\nimport Alert from '../common/Alert';\nimport Modal from '../common/Modal';\nimport Cookies from 'universal-cookie';\nimport Link from '@material-ui/core/Link';\nconst cookies = new Cookies();\nconst user = cookies.get('user');\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function Auditorias() {\n  const {\n    data,\n    error: errotOnGet,\n    mutate\n  } = useSWR(PRESTACIONES.route);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState(null);\n  const classes = useStyles();\n  const documentacion = [{\n    titulo: 'Documentación:',\n    items: ['Factura / Recibo', 'Prescripción médica', 'Historia clínica (según tipo de prestación)', 'Estudios complementarios (según tipo de prestación)', 'Presupuesto (según tipo de prestación)', 'Derivación (según tipo de prestación)', 'Certificado de defunción', 'Troqueles / Stickers', 'Protocolo quirúrgico', 'Certificado de implante', 'Radiografía post operatoria']\n  }, {\n    titulo: 'Prestación realizada según diagnóstico y prescripción',\n    items: []\n  }, {\n    titulo: 'Fechas de Facturación y Comprobantes',\n    items: []\n  }];\n\n  const handleSubmit = async data => {\n    try {\n      await post(AUDITORIAS.route, {\n        prestacion: currentData === null || currentData === void 0 ? void 0 : currentData.id,\n        // auditorAsignado: user?.id,\n        actualizadoPor: user === null || user === void 0 ? void 0 : user.id,\n        motivoDeRechazo: data.motivoDeRechazo,\n        porcentajeDeCobertura: parseInt(data.cobertura),\n        montoAReintegrar: parseFloat(data.montoReintegrar)\n      });\n    } catch (error) {\n      //TODO handle error\n      setError('onAudit');\n      console.dir(error.response.statusText);\n    }\n\n    console.log({\n      errotOnGet\n    });\n    setCurrentData(null);\n    setOpenForm(false);\n    mutate();\n  };\n\n  const handleCancel = async () => {\n    setCurrentData(null);\n    setOpenForm(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await remove(`api/${AUDITORIAS.route}`, id);\n      setError(null);\n    } catch (error) {\n      setError('onDelete');\n    }\n\n    mutate();\n  };\n\n  const onAudit = async data => {\n    // Calculate montoAReintegrar\n    data.montoReintegrar = (parseFloat(data.valorIprossNomenclador) * (data.cobertura / 100)).toFixed(2);\n    setCurrentData(data);\n    setOpenForm(true);\n  }; // console.log(data.results);\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Box, {\n      p: 2,\n      m: 1,\n      children: [openForm && /*#__PURE__*/_jsxs(Modal, {\n        customClasses: {},\n        open: true,\n        onClose: () => setOpenForm(false),\n        title: 'Auditar prestación',\n        breadcrumbs: '',\n        subTitle: false,\n        actions: false,\n        onAcept: null,\n        onCancel: null,\n        maxWidth: 'sm',\n        children: [/*#__PURE__*/_jsx(AuditoriasForm, {\n          data: currentData,\n          handleSubmit: handleSubmit,\n          handleCancel: handleCancel\n        }), /*#__PURE__*/_jsx(List, {\n          subheader: /*#__PURE__*/_jsx(Typography, {\n            children: \"Verifica la documentaci\\xF3n requerida y cobertura definida:\"\n          }),\n          className: classes.root,\n          children: documentacion.map((item, index) => {\n            return /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsx(ListItemText, {\n                  primary: item.titulo\n                })\n              }), /*#__PURE__*/_jsx(List, {\n                children: item.items.map((item, index) => {\n                  return /*#__PURE__*/_jsx(ListItem, {\n                    className: classes.nested,\n                    children: /*#__PURE__*/_jsx(ListItemText, {\n                      primary: `- ${item}`\n                    })\n                  });\n                })\n              })]\n            });\n          })\n        }), /*#__PURE__*/_jsx(List, {\n          subheader: /*#__PURE__*/_jsx(Typography, {\n            children: \"Archivos adjuntos:\"\n          }),\n          children: data.results.map((item, index) => {\n            return item.adjuntos.map(value => {\n              var url = `${process.env.NEXT_PUBLIC_API}${value.archivo}`.replace('0//', '0/');\n              var url = url.replace('0//', '0/');\n              return /*#__PURE__*/_jsx(ListItem, {\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: `https://apistaging.ipross.rionegro.gov.ar${value.archivo}`,\n                    children: value.archivo\n                  })\n                })\n              });\n            });\n          })\n        })]\n      }), data && /*#__PURE__*/_jsx(AuditoriasList, {\n        data: data,\n        handleDelete: handleDelete,\n        onAudit: onAudit\n      })]\n    }), /*#__PURE__*/_jsx(Loading, {\n      loading: !data,\n      message: LOADING(AUDITORIAS.name)\n    }), /*#__PURE__*/_jsx(Alert, {\n      open: errotOnGet || error,\n      severity: \"error\",\n      message: error ? ERRORS[error](AUDITORIAS.name) : ERRORS.onGet(AUDITORIAS.name)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}