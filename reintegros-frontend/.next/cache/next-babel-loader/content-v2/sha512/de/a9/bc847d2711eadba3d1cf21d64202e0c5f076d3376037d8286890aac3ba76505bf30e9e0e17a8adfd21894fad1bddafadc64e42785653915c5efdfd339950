{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/reintegros/reintegros-frontend/components/common/Layout/NavBar.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Box, Button, Toolbar, Container, Typography, Grid, Badge, List, ListItem, ListItemText, Divider, Drawer, IconButton } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { APP_NAME, LOGIN, MAIN_ENTITIES, ADMIN_ENTITIES, ACCOUNTS_ENTITIES, NAVBAR } from '../../../labels';\nimport Cookies from 'universal-cookie';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleRoundedIcon from '@material-ui/icons/PeopleRounded';\nimport { Apartment, Contacts, FindInPage, Receipt } from '@material-ui/icons';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport Gavel from '@material-ui/icons/Gavel';\nimport PeopleOutline from '@material-ui/icons/PeopleOutline';\nimport PeopleAlt from '@material-ui/icons/PeopleAlt';\nimport Dns from '@material-ui/icons/Dns';\nimport Notifications from '@material-ui/icons/Notifications';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ViewList from '@material-ui/icons/ViewList';\nimport StarIcon from '@material-ui/icons/Star';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport useStyles from './NavbarStyle';\nimport Notificaciones from '../../notificaciones/Notificaciones';\nimport { send } from '../../api-call/service';\nimport { getUser } from '../helpers';\nexport default function NavBar() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(getUser());\n  const router = useRouter();\n  const cookies = new Cookies();\n  const classes = useStyles();\n  const {\n    0: activeSections,\n    1: setActiveSections\n  } = useState([]);\n  const {\n    0: active,\n    1: setActive\n  } = useState(user ? 'solicitudes' : 'login');\n  const {\n    0: userName,\n    1: setUserName\n  } = useState('');\n  const {\n    0: delegaciones,\n    1: setDelegaciones\n  } = useState([]);\n  const {\n    0: delegacion,\n    1: setDelegacion\n  } = useState('');\n  const {\n    0: displayNotifications,\n    1: setDisplayNotifications\n  } = useState(false);\n  const {\n    0: notifications,\n    1: setNotifications\n  } = useState(null);\n  const {\n    0: openDrawer,\n    1: setOpenDrawer\n  } = useState(false);\n  const {\n    0: mobileView,\n    1: setMobileView\n  } = useState(false);\n  const NAV_BUTTONS = [{\n    label: NAVBAR.home,\n    action: () => {\n      router.push('solicitudes');\n    },\n    permissions: ['Administrador', 'AuditoriaAdministrativa', 'AuditoriaCentral', 'AuditoriaMedica', 'Contaduria', 'Delegado', 'Presidencia', 'Reintegro', 'SoloLectura', 'Tesoreria']\n  }, {\n    label: NAVBAR.accounts,\n    action: () => {\n      router.push('cuentas_terceros');\n    },\n    permissions: ['Administrador', 'Reintegro', 'Delegado']\n  }, {\n    label: NAVBAR.config,\n    action: () => {\n      router.push('nomenclador');\n    },\n    permissions: ['Administrador', 'Presidencia']\n  }];\n  const {\n    0: navButtons,\n    1: setNavButtons\n  } = useState([]);\n\n  const changeDelegacion = async event => {\n    const user_response = await send({\n      url: `api/usuarios/${user === null || user === void 0 ? void 0 : user.id}/actualizar-delegacion-principal/`,\n      data: {\n        delegacionPrincipal: event.target.value\n      },\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setDelegacion(event.target.value);\n    localStorage.setItem('user', JSON.stringify(user_response.data));\n  };\n\n  const getNotifications = async () => {\n    const preview = await send({\n      url: `api/usuarios/${user.id}/notificaciones`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setNotifications(preview.data.notifications);\n  };\n  /**\n   * Funcion que se encarga de actualizar las notificaciones del usuario y de abrir y cerrar\n   * el listado no notificaciones\n   */\n\n\n  const showNotifications = async () => {\n    getNotifications();\n    setDisplayNotifications(!displayNotifications);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('notifications', JSON.stringify(notifications));\n  }, [notifications]);\n  const sectionIcons = [{\n    section: 'solicitudes',\n    icon: /*#__PURE__*/_jsxDEV(PeopleRoundedIcon, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'auditorias',\n    icon: /*#__PURE__*/_jsxDEV(FindInPage, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'lotes',\n    icon: /*#__PURE__*/_jsxDEV(ViewList, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'cuentas_terceros',\n    icon: /*#__PURE__*/_jsxDEV(AccountBalance, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'cuentas_judiciales',\n    icon: /*#__PURE__*/_jsxDEV(Gavel, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'usuarios',\n    icon: /*#__PURE__*/_jsxDEV(PeopleAlt, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'afiliados',\n    icon: /*#__PURE__*/_jsxDEV(PeopleOutline, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'nomenclador',\n    icon: /*#__PURE__*/_jsxDEV(Dns, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'cupones',\n    icon: /*#__PURE__*/_jsxDEV(Receipt, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'delegaciones',\n    icon: /*#__PURE__*/_jsxDEV(Apartment, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)\n  }, {\n    section: 'prestadores',\n    icon: /*#__PURE__*/_jsxDEV(Contacts, {\n      className: classes.sectionIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)\n  }];\n\n  const getButtonIcon = section => {\n    const icon = sectionIcons.find(s => s.section === section);\n    return icon ? icon.icon : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  useEffect(() => {\n    // Active tabs\n    const currentRoute = router.route.replace('/', '');\n    const isAdminRoute = ADMIN_ENTITIES.find(e => e.page === currentRoute);\n    const isAccountRoute = ACCOUNTS_ENTITIES.find(e => e.page === currentRoute);\n    setActive(currentRoute);\n\n    if (isAdminRoute) {\n      setActiveSections(ADMIN_ENTITIES);\n    } else if (isAccountRoute) {\n      setActiveSections(ACCOUNTS_ENTITIES);\n    } else {\n      setActiveSections(MAIN_ENTITIES);\n    }\n\n    if (cookies.get('username')) {\n      setUserName(cookies.get('username'));\n    }\n\n    if (localStorage.getItem('notifications')) {\n      setNotifications(JSON.parse(localStorage.getItem('notifications')));\n    }\n\n    getNotifications();\n  }, [router.route]);\n  useEffect(() => {\n    if (user) {\n      var _user$delegaciones, _user$delegacionPrinc, _delegaciones$;\n\n      const dels = (_user$delegaciones = user.delegaciones) === null || _user$delegaciones === void 0 ? void 0 : _user$delegaciones.map(d => {\n        return {\n          value: d.id,\n          label: d.nombre\n        };\n      });\n      setDelegaciones(dels);\n      setDelegacion((user === null || user === void 0 ? void 0 : (_user$delegacionPrinc = user.delegacionPrincipal) === null || _user$delegacionPrinc === void 0 ? void 0 : _user$delegacionPrinc.id) || ((_delegaciones$ = delegaciones[0]) === null || _delegaciones$ === void 0 ? void 0 : _delegaciones$.value) || '');\n      let NAV_BUTTONS = [{\n        label: NAVBAR.home,\n        action: () => {\n          router.push('solicitudes');\n        },\n        permissions: ['Administrador', 'AuditoriaAdministrativa', 'AuditoriaCentral', 'AuditoriaMedica', 'Contaduria', 'Delegado', 'Presidencia', 'Reintegro', 'SoloLectura', 'Tesoreria']\n      }, {\n        label: NAVBAR.accounts,\n        action: () => {\n          router.push('cuentas_terceros');\n        },\n        permissions: ['Administrador', 'Reintegro', 'Delegado']\n      }, {\n        label: NAVBAR.config,\n        action: () => {\n          router.push('nomenclador');\n        },\n        permissions: ['Administrador', 'Presidencia']\n      }];\n      setNavButtons(NAV_BUTTONS.filter(btn => hasUserPermissions(btn.permissions)));\n    }\n  }, [user]);\n\n  const logout = () => {\n    cookies.remove('access');\n    cookies.remove('refresh');\n    cookies.remove('username');\n    localStorage.removeItem('user');\n    localStorage.removeItem('notifications'); // router.push('login');\n\n    window.location.href = '/login';\n  };\n\n  const hasUserPermissions = sectionPermissions => {\n    var _user$groups;\n\n    var hasPermissions = false;\n    user === null || user === void 0 ? void 0 : (_user$groups = user.groups) === null || _user$groups === void 0 ? void 0 : _user$groups.forEach(group => {\n      if (sectionPermissions !== null && sectionPermissions !== void 0 && sectionPermissions.includes(group.name)) {\n        hasPermissions = true;\n      }\n    });\n    return hasPermissions;\n  };\n  /**\n   * Funcion que se encarga de verificar si hay al menos una notificacion sin leer.\n   */\n\n\n  const checkForMoreThanOneUnreadNotification = () => {\n    var unreadNotifications = true;\n    notifications === null || notifications === void 0 ? void 0 : notifications.forEach(notification => {\n      if (notification.visto == false) {\n        unreadNotifications = false;\n      }\n    });\n    return unreadNotifications;\n  };\n  /**\n   * Funcion que se encarga de actualizar las notitificaciones cuando\n   * el usuario las marca como vistas\n   */\n\n\n  const updateNotificaciones = notificaciones => {\n    setNotifications(notificaciones);\n  };\n  /**\n   * Funcion que se encargar de verificar segun la seccion del sistema si tiene notificaciones\n   * sin leer, esto sirve para activar el badge del boton de la seccion.\n   */\n\n\n  const checkForBadgeVisibility = section => {\n    switch (section.name) {\n      case 'Solicitudes':\n        const notificacionesSolicitudes = notifications === null || notifications === void 0 ? void 0 : notifications.filter(notificacion => {\n          return notificacion.tipo === 'solicitud' && notificacion.visto == false;\n        });\n\n        if ((notificacionesSolicitudes === null || notificacionesSolicitudes === void 0 ? void 0 : notificacionesSolicitudes.length) > 0) {\n          return false;\n        } else {\n          return true;\n        }\n\n      case 'Solicitudes Autorizadas':\n        const notificacionesAutorizaciones = notifications === null || notifications === void 0 ? void 0 : notifications.filter(notificacion => {\n          return notificacion.tipo === 'autorizacion' && notificacion.visto == false;\n        });\n\n        if ((notificacionesAutorizaciones === null || notificacionesAutorizaciones === void 0 ? void 0 : notificacionesAutorizaciones.length) > 0) {\n          return false;\n        } else {\n          return true;\n        }\n\n      default:\n        return true;\n    }\n  };\n\n  const toggleDrawer = open => event => {\n    setOpenDrawer(open);\n  };\n\n  const list = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mobileMenu,\n    role: \"presentation\",\n    onClick: toggleDrawer(false),\n    onKeyDown: toggleDrawer(false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `${user === null || user === void 0 ? void 0 : user.first_name} ${user === null || user === void 0 ? void 0 : user.last_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: showDelegacionSelect()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: NAV_BUTTONS.map((btn, i) => {\n        if (hasUserPermissions(btn.permissions)) {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: btn.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: logout,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: LOGIN.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900 ? setMobileView(true) : setMobileView(false);\n    };\n\n    setResponsiveness();\n    window.addEventListener('resize', () => setResponsiveness());\n    return () => {\n      window.removeEventListener('resize', () => setResponsiveness());\n    };\n  }, []);\n\n  const showDelegacionSelect = () => {\n    return user !== null && user !== void 0 && user.casaCentral ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(HomeIcon, {\n        className: classes.delegacionPrincipalIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.delegacionPrincipal,\n        children: \"Casa Central\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        id: \"delegacion-select\",\n        className: classes.delegacionSelect,\n        value: delegacion,\n        onChange: changeDelegacion,\n        title: \"Delegaci\\xF3n\",\n        children: delegaciones.map((del, i) => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            className: classes.delegacionSelectItem,\n            value: del.value,\n            children: del.value == delegacion ? /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: del.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, this) : del.label\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appMenu,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/logo-ipross.png\",\n          alt: APP_NAME,\n          width: 143,\n          height: 63,\n          className: classes.appLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexGrow: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), !mobileView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [NAV_BUTTONS.map((btn, i) => {\n            if (hasUserPermissions(btn.permissions)) {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.menuBtn,\n                onClick: btn.action,\n                children: btn.label\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this);\n            }\n          }), showDelegacionSelect()]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.menuBtn,\n            onClick: showNotifications,\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              color: \"primary\",\n              variant: \"dot\",\n              invisible: checkForMoreThanOneUnreadNotification(),\n              children: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              position: 'absolute',\n              top: '35px',\n              right: '-85px',\n              visibility: displayNotifications ? 'visible' : 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(Notificaciones, {\n              notificaciones: notifications,\n              onUpdateNotificaciones: updateNotificaciones\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), !mobileView && /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.menuBtn,\n          onClick: logout,\n          children: [LOGIN.logout, \" (\", userName, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), mobileView && /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: () => {\n            setOpenDrawer(!openDrawer);\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), mobileView && /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: openDrawer,\n      onClose: toggleDrawer(false),\n      children: list()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.sectionsMenu,\n        children: activeSections.map((me, i) => {\n          if (hasUserPermissions(me.tabPermissions)) {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              className: `${classes.sectionBtn} ${me.page === active ? 'active' : ''}`,\n              color: \"inherit\",\n              onClick: () => router.push(me.page),\n              style: {\n                width: 1200 / activeSections.length - 34,\n                maxWidth: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                color: \"primary\",\n                variant: \"dot\",\n                invisible: checkForBadgeVisibility(me),\n                className: classes.notificationBadge,\n                style: {\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.sectionIconWrapper,\n                    children: getButtonIcon(me.page)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.sectionName,\n                    children: me.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/reintegros/reintegros-frontend/components/common/Layout/NavBar.tsx"],"names":["React","useState","useEffect","AppBar","Box","Button","Toolbar","Container","Typography","Grid","Badge","List","ListItem","ListItemText","Divider","Drawer","IconButton","useRouter","APP_NAME","LOGIN","MAIN_ENTITIES","ADMIN_ENTITIES","ACCOUNTS_ENTITIES","NAVBAR","Cookies","HomeIcon","PeopleRoundedIcon","Apartment","Contacts","FindInPage","Receipt","AccountBalance","Gavel","PeopleOutline","PeopleAlt","Dns","Notifications","MenuIcon","ViewList","StarIcon","Select","MenuItem","FormControl","useStyles","Notificaciones","send","getUser","NavBar","user","setUser","router","cookies","classes","activeSections","setActiveSections","active","setActive","userName","setUserName","delegaciones","setDelegaciones","delegacion","setDelegacion","displayNotifications","setDisplayNotifications","notifications","setNotifications","openDrawer","setOpenDrawer","mobileView","setMobileView","NAV_BUTTONS","label","home","action","push","permissions","accounts","config","navButtons","setNavButtons","changeDelegacion","event","user_response","url","id","data","delegacionPrincipal","target","value","method","headers","localStorage","setItem","JSON","stringify","getNotifications","preview","showNotifications","sectionIcons","section","icon","sectionIcon","getButtonIcon","find","s","currentRoute","route","replace","isAdminRoute","e","page","isAccountRoute","get","getItem","parse","dels","map","d","nombre","filter","btn","hasUserPermissions","logout","remove","removeItem","window","location","href","sectionPermissions","hasPermissions","groups","forEach","group","includes","name","checkForMoreThanOneUnreadNotification","unreadNotifications","notification","visto","updateNotificaciones","notificaciones","checkForBadgeVisibility","notificacionesSolicitudes","notificacion","tipo","length","notificacionesAutorizaciones","toggleDrawer","open","list","mobileMenu","first_name","last_name","showDelegacionSelect","i","setResponsiveness","innerWidth","addEventListener","removeEventListener","casaCentral","delegacionPrincipalIcon","delegacionSelect","del","delegacionSelectItem","appMenu","appLogo","menuBtn","position","top","right","visibility","menuButton","sectionsMenu","me","tabPermissions","sectionBtn","width","maxWidth","notificationBadge","sectionIconWrapper","sectionName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  AppBar,\n  Box,\n  Button,\n  Toolbar,\n  Container,\n  Typography,\n  Grid,\n  Badge,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Drawer,\n  IconButton,\n} from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport {\n  APP_NAME,\n  LOGIN,\n  MAIN_ENTITIES,\n  ADMIN_ENTITIES,\n  ACCOUNTS_ENTITIES,\n  NAVBAR,\n} from '../../../labels';\nimport Cookies from 'universal-cookie';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleRoundedIcon from '@material-ui/icons/PeopleRounded';\nimport { Apartment, Contacts, FindInPage, Receipt } from '@material-ui/icons';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport Gavel from '@material-ui/icons/Gavel';\nimport PeopleOutline from '@material-ui/icons/PeopleOutline';\nimport PeopleAlt from '@material-ui/icons/PeopleAlt';\nimport Dns from '@material-ui/icons/Dns';\nimport Notifications from '@material-ui/icons/Notifications';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ViewList from '@material-ui/icons/ViewList';\nimport StarIcon from '@material-ui/icons/Star';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport useStyles from './NavbarStyle';\nimport Notificaciones from '../../notificaciones/Notificaciones';\nimport { send } from '../../api-call/service';\nimport { getUser } from '../helpers';\n\nexport default function NavBar() {\n  const [user, setUser] = useState(getUser());\n  const router = useRouter();\n  const cookies = new Cookies();\n  const classes = useStyles();\n  const [activeSections, setActiveSections] = useState([]);\n  const [active, setActive] = useState(user ? 'solicitudes' : 'login');\n  const [userName, setUserName] = useState('');\n  const [delegaciones, setDelegaciones] = useState([]);\n  const [delegacion, setDelegacion] = useState('');\n  const [displayNotifications, setDisplayNotifications] = useState(false);\n  const [notifications, setNotifications] = useState(null);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n  const NAV_BUTTONS = [\n    {\n      label: NAVBAR.home,\n      action: () => {\n        router.push('solicitudes');\n      },\n      permissions: [\n        'Administrador',\n        'AuditoriaAdministrativa',\n        'AuditoriaCentral',\n        'AuditoriaMedica',\n        'Contaduria',\n        'Delegado',\n        'Presidencia',\n        'Reintegro',\n        'SoloLectura',\n        'Tesoreria',\n      ],\n    },\n    {\n      label: NAVBAR.accounts,\n      action: () => {\n        router.push('cuentas_terceros');\n      },\n      permissions: ['Administrador', 'Reintegro', 'Delegado'],\n    },\n    {\n      label: NAVBAR.config,\n      action: () => {\n        router.push('nomenclador');\n      },\n      permissions: ['Administrador', 'Presidencia'],\n    },\n  ];\n  const [navButtons, setNavButtons] = useState([]);\n\n  const changeDelegacion = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const user_response = await send({\n      url: `api/usuarios/${user?.id}/actualizar-delegacion-principal/`,\n      data: { delegacionPrincipal: event.target.value },\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    setDelegacion(event.target.value as string);\n    localStorage.setItem('user', JSON.stringify(user_response.data));\n  };\n\n  const getNotifications = async () => {\n    const preview = await send({\n      url: `api/usuarios/${user.id}/notificaciones`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    setNotifications(preview.data.notifications);\n  };\n\n  /**\n   * Funcion que se encarga de actualizar las notificaciones del usuario y de abrir y cerrar\n   * el listado no notificaciones\n   */\n  const showNotifications = async () => {\n    getNotifications();\n    setDisplayNotifications(!displayNotifications);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('notifications', JSON.stringify(notifications));\n  }, [notifications]);\n\n  const sectionIcons = [\n    {\n      section: 'solicitudes',\n      icon: <PeopleRoundedIcon className={classes.sectionIcon} />,\n    },\n    {\n      section: 'auditorias',\n      icon: <FindInPage className={classes.sectionIcon} />,\n    },\n    {\n      section: 'lotes',\n      icon: <ViewList className={classes.sectionIcon} />,\n    },\n    {\n      section: 'cuentas_terceros',\n      icon: <AccountBalance className={classes.sectionIcon} />,\n    },\n    {\n      section: 'cuentas_judiciales',\n      icon: <Gavel className={classes.sectionIcon} />,\n    },\n    {\n      section: 'usuarios',\n      icon: <PeopleAlt className={classes.sectionIcon} />,\n    },\n    {\n      section: 'afiliados',\n      icon: <PeopleOutline className={classes.sectionIcon} />,\n    },\n    {\n      section: 'nomenclador',\n      icon: <Dns className={classes.sectionIcon} />,\n    },\n    {\n      section: 'cupones',\n      icon: <Receipt className={classes.sectionIcon} />,\n    },\n    {\n      section: 'delegaciones',\n      icon: <Apartment className={classes.sectionIcon} />,\n    },\n    {\n      section: 'prestadores',\n      icon: <Contacts className={classes.sectionIcon} />,\n    },\n  ];\n\n  const getButtonIcon = (section) => {\n    const icon = sectionIcons.find((s) => s.section === section);\n    return icon ? icon.icon : <></>;\n  };\n\n  useEffect(() => {\n    // Active tabs\n    const currentRoute = router.route.replace('/', '');\n    const isAdminRoute = ADMIN_ENTITIES.find((e) => e.page === currentRoute);\n    const isAccountRoute = ACCOUNTS_ENTITIES.find((e) => e.page === currentRoute);\n    setActive(currentRoute);\n    if (isAdminRoute) {\n      setActiveSections(ADMIN_ENTITIES);\n    } else if (isAccountRoute) {\n      setActiveSections(ACCOUNTS_ENTITIES);\n    } else {\n      setActiveSections(MAIN_ENTITIES);\n    }\n\n    if (cookies.get('username')) {\n      setUserName(cookies.get('username'));\n    }\n\n    if (localStorage.getItem('notifications')) {\n      setNotifications(JSON.parse(localStorage.getItem('notifications')));\n    }\n\n    getNotifications();\n  }, [router.route]);\n\n  useEffect(() => {\n    if (user) {\n      const dels = user.delegaciones?.map((d) => {\n        return {\n          value: d.id,\n          label: d.nombre,\n        };\n      });\n      setDelegaciones(dels);\n      setDelegacion(user?.delegacionPrincipal?.id || delegaciones[0]?.value || '');\n\n      let NAV_BUTTONS = [\n        {\n          label: NAVBAR.home,\n          action: () => {\n            router.push('solicitudes');\n          },\n          permissions: [\n            'Administrador',\n            'AuditoriaAdministrativa',\n            'AuditoriaCentral',\n            'AuditoriaMedica',\n            'Contaduria',\n            'Delegado',\n            'Presidencia',\n            'Reintegro',\n            'SoloLectura',\n            'Tesoreria',\n          ],\n        },\n        {\n          label: NAVBAR.accounts,\n          action: () => {\n            router.push('cuentas_terceros');\n          },\n          permissions: ['Administrador', 'Reintegro', 'Delegado'],\n        },\n        {\n          label: NAVBAR.config,\n          action: () => {\n            router.push('nomenclador');\n          },\n          permissions: ['Administrador', 'Presidencia'],\n        },\n      ];\n\n      setNavButtons(NAV_BUTTONS.filter((btn) => hasUserPermissions(btn.permissions)));\n    }\n  }, [user]);\n\n  const logout = () => {\n    cookies.remove('access');\n    cookies.remove('refresh');\n    cookies.remove('username');\n    localStorage.removeItem('user');\n    localStorage.removeItem('notifications');\n    // router.push('login');\n    window.location.href = '/login';\n  };\n\n  const hasUserPermissions = (sectionPermissions) => {\n    var hasPermissions = false;\n    user?.groups?.forEach((group) => {\n      if (sectionPermissions?.includes(group.name)) {\n        hasPermissions = true;\n      }\n    });\n    return hasPermissions;\n  };\n\n  /**\n   * Funcion que se encarga de verificar si hay al menos una notificacion sin leer.\n   */\n  const checkForMoreThanOneUnreadNotification = () => {\n    var unreadNotifications = true;\n    notifications?.forEach((notification) => {\n      if (notification.visto == false) {\n        unreadNotifications = false;\n      }\n    });\n    return unreadNotifications;\n  };\n\n  /**\n   * Funcion que se encarga de actualizar las notitificaciones cuando\n   * el usuario las marca como vistas\n   */\n  const updateNotificaciones = (notificaciones) => {\n    setNotifications(notificaciones);\n  };\n\n  /**\n   * Funcion que se encargar de verificar segun la seccion del sistema si tiene notificaciones\n   * sin leer, esto sirve para activar el badge del boton de la seccion.\n   */\n  const checkForBadgeVisibility = (section) => {\n    switch (section.name) {\n      case 'Solicitudes':\n        const notificacionesSolicitudes = notifications?.filter((notificacion) => {\n          return notificacion.tipo === 'solicitud' && notificacion.visto == false;\n        });\n        if (notificacionesSolicitudes?.length > 0) {\n          return false;\n        } else {\n          return true;\n        }\n      case 'Solicitudes Autorizadas':\n        const notificacionesAutorizaciones = notifications?.filter((notificacion) => {\n          return notificacion.tipo === 'autorizacion' && notificacion.visto == false;\n        });\n        if (notificacionesAutorizaciones?.length > 0) {\n          return false;\n        } else {\n          return true;\n        }\n      default:\n        return true;\n    }\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setOpenDrawer(open);\n  };\n\n  const list = () => (\n    <div\n      className={classes.mobileMenu}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        <ListItem>\n          <ListItemText primary={`${user?.first_name} ${user?.last_name}`} />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem>{showDelegacionSelect()}</ListItem>\n      </List>\n      <Divider />\n      <List>\n        {NAV_BUTTONS.map((btn, i) => {\n          if (hasUserPermissions(btn.permissions)) {\n            return (\n              <ListItem button key={i}>\n                <ListItemText primary={btn.label} />\n              </ListItem>\n            );\n          }\n        })}\n      </List>\n      <Divider />\n      <List>\n        <ListItem button onClick={logout}>\n          <ListItemText primary={LOGIN.logout} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900 ? setMobileView(true) : setMobileView(false);\n    };\n\n    setResponsiveness();\n    window.addEventListener('resize', () => setResponsiveness());\n\n    return () => {\n      window.removeEventListener('resize', () => setResponsiveness());\n    };\n  }, []);\n\n  const showDelegacionSelect = () => {\n    return user?.casaCentral ? (\n      <Box display=\"flex\">\n        <HomeIcon className={classes.delegacionPrincipalIcon} />\n        <Typography className={classes.delegacionPrincipal}>Casa Central</Typography>\n      </Box>\n    ) : (\n      <FormControl>\n        <Select\n          id=\"delegacion-select\"\n          className={classes.delegacionSelect}\n          value={delegacion}\n          onChange={changeDelegacion}\n          title=\"Delegación\"\n        >\n          {delegaciones.map((del, i) => {\n            return (\n              <MenuItem className={classes.delegacionSelectItem} key={i} value={del.value}>\n                {del.value == delegacion ? (\n                  <Box display=\"flex\">\n                    <StarIcon></StarIcon>\n                    <Typography>{del.label}</Typography>\n                  </Box>\n                ) : (\n                  del.label\n                )}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  return (\n    <Grid>\n      <AppBar className={classes.appMenu}>\n        <Toolbar>\n          <img\n            src=\"/images/logo-ipross.png\"\n            alt={APP_NAME}\n            width={143}\n            height={63}\n            className={classes.appLogo}\n          />\n          <Box display=\"flex\" flexGrow={1}></Box>\n          {!mobileView && (\n            <>\n              {NAV_BUTTONS.map((btn, i) => {\n                if (hasUserPermissions(btn.permissions)) {\n                  return (\n                    <Button className={classes.menuBtn} onClick={btn.action} key={i}>\n                      {btn.label}\n                    </Button>\n                  );\n                }\n              })}\n              {showDelegacionSelect()}\n            </>\n          )}\n\n          <Box style={{ position: 'relative' }}>\n            <Button className={classes.menuBtn} onClick={showNotifications}>\n              <Badge\n                color=\"primary\"\n                variant=\"dot\"\n                invisible={checkForMoreThanOneUnreadNotification()}\n              >\n                <Notifications />\n              </Badge>\n            </Button>\n            <Box\n              style={{\n                position: 'absolute',\n                top: '35px',\n                right: '-85px',\n                visibility: displayNotifications ? 'visible' : 'hidden',\n              }}\n            >\n              <Notificaciones\n                notificaciones={notifications}\n                onUpdateNotificaciones={updateNotificaciones}\n              />\n            </Box>\n          </Box>\n          {!mobileView && (\n            <Button className={classes.menuBtn} onClick={logout}>\n              {LOGIN.logout} ({userName})\n            </Button>\n          )}\n          {mobileView && (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => {\n                setOpenDrawer(!openDrawer);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n        </Toolbar>\n      </AppBar>\n      {mobileView && (\n        <Drawer anchor=\"left\" open={openDrawer} onClose={toggleDrawer(false)}>\n          {list()}\n        </Drawer>\n      )}\n      <Container>\n        <Box className={classes.sectionsMenu}>\n          {activeSections.map((me, i) => {\n            if (hasUserPermissions(me.tabPermissions)) {\n              return (\n                <Button\n                  className={`${classes.sectionBtn} ${me.page === active ? 'active' : ''}`}\n                  key={i}\n                  color=\"inherit\"\n                  onClick={() => router.push(me.page)}\n                  style={{\n                    width: 1200 / activeSections.length - 34,\n                    maxWidth: '100%',\n                  }}\n                >\n                  <Badge\n                    color=\"primary\"\n                    variant=\"dot\"\n                    invisible={checkForBadgeVisibility(me)}\n                    className={classes.notificationBadge}\n                    style={{ width: '100%' }}\n                  >\n                    <Box>\n                      <span className={classes.sectionIconWrapper}>{getButtonIcon(me.page)}</span>\n                      <span className={classes.sectionName}>{me.name}</span>\n                    </Box>\n                  </Badge>\n                </Button>\n              );\n            }\n          })}\n        </Box>\n      </Container>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}