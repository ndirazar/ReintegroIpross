{"ast":null,"code":"var _user$delegaciones;\n\nimport { CUENTAS_JUDICIALES } from '../../../labels';\nimport { get } from '../../api-call/service';\nimport { FieldType } from '../../builder/FormField';\nimport { getUser, isUserAdmin } from '../../common/helpers';\nconst user = getUser();\nconst configCuentasJudiciales = [{\n  name: 'afiliado',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields['afiliado'],\n  options: async (form, value) => {\n    var _await$get, _await$get$data;\n\n    const results = (_await$get = await get(`api/afiliados/?page=1&size=5&cuentaJudicial=true&numeroAfiliado=${value}`)) === null || _await$get === void 0 ? void 0 : (_await$get$data = _await$get.data) === null || _await$get$data === void 0 ? void 0 : _await$get$data.results;\n    return results.map(d => ({\n      value: d.id,\n      label: d.numeroAfiliado + ' - ' + d.nombre + ' ' + d.apellido + ' ',\n      afiliado: d\n    }));\n  },\n  onChange: async (value, form) => {\n    var _value$afiliado, _value$afiliado2, _value$afiliado3, _value$afiliado4;\n\n    form.setValue('afiliado', value);\n    form.setValue('nombre', (value === null || value === void 0 ? void 0 : (_value$afiliado = value.afiliado) === null || _value$afiliado === void 0 ? void 0 : _value$afiliado.nombre) || '');\n    form.setValue('apellido', (value === null || value === void 0 ? void 0 : (_value$afiliado2 = value.afiliado) === null || _value$afiliado2 === void 0 ? void 0 : _value$afiliado2.apellido) || '');\n    form.setValue('cuitCuil', (value === null || value === void 0 ? void 0 : (_value$afiliado3 = value.afiliado) === null || _value$afiliado3 === void 0 ? void 0 : _value$afiliado3.cuitCuil) || '');\n    form.setValue('cbu', (value === null || value === void 0 ? void 0 : (_value$afiliado4 = value.afiliado) === null || _value$afiliado4 === void 0 ? void 0 : _value$afiliado4.cbu) || '');\n  },\n  // onUpdate: async (value, form) => {\n  //   const regex = /^[0-9]{2}-[0-9]{8}\\/[0-9]{2}$/;\n  //   const isValid = value.match(regex);\n  //   if (isValid) {\n  //     try {\n  //       await send({\n  //         url: `api/verificar/afiliado`,\n  //         data: { afiliado: value },\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //       });\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  // },\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'nombre',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields.nombre,\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'apellido',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields.apellido,\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true\n  }\n}, {\n  name: 'delegacion',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields.delegacion,\n  options: user === null || user === void 0 ? void 0 : (_user$delegaciones = user.delegaciones) === null || _user$delegaciones === void 0 ? void 0 : _user$delegaciones.map(d => {\n    return {\n      value: d.id,\n      label: d.nombre\n    };\n  }),\n  styling: {\n    columns: 4\n  }\n}, {\n  name: 'informacionAdicional',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['informacionAdicional'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: false\n  }\n}, {\n  name: 'cuitCuil',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['cuitCuil'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 11\n  }\n}, {\n  name: 'cbu',\n  type: FieldType.string,\n  label: CUENTAS_JUDICIALES.fields['cbu'],\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: true,\n    minLength: 22\n  }\n}, {\n  name: 'estado',\n  label: 'Estado',\n  type: FieldType.options,\n  options: CUENTAS_JUDICIALES.optionsEstados,\n  disabled: !isUserAdmin(),\n  styling: {\n    columns: 3\n  }\n}, {\n  name: 'responsableDeCarga',\n  type: FieldType.options,\n  label: CUENTAS_JUDICIALES.fields['responsableDeCarga'],\n  options: async (form, value) => {\n    var _form$getValues, _form$getValues2;\n\n    return [{\n      value: (_form$getValues = form.getValues()) === null || _form$getValues === void 0 ? void 0 : _form$getValues.responsableDeCarga['value'],\n      label: (_form$getValues2 = form.getValues()) === null || _form$getValues2 === void 0 ? void 0 : _form$getValues2.responsableDeCarga['label']\n    }]; // return (await get('api/usuarios/')).data.results.map((d) => ({\n    //   value: d.id,\n    //   label: d.first_name + ' ' + d.last_name,\n    // }));\n  },\n  styling: {\n    columns: 4\n  },\n  rules: {\n    required: false\n  },\n  disabled: true\n}, {\n  name: 'oficioJudicial',\n  type: FieldType.file,\n  label: CUENTAS_JUDICIALES.fields.oficioJudicial,\n  accept: 'application/pdf',\n  styling: {\n    columns: 12\n  },\n  rules: {\n    required: true\n  },\n  multiple: false\n}];\nexport default configCuentasJudiciales;","map":null,"metadata":{},"sourceType":"module"}